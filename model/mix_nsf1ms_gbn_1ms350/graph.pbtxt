node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/normalize_tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 345
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 345
          }
        }
        string_val: "topology/tfrecords/mix/1001.tfrecords"
        string_val: "topology/tfrecords/mix/1002.tfrecords"
        string_val: "topology/tfrecords/mix/1003.tfrecords"
        string_val: "topology/tfrecords/mix/1005.tfrecords"
        string_val: "topology/tfrecords/mix/1006.tfrecords"
        string_val: "topology/tfrecords/mix/1007.tfrecords"
        string_val: "topology/tfrecords/mix/1008.tfrecords"
        string_val: "topology/tfrecords/mix/1009.tfrecords"
        string_val: "topology/tfrecords/mix/100.tfrecords"
        string_val: "topology/tfrecords/mix/1010.tfrecords"
        string_val: "topology/tfrecords/mix/1011.tfrecords"
        string_val: "topology/tfrecords/mix/1013.tfrecords"
        string_val: "topology/tfrecords/mix/1014.tfrecords"
        string_val: "topology/tfrecords/mix/1016.tfrecords"
        string_val: "topology/tfrecords/mix/1017.tfrecords"
        string_val: "topology/tfrecords/mix/1018.tfrecords"
        string_val: "topology/tfrecords/mix/1019.tfrecords"
        string_val: "topology/tfrecords/mix/101.tfrecords"
        string_val: "topology/tfrecords/mix/1021.tfrecords"
        string_val: "topology/tfrecords/mix/1022.tfrecords"
        string_val: "topology/tfrecords/mix/1023.tfrecords"
        string_val: "topology/tfrecords/mix/1024.tfrecords"
        string_val: "topology/tfrecords/mix/1026.tfrecords"
        string_val: "topology/tfrecords/mix/1027.tfrecords"
        string_val: "topology/tfrecords/mix/1028.tfrecords"
        string_val: "topology/tfrecords/mix/1029.tfrecords"
        string_val: "topology/tfrecords/mix/102.tfrecords"
        string_val: "topology/tfrecords/mix/1030.tfrecords"
        string_val: "topology/tfrecords/mix/1031.tfrecords"
        string_val: "topology/tfrecords/mix/1032.tfrecords"
        string_val: "topology/tfrecords/mix/1033.tfrecords"
        string_val: "topology/tfrecords/mix/1034.tfrecords"
        string_val: "topology/tfrecords/mix/1035.tfrecords"
        string_val: "topology/tfrecords/mix/1036.tfrecords"
        string_val: "topology/tfrecords/mix/1038.tfrecords"
        string_val: "topology/tfrecords/mix/1039.tfrecords"
        string_val: "topology/tfrecords/mix/1040.tfrecords"
        string_val: "topology/tfrecords/mix/1041.tfrecords"
        string_val: "topology/tfrecords/mix/1042.tfrecords"
        string_val: "topology/tfrecords/mix/1043.tfrecords"
        string_val: "topology/tfrecords/mix/1045.tfrecords"
        string_val: "topology/tfrecords/mix/1048.tfrecords"
        string_val: "topology/tfrecords/mix/1049.tfrecords"
        string_val: "topology/tfrecords/mix/104.tfrecords"
        string_val: "topology/tfrecords/mix/1051.tfrecords"
        string_val: "topology/tfrecords/mix/1052.tfrecords"
        string_val: "topology/tfrecords/mix/1053.tfrecords"
        string_val: "topology/tfrecords/mix/1054.tfrecords"
        string_val: "topology/tfrecords/mix/1055.tfrecords"
        string_val: "topology/tfrecords/mix/1056.tfrecords"
        string_val: "topology/tfrecords/mix/1058.tfrecords"
        string_val: "topology/tfrecords/mix/1059.tfrecords"
        string_val: "topology/tfrecords/mix/105.tfrecords"
        string_val: "topology/tfrecords/mix/1060.tfrecords"
        string_val: "topology/tfrecords/mix/1061.tfrecords"
        string_val: "topology/tfrecords/mix/1062.tfrecords"
        string_val: "topology/tfrecords/mix/1063.tfrecords"
        string_val: "topology/tfrecords/mix/1064.tfrecords"
        string_val: "topology/tfrecords/mix/1066.tfrecords"
        string_val: "topology/tfrecords/mix/1067.tfrecords"
        string_val: "topology/tfrecords/mix/1068.tfrecords"
        string_val: "topology/tfrecords/mix/1069.tfrecords"
        string_val: "topology/tfrecords/mix/106.tfrecords"
        string_val: "topology/tfrecords/mix/1070.tfrecords"
        string_val: "topology/tfrecords/mix/1072.tfrecords"
        string_val: "topology/tfrecords/mix/1074.tfrecords"
        string_val: "topology/tfrecords/mix/1075.tfrecords"
        string_val: "topology/tfrecords/mix/1076.tfrecords"
        string_val: "topology/tfrecords/mix/1077.tfrecords"
        string_val: "topology/tfrecords/mix/1078.tfrecords"
        string_val: "topology/tfrecords/mix/1079.tfrecords"
        string_val: "topology/tfrecords/mix/107.tfrecords"
        string_val: "topology/tfrecords/mix/1080.tfrecords"
        string_val: "topology/tfrecords/mix/1081.tfrecords"
        string_val: "topology/tfrecords/mix/1083.tfrecords"
        string_val: "topology/tfrecords/mix/1085.tfrecords"
        string_val: "topology/tfrecords/mix/1086.tfrecords"
        string_val: "topology/tfrecords/mix/1087.tfrecords"
        string_val: "topology/tfrecords/mix/1089.tfrecords"
        string_val: "topology/tfrecords/mix/108.tfrecords"
        string_val: "topology/tfrecords/mix/1090.tfrecords"
        string_val: "topology/tfrecords/mix/1091.tfrecords"
        string_val: "topology/tfrecords/mix/1092.tfrecords"
        string_val: "topology/tfrecords/mix/1093.tfrecords"
        string_val: "topology/tfrecords/mix/1095.tfrecords"
        string_val: "topology/tfrecords/mix/1096.tfrecords"
        string_val: "topology/tfrecords/mix/1097.tfrecords"
        string_val: "topology/tfrecords/mix/1099.tfrecords"
        string_val: "topology/tfrecords/mix/109.tfrecords"
        string_val: "topology/tfrecords/mix/10.tfrecords"
        string_val: "topology/tfrecords/mix/1100.tfrecords"
        string_val: "topology/tfrecords/mix/1102.tfrecords"
        string_val: "topology/tfrecords/mix/1104.tfrecords"
        string_val: "topology/tfrecords/mix/1106.tfrecords"
        string_val: "topology/tfrecords/mix/1107.tfrecords"
        string_val: "topology/tfrecords/mix/1108.tfrecords"
        string_val: "topology/tfrecords/mix/110.tfrecords"
        string_val: "topology/tfrecords/mix/1111.tfrecords"
        string_val: "topology/tfrecords/mix/1112.tfrecords"
        string_val: "topology/tfrecords/mix/1113.tfrecords"
        string_val: "topology/tfrecords/mix/1114.tfrecords"
        string_val: "topology/tfrecords/mix/1115.tfrecords"
        string_val: "topology/tfrecords/mix/1116.tfrecords"
        string_val: "topology/tfrecords/mix/1117.tfrecords"
        string_val: "topology/tfrecords/mix/1118.tfrecords"
        string_val: "topology/tfrecords/mix/1119.tfrecords"
        string_val: "topology/tfrecords/mix/111.tfrecords"
        string_val: "topology/tfrecords/mix/1120.tfrecords"
        string_val: "topology/tfrecords/mix/1122.tfrecords"
        string_val: "topology/tfrecords/mix/1123.tfrecords"
        string_val: "topology/tfrecords/mix/1124.tfrecords"
        string_val: "topology/tfrecords/mix/1126.tfrecords"
        string_val: "topology/tfrecords/mix/1127.tfrecords"
        string_val: "topology/tfrecords/mix/1128.tfrecords"
        string_val: "topology/tfrecords/mix/112.tfrecords"
        string_val: "topology/tfrecords/mix/1132.tfrecords"
        string_val: "topology/tfrecords/mix/1133.tfrecords"
        string_val: "topology/tfrecords/mix/1134.tfrecords"
        string_val: "topology/tfrecords/mix/1135.tfrecords"
        string_val: "topology/tfrecords/mix/1136.tfrecords"
        string_val: "topology/tfrecords/mix/1137.tfrecords"
        string_val: "topology/tfrecords/mix/1138.tfrecords"
        string_val: "topology/tfrecords/mix/1139.tfrecords"
        string_val: "topology/tfrecords/mix/113.tfrecords"
        string_val: "topology/tfrecords/mix/1140.tfrecords"
        string_val: "topology/tfrecords/mix/1142.tfrecords"
        string_val: "topology/tfrecords/mix/1144.tfrecords"
        string_val: "topology/tfrecords/mix/1145.tfrecords"
        string_val: "topology/tfrecords/mix/1146.tfrecords"
        string_val: "topology/tfrecords/mix/1147.tfrecords"
        string_val: "topology/tfrecords/mix/1148.tfrecords"
        string_val: "topology/tfrecords/mix/1149.tfrecords"
        string_val: "topology/tfrecords/mix/114.tfrecords"
        string_val: "topology/tfrecords/mix/1151.tfrecords"
        string_val: "topology/tfrecords/mix/1152.tfrecords"
        string_val: "topology/tfrecords/mix/1153.tfrecords"
        string_val: "topology/tfrecords/mix/1155.tfrecords"
        string_val: "topology/tfrecords/mix/1157.tfrecords"
        string_val: "topology/tfrecords/mix/1158.tfrecords"
        string_val: "topology/tfrecords/mix/1159.tfrecords"
        string_val: "topology/tfrecords/mix/115.tfrecords"
        string_val: "topology/tfrecords/mix/1160.tfrecords"
        string_val: "topology/tfrecords/mix/1161.tfrecords"
        string_val: "topology/tfrecords/mix/1162.tfrecords"
        string_val: "topology/tfrecords/mix/1165.tfrecords"
        string_val: "topology/tfrecords/mix/1166.tfrecords"
        string_val: "topology/tfrecords/mix/1167.tfrecords"
        string_val: "topology/tfrecords/mix/1169.tfrecords"
        string_val: "topology/tfrecords/mix/116.tfrecords"
        string_val: "topology/tfrecords/mix/1170.tfrecords"
        string_val: "topology/tfrecords/mix/1171.tfrecords"
        string_val: "topology/tfrecords/mix/1172.tfrecords"
        string_val: "topology/tfrecords/mix/1173.tfrecords"
        string_val: "topology/tfrecords/mix/1176.tfrecords"
        string_val: "topology/tfrecords/mix/1178.tfrecords"
        string_val: "topology/tfrecords/mix/1179.tfrecords"
        string_val: "topology/tfrecords/mix/117.tfrecords"
        string_val: "topology/tfrecords/mix/1180.tfrecords"
        string_val: "topology/tfrecords/mix/1181.tfrecords"
        string_val: "topology/tfrecords/mix/1182.tfrecords"
        string_val: "topology/tfrecords/mix/1184.tfrecords"
        string_val: "topology/tfrecords/mix/1185.tfrecords"
        string_val: "topology/tfrecords/mix/1186.tfrecords"
        string_val: "topology/tfrecords/mix/1187.tfrecords"
        string_val: "topology/tfrecords/mix/1188.tfrecords"
        string_val: "topology/tfrecords/mix/1189.tfrecords"
        string_val: "topology/tfrecords/mix/118.tfrecords"
        string_val: "topology/tfrecords/mix/1190.tfrecords"
        string_val: "topology/tfrecords/mix/1191.tfrecords"
        string_val: "topology/tfrecords/mix/1192.tfrecords"
        string_val: "topology/tfrecords/mix/1193.tfrecords"
        string_val: "topology/tfrecords/mix/1194.tfrecords"
        string_val: "topology/tfrecords/mix/1195.tfrecords"
        string_val: "topology/tfrecords/mix/1196.tfrecords"
        string_val: "topology/tfrecords/mix/1197.tfrecords"
        string_val: "topology/tfrecords/mix/1198.tfrecords"
        string_val: "topology/tfrecords/mix/1199.tfrecords"
        string_val: "topology/tfrecords/mix/119.tfrecords"
        string_val: "topology/tfrecords/mix/11.tfrecords"
        string_val: "topology/tfrecords/mix/1200.tfrecords"
        string_val: "topology/tfrecords/mix/1201.tfrecords"
        string_val: "topology/tfrecords/mix/1202.tfrecords"
        string_val: "topology/tfrecords/mix/1203.tfrecords"
        string_val: "topology/tfrecords/mix/1204.tfrecords"
        string_val: "topology/tfrecords/mix/1206.tfrecords"
        string_val: "topology/tfrecords/mix/1207.tfrecords"
        string_val: "topology/tfrecords/mix/1208.tfrecords"
        string_val: "topology/tfrecords/mix/1209.tfrecords"
        string_val: "topology/tfrecords/mix/120.tfrecords"
        string_val: "topology/tfrecords/mix/1210.tfrecords"
        string_val: "topology/tfrecords/mix/1211.tfrecords"
        string_val: "topology/tfrecords/mix/1212.tfrecords"
        string_val: "topology/tfrecords/mix/1213.tfrecords"
        string_val: "topology/tfrecords/mix/1214.tfrecords"
        string_val: "topology/tfrecords/mix/1215.tfrecords"
        string_val: "topology/tfrecords/mix/1216.tfrecords"
        string_val: "topology/tfrecords/mix/1217.tfrecords"
        string_val: "topology/tfrecords/mix/121.tfrecords"
        string_val: "topology/tfrecords/mix/1220.tfrecords"
        string_val: "topology/tfrecords/mix/1221.tfrecords"
        string_val: "topology/tfrecords/mix/1222.tfrecords"
        string_val: "topology/tfrecords/mix/1223.tfrecords"
        string_val: "topology/tfrecords/mix/122.tfrecords"
        string_val: "topology/tfrecords/mix/123.tfrecords"
        string_val: "topology/tfrecords/mix/124.tfrecords"
        string_val: "topology/tfrecords/mix/125.tfrecords"
        string_val: "topology/tfrecords/mix/126.tfrecords"
        string_val: "topology/tfrecords/mix/127.tfrecords"
        string_val: "topology/tfrecords/mix/12.tfrecords"
        string_val: "topology/tfrecords/mix/130.tfrecords"
        string_val: "topology/tfrecords/mix/131.tfrecords"
        string_val: "topology/tfrecords/mix/132.tfrecords"
        string_val: "topology/tfrecords/mix/133.tfrecords"
        string_val: "topology/tfrecords/mix/135.tfrecords"
        string_val: "topology/tfrecords/mix/136.tfrecords"
        string_val: "topology/tfrecords/mix/137.tfrecords"
        string_val: "topology/tfrecords/mix/138.tfrecords"
        string_val: "topology/tfrecords/mix/139.tfrecords"
        string_val: "topology/tfrecords/mix/13.tfrecords"
        string_val: "topology/tfrecords/mix/140.tfrecords"
        string_val: "topology/tfrecords/mix/141.tfrecords"
        string_val: "topology/tfrecords/mix/142.tfrecords"
        string_val: "topology/tfrecords/mix/143.tfrecords"
        string_val: "topology/tfrecords/mix/145.tfrecords"
        string_val: "topology/tfrecords/mix/146.tfrecords"
        string_val: "topology/tfrecords/mix/147.tfrecords"
        string_val: "topology/tfrecords/mix/148.tfrecords"
        string_val: "topology/tfrecords/mix/151.tfrecords"
        string_val: "topology/tfrecords/mix/154.tfrecords"
        string_val: "topology/tfrecords/mix/155.tfrecords"
        string_val: "topology/tfrecords/mix/156.tfrecords"
        string_val: "topology/tfrecords/mix/157.tfrecords"
        string_val: "topology/tfrecords/mix/158.tfrecords"
        string_val: "topology/tfrecords/mix/15.tfrecords"
        string_val: "topology/tfrecords/mix/160.tfrecords"
        string_val: "topology/tfrecords/mix/162.tfrecords"
        string_val: "topology/tfrecords/mix/163.tfrecords"
        string_val: "topology/tfrecords/mix/164.tfrecords"
        string_val: "topology/tfrecords/mix/165.tfrecords"
        string_val: "topology/tfrecords/mix/167.tfrecords"
        string_val: "topology/tfrecords/mix/168.tfrecords"
        string_val: "topology/tfrecords/mix/171.tfrecords"
        string_val: "topology/tfrecords/mix/173.tfrecords"
        string_val: "topology/tfrecords/mix/174.tfrecords"
        string_val: "topology/tfrecords/mix/175.tfrecords"
        string_val: "topology/tfrecords/mix/176.tfrecords"
        string_val: "topology/tfrecords/mix/177.tfrecords"
        string_val: "topology/tfrecords/mix/178.tfrecords"
        string_val: "topology/tfrecords/mix/179.tfrecords"
        string_val: "topology/tfrecords/mix/17.tfrecords"
        string_val: "topology/tfrecords/mix/180.tfrecords"
        string_val: "topology/tfrecords/mix/181.tfrecords"
        string_val: "topology/tfrecords/mix/183.tfrecords"
        string_val: "topology/tfrecords/mix/184.tfrecords"
        string_val: "topology/tfrecords/mix/185.tfrecords"
        string_val: "topology/tfrecords/mix/186.tfrecords"
        string_val: "topology/tfrecords/mix/187.tfrecords"
        string_val: "topology/tfrecords/mix/188.tfrecords"
        string_val: "topology/tfrecords/mix/189.tfrecords"
        string_val: "topology/tfrecords/mix/191.tfrecords"
        string_val: "topology/tfrecords/mix/192.tfrecords"
        string_val: "topology/tfrecords/mix/193.tfrecords"
        string_val: "topology/tfrecords/mix/194.tfrecords"
        string_val: "topology/tfrecords/mix/195.tfrecords"
        string_val: "topology/tfrecords/mix/197.tfrecords"
        string_val: "topology/tfrecords/mix/198.tfrecords"
        string_val: "topology/tfrecords/mix/199.tfrecords"
        string_val: "topology/tfrecords/mix/19.tfrecords"
        string_val: "topology/tfrecords/mix/1.tfrecords"
        string_val: "topology/tfrecords/mix/20.tfrecords"
        string_val: "topology/tfrecords/mix/21.tfrecords"
        string_val: "topology/tfrecords/mix/22.tfrecords"
        string_val: "topology/tfrecords/mix/23.tfrecords"
        string_val: "topology/tfrecords/mix/24.tfrecords"
        string_val: "topology/tfrecords/mix/25.tfrecords"
        string_val: "topology/tfrecords/mix/26.tfrecords"
        string_val: "topology/tfrecords/mix/27.tfrecords"
        string_val: "topology/tfrecords/mix/28.tfrecords"
        string_val: "topology/tfrecords/mix/29.tfrecords"
        string_val: "topology/tfrecords/mix/2.tfrecords"
        string_val: "topology/tfrecords/mix/30.tfrecords"
        string_val: "topology/tfrecords/mix/31.tfrecords"
        string_val: "topology/tfrecords/mix/32.tfrecords"
        string_val: "topology/tfrecords/mix/33.tfrecords"
        string_val: "topology/tfrecords/mix/34.tfrecords"
        string_val: "topology/tfrecords/mix/35.tfrecords"
        string_val: "topology/tfrecords/mix/37.tfrecords"
        string_val: "topology/tfrecords/mix/38.tfrecords"
        string_val: "topology/tfrecords/mix/39.tfrecords"
        string_val: "topology/tfrecords/mix/3.tfrecords"
        string_val: "topology/tfrecords/mix/40.tfrecords"
        string_val: "topology/tfrecords/mix/41.tfrecords"
        string_val: "topology/tfrecords/mix/42.tfrecords"
        string_val: "topology/tfrecords/mix/44.tfrecords"
        string_val: "topology/tfrecords/mix/45.tfrecords"
        string_val: "topology/tfrecords/mix/46.tfrecords"
        string_val: "topology/tfrecords/mix/48.tfrecords"
        string_val: "topology/tfrecords/mix/4.tfrecords"
        string_val: "topology/tfrecords/mix/50.tfrecords"
        string_val: "topology/tfrecords/mix/51.tfrecords"
        string_val: "topology/tfrecords/mix/52.tfrecords"
        string_val: "topology/tfrecords/mix/53.tfrecords"
        string_val: "topology/tfrecords/mix/54.tfrecords"
        string_val: "topology/tfrecords/mix/55.tfrecords"
        string_val: "topology/tfrecords/mix/56.tfrecords"
        string_val: "topology/tfrecords/mix/58.tfrecords"
        string_val: "topology/tfrecords/mix/5.tfrecords"
        string_val: "topology/tfrecords/mix/61.tfrecords"
        string_val: "topology/tfrecords/mix/63.tfrecords"
        string_val: "topology/tfrecords/mix/64.tfrecords"
        string_val: "topology/tfrecords/mix/65.tfrecords"
        string_val: "topology/tfrecords/mix/67.tfrecords"
        string_val: "topology/tfrecords/mix/68.tfrecords"
        string_val: "topology/tfrecords/mix/69.tfrecords"
        string_val: "topology/tfrecords/mix/6.tfrecords"
        string_val: "topology/tfrecords/mix/70.tfrecords"
        string_val: "topology/tfrecords/mix/71.tfrecords"
        string_val: "topology/tfrecords/mix/73.tfrecords"
        string_val: "topology/tfrecords/mix/74.tfrecords"
        string_val: "topology/tfrecords/mix/76.tfrecords"
        string_val: "topology/tfrecords/mix/77.tfrecords"
        string_val: "topology/tfrecords/mix/79.tfrecords"
        string_val: "topology/tfrecords/mix/7.tfrecords"
        string_val: "topology/tfrecords/mix/80.tfrecords"
        string_val: "topology/tfrecords/mix/81.tfrecords"
        string_val: "topology/tfrecords/mix/82.tfrecords"
        string_val: "topology/tfrecords/mix/83.tfrecords"
        string_val: "topology/tfrecords/mix/84.tfrecords"
        string_val: "topology/tfrecords/mix/85.tfrecords"
        string_val: "topology/tfrecords/mix/86.tfrecords"
        string_val: "topology/tfrecords/mix/87.tfrecords"
        string_val: "topology/tfrecords/mix/88.tfrecords"
        string_val: "topology/tfrecords/mix/89.tfrecords"
        string_val: "topology/tfrecords/mix/8.tfrecords"
        string_val: "topology/tfrecords/mix/90.tfrecords"
        string_val: "topology/tfrecords/mix/91.tfrecords"
        string_val: "topology/tfrecords/mix/92.tfrecords"
        string_val: "topology/tfrecords/mix/93.tfrecords"
        string_val: "topology/tfrecords/mix/94.tfrecords"
        string_val: "topology/tfrecords/mix/95.tfrecords"
        string_val: "topology/tfrecords/mix/96.tfrecords"
        string_val: "topology/tfrecords/mix/97.tfrecords"
        string_val: "topology/tfrecords/mix/98.tfrecords"
        string_val: "topology/tfrecords/mix/99.tfrecords"
        string_val: "topology/tfrecords/mix/9.tfrecords"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "tensors/normalize_tensors/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 345
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "cycle_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4
      }
    }
  }
}
node {
  name: "block_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "sloppy"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "buffer_output_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "prefetch_input_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 8
      }
    }
  }
}
node {
  name: "ExperimentalParallelInterleaveDataset"
  op: "ExperimentalParallelInterleaveDataset"
  input: "ShuffleDataset"
  input: "cycle_length"
  input: "block_length"
  input: "sloppy"
  input: "buffer_output_elements"
  input: "prefetch_input_elements"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "seed_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleAndRepeatDataset"
  op: "ShuffleAndRepeatDataset"
  input: "ExperimentalParallelInterleaveDataset"
  input: "buffer_size_1"
  input: "seed_1"
  input: "seed2_1"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "ShuffleAndRepeatDataset"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_<lambda>_99"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "sloppy"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "ParallelMapDataset"
  input: "buffer_size_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_lBp6ShTBAu8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_1"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_2"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_3"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_4"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_5"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_6"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_7"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max"
  op: "Max"
  input: "transformation_func/IteratorGetNext:1"
  input: "transformation_func/cummax/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add"
  op: "Add"
  input: "transformation_func/cummax/Max"
  input: "transformation_func/cummax/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_1"
  op: "Max"
  input: "transformation_func/IteratorGetNext_1:1"
  input: "transformation_func/cummax/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_1"
  op: "Add"
  input: "transformation_func/cummax/Max_1"
  input: "transformation_func/cummax/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_2"
  op: "Max"
  input: "transformation_func/IteratorGetNext_2:1"
  input: "transformation_func/cummax/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_2"
  op: "Add"
  input: "transformation_func/cummax/Max_2"
  input: "transformation_func/cummax/add_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_3"
  op: "Max"
  input: "transformation_func/IteratorGetNext_3:1"
  input: "transformation_func/cummax/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_3"
  op: "Add"
  input: "transformation_func/cummax/Max_3"
  input: "transformation_func/cummax/add_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_4"
  op: "Max"
  input: "transformation_func/IteratorGetNext_4:1"
  input: "transformation_func/cummax/Const_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_4"
  op: "Add"
  input: "transformation_func/cummax/Max_4"
  input: "transformation_func/cummax/add_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_5"
  op: "Max"
  input: "transformation_func/IteratorGetNext_5:1"
  input: "transformation_func/cummax/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_5"
  op: "Add"
  input: "transformation_func/cummax/Max_5"
  input: "transformation_func/cummax/add_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_6"
  op: "Max"
  input: "transformation_func/IteratorGetNext_6:1"
  input: "transformation_func/cummax/Const_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_6"
  op: "Add"
  input: "transformation_func/cummax/Max_6"
  input: "transformation_func/cummax/add_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_7"
  op: "Max"
  input: "transformation_func/IteratorGetNext_7:1"
  input: "transformation_func/cummax/Const_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_7"
  op: "Add"
  input: "transformation_func/cummax/Max_7"
  input: "transformation_func/cummax/add_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/zeros_like"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_1"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_2"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_3"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_4"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  input: "transformation_func/cummax/add_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_5"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  input: "transformation_func/cummax/add_5"
  input: "transformation_func/cummax/add_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max"
  op: "Max"
  input: "transformation_func/IteratorGetNext:5"
  input: "transformation_func/cummax_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add"
  op: "Add"
  input: "transformation_func/cummax_1/Max"
  input: "transformation_func/cummax_1/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_1"
  op: "Max"
  input: "transformation_func/IteratorGetNext_1:5"
  input: "transformation_func/cummax_1/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_1"
  op: "Add"
  input: "transformation_func/cummax_1/Max_1"
  input: "transformation_func/cummax_1/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_2"
  op: "Max"
  input: "transformation_func/IteratorGetNext_2:5"
  input: "transformation_func/cummax_1/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_2"
  op: "Add"
  input: "transformation_func/cummax_1/Max_2"
  input: "transformation_func/cummax_1/add_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_3"
  op: "Max"
  input: "transformation_func/IteratorGetNext_3:5"
  input: "transformation_func/cummax_1/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_3"
  op: "Add"
  input: "transformation_func/cummax_1/Max_3"
  input: "transformation_func/cummax_1/add_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_4"
  op: "Max"
  input: "transformation_func/IteratorGetNext_4:5"
  input: "transformation_func/cummax_1/Const_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_4"
  op: "Add"
  input: "transformation_func/cummax_1/Max_4"
  input: "transformation_func/cummax_1/add_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_5"
  op: "Max"
  input: "transformation_func/IteratorGetNext_5:5"
  input: "transformation_func/cummax_1/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_5"
  op: "Add"
  input: "transformation_func/cummax_1/Max_5"
  input: "transformation_func/cummax_1/add_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_6"
  op: "Max"
  input: "transformation_func/IteratorGetNext_6:5"
  input: "transformation_func/cummax_1/Const_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_6"
  op: "Add"
  input: "transformation_func/cummax_1/Max_6"
  input: "transformation_func/cummax_1/add_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_7"
  op: "Max"
  input: "transformation_func/IteratorGetNext_7:5"
  input: "transformation_func/cummax_1/Const_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_7"
  op: "Add"
  input: "transformation_func/cummax_1/Max_7"
  input: "transformation_func/cummax_1/add_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/zeros_like"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_1"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_2"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_3"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_4"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  input: "transformation_func/cummax_1/add_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_5"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  input: "transformation_func/cummax_1/add_5"
  input: "transformation_func/cummax_1/add_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:7"
  input: "transformation_func/IteratorGetNext_1:7"
  input: "transformation_func/IteratorGetNext_2:7"
  input: "transformation_func/IteratorGetNext_3:7"
  input: "transformation_func/IteratorGetNext_4:7"
  input: "transformation_func/IteratorGetNext_5:7"
  input: "transformation_func/IteratorGetNext_6:7"
  input: "transformation_func/IteratorGetNext_7:7"
  input: "transformation_func/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_1"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:6"
  input: "transformation_func/IteratorGetNext_1:6"
  input: "transformation_func/IteratorGetNext_2:6"
  input: "transformation_func/IteratorGetNext_3:6"
  input: "transformation_func/IteratorGetNext_4:6"
  input: "transformation_func/IteratorGetNext_5:6"
  input: "transformation_func/IteratorGetNext_6:6"
  input: "transformation_func/IteratorGetNext_7:6"
  input: "transformation_func/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_2"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext"
  input: "transformation_func/IteratorGetNext_1"
  input: "transformation_func/IteratorGetNext_2"
  input: "transformation_func/IteratorGetNext_3"
  input: "transformation_func/IteratorGetNext_4"
  input: "transformation_func/IteratorGetNext_5"
  input: "transformation_func/IteratorGetNext_6"
  input: "transformation_func/IteratorGetNext_7"
  input: "transformation_func/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add"
  op: "Add"
  input: "transformation_func/IteratorGetNext:1"
  input: "transformation_func/cummax/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_1"
  op: "Add"
  input: "transformation_func/IteratorGetNext_1:1"
  input: "transformation_func/cummax/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_2"
  op: "Add"
  input: "transformation_func/IteratorGetNext_2:1"
  input: "transformation_func/cummax/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_3"
  op: "Add"
  input: "transformation_func/IteratorGetNext_3:1"
  input: "transformation_func/cummax/AddN_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_4"
  op: "Add"
  input: "transformation_func/IteratorGetNext_4:1"
  input: "transformation_func/cummax/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_5"
  op: "Add"
  input: "transformation_func/IteratorGetNext_5:1"
  input: "transformation_func/cummax/AddN_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_6"
  op: "Add"
  input: "transformation_func/IteratorGetNext_6:1"
  input: "transformation_func/cummax/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_7"
  op: "Add"
  input: "transformation_func/IteratorGetNext_7:1"
  input: "transformation_func/cummax/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_3"
  op: "ConcatV2"
  input: "transformation_func/add"
  input: "transformation_func/add_1"
  input: "transformation_func/add_2"
  input: "transformation_func/add_3"
  input: "transformation_func/add_4"
  input: "transformation_func/add_5"
  input: "transformation_func/add_6"
  input: "transformation_func/add_7"
  input: "transformation_func/concat_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_8"
  op: "Add"
  input: "transformation_func/IteratorGetNext:5"
  input: "transformation_func/cummax_1/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_9"
  op: "Add"
  input: "transformation_func/IteratorGetNext_1:5"
  input: "transformation_func/cummax_1/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_10"
  op: "Add"
  input: "transformation_func/IteratorGetNext_2:5"
  input: "transformation_func/cummax_1/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_11"
  op: "Add"
  input: "transformation_func/IteratorGetNext_3:5"
  input: "transformation_func/cummax_1/AddN_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_12"
  op: "Add"
  input: "transformation_func/IteratorGetNext_4:5"
  input: "transformation_func/cummax_1/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_13"
  op: "Add"
  input: "transformation_func/IteratorGetNext_5:5"
  input: "transformation_func/cummax_1/AddN_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_14"
  op: "Add"
  input: "transformation_func/IteratorGetNext_6:5"
  input: "transformation_func/cummax_1/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_15"
  op: "Add"
  input: "transformation_func/IteratorGetNext_7:5"
  input: "transformation_func/cummax_1/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_4/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_4"
  op: "ConcatV2"
  input: "transformation_func/add_8"
  input: "transformation_func/add_9"
  input: "transformation_func/add_10"
  input: "transformation_func/add_11"
  input: "transformation_func/add_12"
  input: "transformation_func/add_13"
  input: "transformation_func/add_14"
  input: "transformation_func/add_15"
  input: "transformation_func/concat_4/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:2"
  input: "transformation_func/IteratorGetNext_1:2"
  input: "transformation_func/IteratorGetNext_2:2"
  input: "transformation_func/IteratorGetNext_3:2"
  input: "transformation_func/IteratorGetNext_4:2"
  input: "transformation_func/IteratorGetNext_5:2"
  input: "transformation_func/IteratorGetNext_6:2"
  input: "transformation_func/IteratorGetNext_7:2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN_1"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:3"
  input: "transformation_func/IteratorGetNext_1:3"
  input: "transformation_func/IteratorGetNext_2:3"
  input: "transformation_func/IteratorGetNext_3:3"
  input: "transformation_func/IteratorGetNext_4:3"
  input: "transformation_func/IteratorGetNext_5:3"
  input: "transformation_func/IteratorGetNext_6:3"
  input: "transformation_func/IteratorGetNext_7:3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN_2"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:4"
  input: "transformation_func/IteratorGetNext_1:4"
  input: "transformation_func/IteratorGetNext_2:4"
  input: "transformation_func/IteratorGetNext_3:4"
  input: "transformation_func/IteratorGetNext_4:4"
  input: "transformation_func/IteratorGetNext_5:4"
  input: "transformation_func/IteratorGetNext_6:4"
  input: "transformation_func/IteratorGetNext_7:4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_5/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_5"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:8"
  input: "transformation_func/IteratorGetNext_1:8"
  input: "transformation_func/IteratorGetNext_2:8"
  input: "transformation_func/IteratorGetNext_3:8"
  input: "transformation_func/IteratorGetNext_4:8"
  input: "transformation_func/IteratorGetNext_5:8"
  input: "transformation_func/IteratorGetNext_6:8"
  input: "transformation_func/IteratorGetNext_7:8"
  input: "transformation_func/concat_5/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "kernel/Initializer/random_uniform/max"
  input: "kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "kernel/Initializer/random_uniform/RandomUniform"
  input: "kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform"
  op: "Add"
  input: "kernel/Initializer/random_uniform/mul"
  input: "kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel"
    }
  }
}
node {
  name: "kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Assign"
  op: "AssignVariableOp"
  input: "kernel"
  input: "kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "recurrent_kernel/Initializer/random_normal/mul"
  input: "recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "recurrent_kernel/Initializer/Qr"
  input: "recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "recurrent_kernel/Initializer/mul"
  input: "recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "recurrent_kernel/Initializer/mul_1/x"
  input: "recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel"
    }
  }
}
node {
  name: "recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel"
  input: "recurrent_kernel/Initializer/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias"
    }
  }
}
node {
  name: "bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Assign"
  op: "AssignVariableOp"
  input: "bias"
  input: "bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "kernel_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "kernel_1/Initializer/random_uniform/max"
  input: "kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "kernel_1/Initializer/random_uniform/RandomUniform"
  input: "kernel_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform"
  op: "Add"
  input: "kernel_1/Initializer/random_uniform/mul"
  input: "kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1"
    }
  }
}
node {
  name: "kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Assign"
  op: "AssignVariableOp"
  input: "kernel_1"
  input: "kernel_1/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "recurrent_kernel_1/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/mul"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  input: "recurrent_kernel_1/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal"
  op: "Add"
  input: "recurrent_kernel_1/Initializer/random_normal/mul"
  input: "recurrent_kernel_1/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Qr"
  op: "Qr"
  input: "recurrent_kernel_1/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/DiagPart"
  op: "DiagPart"
  input: "recurrent_kernel_1/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Sign"
  op: "Sign"
  input: "recurrent_kernel_1/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/Qr"
  input: "recurrent_kernel_1/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "recurrent_kernel_1/Initializer/mul"
  input: "recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Reshape"
  op: "Reshape"
  input: "recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  input: "recurrent_kernel_1/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul_1"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/mul_1/x"
  input: "recurrent_kernel_1/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1"
    }
  }
}
node {
  name: "recurrent_kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1"
  input: "recurrent_kernel_1/Initializer/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1"
    }
  }
}
node {
  name: "bias_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Assign"
  op: "AssignVariableOp"
  input: "bias_1"
  input: "bias_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20096810162067413
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense/kernel/Initializer/truncated_normal/mul"
  input: "dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "Placeholder"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/LeakyRelu"
  op: "LeakyRelu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "dropout/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/switch_t"
  op: "Identity"
  input: "dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/switch_f"
  op: "Identity"
  input: "dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/rate"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense/LeakyRelu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/cond/dropout/random_uniform/max"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/cond/dropout/random_uniform/RandomUniform"
  input: "dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout/cond/dropout/random_uniform/mul"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub"
  op: "Sub"
  input: "dropout/cond/dropout/sub/x"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout/cond/dropout/truediv/x"
  input: "dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/cond/dropout/random_uniform"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/mul"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Cast"
  op: "Cast"
  input: "dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Identity"
  op: "Identity"
  input: "dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Identity/Switch"
  op: "Switch"
  input: "dense/LeakyRelu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Merge"
  op: "Merge"
  input: "dropout/cond/Identity"
  input: "dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense_1/kernel/Initializer/truncated_normal/mul"
  input: "dense_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "dropout/cond/Merge"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/LeakyRelu"
  op: "LeakyRelu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_1/LeakyRelu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/sub/x"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1/cond/dropout/truediv/x"
  input: "dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/cond/dropout/random_uniform"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity"
  op: "Identity"
  input: "dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "dense_1/LeakyRelu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Identity"
  input: "dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 63
      }
    }
  }
}
node {
  name: "comnet_model/stack"
  op: "Pack"
  input: "transformation_func/AddN"
  input: "comnet_model/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ExpandDims"
  op: "ExpandDims"
  input: "transformation_func/concat_2"
  input: "comnet_model/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/zeros"
  op: "Fill"
  input: "comnet_model/stack"
  input: "comnet_model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 63
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "comnet_model/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/concat"
  op: "ConcatV2"
  input: "comnet_model/ExpandDims"
  input: "comnet_model/zeros"
  input: "comnet_model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 63
      }
    }
  }
}
node {
  name: "comnet_model/stack_1"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack_1"
  op: "Pack"
  input: "transformation_func/AddN_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/Cast"
  op: "Cast"
  input: "comnet_model/strided_slice/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/Cast_1"
  op: "Cast"
  input: "comnet_model/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice"
  op: "StridedSlice"
  input: "transformation_func/concat"
  input: "comnet_model/strided_slice/Cast"
  input: "comnet_model/strided_slice/stack_1"
  input: "comnet_model/strided_slice/Cast_1"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ExpandDims_1"
  op: "ExpandDims"
  input: "comnet_model/strided_slice"
  input: "comnet_model/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/zeros_1"
  op: "Fill"
  input: "comnet_model/stack_1"
  input: "comnet_model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 63
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "comnet_model/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/concat_1"
  op: "ConcatV2"
  input: "comnet_model/ExpandDims_1"
  input: "comnet_model/zeros_1"
  input: "comnet_model/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2"
  op: "GatherV2"
  input: "comnet_model/concat"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_2"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add"
  op: "Add"
  input: "comnet_model/Max"
  input: "comnet_model/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_3/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_3"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add"
  input: "comnet_model/stack_3/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like"
  op: "Fill"
  input: "comnet_model/ones_like/Shape"
  input: "comnet_model/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum"
  op: "SegmentSum"
  input: "comnet_model/ones_like"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_2"
  input: "comnet_model/GatherV2"
  input: "comnet_model/stack_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range"
  op: "Range"
  input: "comnet_model/rnn/range/start"
  input: "comnet_model/rnn/Rank"
  input: "comnet_model/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn/concat/values_0"
  input: "comnet_model/rnn/range"
  input: "comnet_model/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd"
  input: "comnet_model/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape"
  input: "comnet_model/rnn/strided_slice/stack"
  input: "comnet_model/rnn/strided_slice/stack_1"
  input: "comnet_model/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/stack"
  op: "Pack"
  input: "comnet_model/rnn/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/Equal"
  op: "Equal"
  input: "comnet_model/rnn/Shape_1"
  input: "comnet_model/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/All"
  op: "All"
  input: "comnet_model/rnn/Equal"
  input: "comnet_model/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn/All"
  input: "comnet_model/rnn/Assert/Assert/data_0"
  input: "comnet_model/rnn/stack"
  input: "comnet_model/rnn/Assert/Assert/data_2"
  input: "comnet_model/rnn/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn/sequence_length"
  input: "^comnet_model/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape_2"
  input: "comnet_model/rnn/strided_slice_1/stack"
  input: "comnet_model/rnn/strided_slice_1/stack_1"
  input: "comnet_model/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape_3"
  input: "comnet_model/rnn/strided_slice_2/stack"
  input: "comnet_model/rnn/strided_slice_2/stack_1"
  input: "comnet_model/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn/strided_slice_2"
  input: "comnet_model/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn/ExpandDims"
  input: "comnet_model/rnn/Const_1"
  input: "comnet_model/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/zeros"
  op: "Fill"
  input: "comnet_model/rnn/concat_1"
  input: "comnet_model/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Min"
  op: "Min"
  input: "comnet_model/rnn/CheckSeqLen"
  input: "comnet_model/rnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Max"
  op: "Max"
  input: "comnet_model/rnn/CheckSeqLen"
  input: "comnet_model/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn/TensorArray_1"
  input: "comnet_model/rnn/TensorArrayUnstack/range"
  input: "comnet_model/rnn/transpose"
  input: "comnet_model/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn/Maximum/x"
  input: "comnet_model/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/strided_slice_1"
  input: "comnet_model/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_3"
  op: "Enter"
  input: "comnet_model/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter"
  input: "comnet_model/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_1"
  input: "comnet_model/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_2"
  input: "comnet_model/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_3"
  input: "comnet_model/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less"
  op: "Less"
  input: "comnet_model/rnn/while/Merge"
  input: "comnet_model/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn/while/Merge_1"
  input: "comnet_model/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn/while/Less"
  input: "comnet_model/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_1"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_2"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_3"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add"
  op: "Add"
  input: "comnet_model/rnn/while/Identity"
  input: "comnet_model/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  input: "comnet_model/rnn/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/Mul"
  input: "comnet_model/rnn/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  input: "comnet_model/rnn/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select"
  op: "Select"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "comnet_model/rnn/while/Select/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/Select"
  input: "comnet_model/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add_1"
  op: "Add"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn/TensorArrayStack/range/start"
  input: "comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/TensorArrayStack/range"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1"
  op: "Range"
  input: "comnet_model/rnn/range_1/start"
  input: "comnet_model/rnn/Rank_1"
  input: "comnet_model/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn/concat_2/values_0"
  input: "comnet_model/rnn/range_1"
  input: "comnet_model/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd"
  op: "GatherNd"
  input: "comnet_model/rnn/transpose_1"
  input: "comnet_model/stack_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp"
  input: "comnet_model/gru_cell/strided_slice/stack"
  input: "comnet_model/gru_cell/strided_slice/stack_1"
  input: "comnet_model/gru_cell/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack"
  input: "comnet_model/gru_cell/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_2"
  input: "comnet_model/gru_cell/strided_slice_2/stack"
  input: "comnet_model/gru_cell/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_3"
  input: "comnet_model/gru_cell/strided_slice_3/stack"
  input: "comnet_model/gru_cell/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul"
  input: "comnet_model/gru_cell/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_4"
  input: "comnet_model/gru_cell/strided_slice_4/stack"
  input: "comnet_model/gru_cell/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul_1"
  input: "comnet_model/gru_cell/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_5"
  input: "comnet_model/gru_cell/strided_slice_5/stack"
  input: "comnet_model/gru_cell/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul_2"
  input: "comnet_model/gru_cell/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_6"
  input: "comnet_model/gru_cell/strided_slice_6/stack"
  input: "comnet_model/gru_cell/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_3"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "comnet_model/gru_cell/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_7"
  input: "comnet_model/gru_cell/strided_slice_7/stack"
  input: "comnet_model/gru_cell/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_4"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "comnet_model/gru_cell/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/add"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd"
  input: "comnet_model/gru_cell/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell/add"
  input: "comnet_model/gru_cell/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell/Mul"
  input: "comnet_model/gru_cell/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell/Add_1"
  input: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  input: "comnet_model/gru_cell/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_2"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd_1"
  input: "comnet_model/gru_cell/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add_2"
  input: "comnet_model/gru_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell/Mul_1"
  input: "comnet_model/gru_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell/Add_3"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value_1"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_8"
  input: "comnet_model/gru_cell/strided_slice_8/stack"
  input: "comnet_model/gru_cell/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell/mul_2"
  input: "comnet_model/gru_cell/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_4"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd_2"
  input: "comnet_model/gru_cell/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/sub"
  op: "Sub"
  input: "comnet_model/gru_cell/sub/x"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell/sub"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_5"
  op: "Add"
  input: "comnet_model/gru_cell/mul_3"
  input: "comnet_model/gru_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_1"
  op: "GatherV2"
  input: "comnet_model/gru_cell/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_4"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_1"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_1"
  op: "Add"
  input: "comnet_model/Max_1"
  input: "comnet_model/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_5/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_5"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_1"
  input: "comnet_model/stack_5/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_1/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_1"
  op: "Fill"
  input: "comnet_model/ones_like_1/Shape"
  input: "comnet_model/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_1"
  op: "SegmentSum"
  input: "comnet_model/ones_like_1"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_1"
  op: "ScatterNd"
  input: "comnet_model/stack_4"
  input: "comnet_model/GatherV2_1"
  input: "comnet_model/stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range"
  op: "Range"
  input: "comnet_model/rnn_1/range/start"
  input: "comnet_model/rnn_1/Rank"
  input: "comnet_model/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/concat/values_0"
  input: "comnet_model/rnn_1/range"
  input: "comnet_model/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_1"
  input: "comnet_model/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape"
  input: "comnet_model/rnn_1/strided_slice/stack"
  input: "comnet_model/rnn_1/strided_slice/stack_1"
  input: "comnet_model/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/stack"
  op: "Pack"
  input: "comnet_model/rnn_1/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/Equal"
  op: "Equal"
  input: "comnet_model/rnn_1/Shape_1"
  input: "comnet_model/rnn_1/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/All"
  op: "All"
  input: "comnet_model/rnn_1/Equal"
  input: "comnet_model/rnn_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_1/All"
  input: "comnet_model/rnn_1/Assert/Assert/data_0"
  input: "comnet_model/rnn_1/stack"
  input: "comnet_model/rnn_1/Assert/Assert/data_2"
  input: "comnet_model/rnn_1/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_1/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_1/sequence_length"
  input: "^comnet_model/rnn_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape_2"
  input: "comnet_model/rnn_1/strided_slice_1/stack"
  input: "comnet_model/rnn_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape_3"
  input: "comnet_model/rnn_1/strided_slice_2/stack"
  input: "comnet_model/rnn_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_1/strided_slice_2"
  input: "comnet_model/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/ExpandDims"
  input: "comnet_model/rnn_1/Const_1"
  input: "comnet_model/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/zeros"
  op: "Fill"
  input: "comnet_model/rnn_1/concat_1"
  input: "comnet_model/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Min"
  op: "Min"
  input: "comnet_model/rnn_1/CheckSeqLen"
  input: "comnet_model/rnn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Max"
  op: "Max"
  input: "comnet_model/rnn_1/CheckSeqLen"
  input: "comnet_model/rnn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_1/TensorArray_1"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "comnet_model/rnn_1/transpose"
  input: "comnet_model/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_1/Maximum/x"
  input: "comnet_model/rnn_1/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/strided_slice_1"
  input: "comnet_model/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter"
  input: "comnet_model/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_1"
  input: "comnet_model/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_2"
  input: "comnet_model/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_3"
  input: "comnet_model/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less"
  op: "Less"
  input: "comnet_model/rnn_1/while/Merge"
  input: "comnet_model/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_1/while/Merge_1"
  input: "comnet_model/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_1/while/Less"
  input: "comnet_model/rnn_1/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_1/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_1"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_2"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_3"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add"
  op: "Add"
  input: "comnet_model/rnn_1/while/Identity"
  input: "comnet_model/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select"
  op: "Select"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "comnet_model/rnn_1/while/Select/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/Select"
  input: "comnet_model/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_1/TensorArrayStack/range/start"
  input: "comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/TensorArrayStack/range"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1"
  op: "Range"
  input: "comnet_model/rnn_1/range_1/start"
  input: "comnet_model/rnn_1/Rank_1"
  input: "comnet_model/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/concat_2/values_0"
  input: "comnet_model/rnn_1/range_1"
  input: "comnet_model/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_1"
  op: "GatherNd"
  input: "comnet_model/rnn_1/transpose_1"
  input: "comnet_model/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_1"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_1"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp"
  input: "comnet_model/gru_cell_1/strided_slice/stack"
  input: "comnet_model/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul"
  input: "comnet_model/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_1"
  input: "comnet_model/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_2"
  input: "comnet_model/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "comnet_model/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "comnet_model/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add"
  input: "comnet_model/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_1/Mul"
  input: "comnet_model/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_1/Add_1"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd_1"
  input: "comnet_model/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add_2"
  input: "comnet_model/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_1/Mul_1"
  input: "comnet_model/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_1/Add_3"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/mul_2"
  input: "comnet_model/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd_2"
  input: "comnet_model/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_1/sub/x"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_1/sub"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_1/mul_3"
  input: "comnet_model/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_2"
  op: "GatherV2"
  input: "comnet_model/gru_cell_1/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_6"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_2"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_2"
  op: "Add"
  input: "comnet_model/Max_2"
  input: "comnet_model/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_7/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_7"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_2"
  input: "comnet_model/stack_7/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_2/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_2"
  op: "Fill"
  input: "comnet_model/ones_like_2/Shape"
  input: "comnet_model/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_2"
  op: "SegmentSum"
  input: "comnet_model/ones_like_2"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_2"
  op: "ScatterNd"
  input: "comnet_model/stack_6"
  input: "comnet_model/GatherV2_2"
  input: "comnet_model/stack_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range"
  op: "Range"
  input: "comnet_model/rnn_2/range/start"
  input: "comnet_model/rnn_2/Rank"
  input: "comnet_model/rnn_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/concat/values_0"
  input: "comnet_model/rnn_2/range"
  input: "comnet_model/rnn_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_2"
  input: "comnet_model/rnn_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape"
  input: "comnet_model/rnn_2/strided_slice/stack"
  input: "comnet_model/rnn_2/strided_slice/stack_1"
  input: "comnet_model/rnn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/stack"
  op: "Pack"
  input: "comnet_model/rnn_2/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/Equal"
  op: "Equal"
  input: "comnet_model/rnn_2/Shape_1"
  input: "comnet_model/rnn_2/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/All"
  op: "All"
  input: "comnet_model/rnn_2/Equal"
  input: "comnet_model/rnn_2/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_2/All"
  input: "comnet_model/rnn_2/Assert/Assert/data_0"
  input: "comnet_model/rnn_2/stack"
  input: "comnet_model/rnn_2/Assert/Assert/data_2"
  input: "comnet_model/rnn_2/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_2/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_2/sequence_length"
  input: "^comnet_model/rnn_2/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape_2"
  input: "comnet_model/rnn_2/strided_slice_1/stack"
  input: "comnet_model/rnn_2/strided_slice_1/stack_1"
  input: "comnet_model/rnn_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape_3"
  input: "comnet_model/rnn_2/strided_slice_2/stack"
  input: "comnet_model/rnn_2/strided_slice_2/stack_1"
  input: "comnet_model/rnn_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_2/strided_slice_2"
  input: "comnet_model/rnn_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/ExpandDims"
  input: "comnet_model/rnn_2/Const_1"
  input: "comnet_model/rnn_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/zeros"
  op: "Fill"
  input: "comnet_model/rnn_2/concat_1"
  input: "comnet_model/rnn_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Min"
  op: "Min"
  input: "comnet_model/rnn_2/CheckSeqLen"
  input: "comnet_model/rnn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Max"
  op: "Max"
  input: "comnet_model/rnn_2/CheckSeqLen"
  input: "comnet_model/rnn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_2/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_2/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_2/TensorArray_1"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "comnet_model/rnn_2/transpose"
  input: "comnet_model/rnn_2/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_2/Maximum/x"
  input: "comnet_model/rnn_2/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/strided_slice_1"
  input: "comnet_model/rnn_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter"
  input: "comnet_model/rnn_2/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_1"
  input: "comnet_model/rnn_2/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_2"
  input: "comnet_model/rnn_2/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_3"
  input: "comnet_model/rnn_2/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less"
  op: "Less"
  input: "comnet_model/rnn_2/while/Merge"
  input: "comnet_model/rnn_2/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_2/while/Merge_1"
  input: "comnet_model/rnn_2/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_2/while/Less"
  input: "comnet_model/rnn_2/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_2/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_1"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_2"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_3"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add"
  op: "Add"
  input: "comnet_model/rnn_2/while/Identity"
  input: "comnet_model/rnn_2/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select"
  op: "Select"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "comnet_model/rnn_2/while/Select/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/Select"
  input: "comnet_model/rnn_2/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_2/TensorArrayStack/range/start"
  input: "comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/TensorArrayStack/range"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1"
  op: "Range"
  input: "comnet_model/rnn_2/range_1/start"
  input: "comnet_model/rnn_2/Rank_1"
  input: "comnet_model/rnn_2/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/concat_2/values_0"
  input: "comnet_model/rnn_2/range_1"
  input: "comnet_model/rnn_2/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_2/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_2"
  op: "GatherNd"
  input: "comnet_model/rnn_2/transpose_1"
  input: "comnet_model/stack_6"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_2"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_2"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp"
  input: "comnet_model/gru_cell_2/strided_slice/stack"
  input: "comnet_model/gru_cell_2/strided_slice/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_2"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_3"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul"
  input: "comnet_model/gru_cell_2/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_4"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_1"
  input: "comnet_model/gru_cell_2/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_5"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_2"
  input: "comnet_model/gru_cell_2/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_6"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "comnet_model/gru_cell_2/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_7"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "comnet_model/gru_cell_2/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add"
  input: "comnet_model/gru_cell_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_2/Mul"
  input: "comnet_model/gru_cell_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_2/Add_1"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd_1"
  input: "comnet_model/gru_cell_2/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add_2"
  input: "comnet_model/gru_cell_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_2/Mul_1"
  input: "comnet_model/gru_cell_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_2/Add_3"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_8"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/mul_2"
  input: "comnet_model/gru_cell_2/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd_2"
  input: "comnet_model/gru_cell_2/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_2/sub/x"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_2/sub"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_2/mul_3"
  input: "comnet_model/gru_cell_2/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_3"
  op: "GatherV2"
  input: "comnet_model/gru_cell_2/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_3/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_8"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_3"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_3"
  op: "Add"
  input: "comnet_model/Max_3"
  input: "comnet_model/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_9/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_9"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_3"
  input: "comnet_model/stack_9/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_3/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_3"
  op: "Fill"
  input: "comnet_model/ones_like_3/Shape"
  input: "comnet_model/ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_3"
  op: "SegmentSum"
  input: "comnet_model/ones_like_3"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_3"
  op: "ScatterNd"
  input: "comnet_model/stack_8"
  input: "comnet_model/GatherV2_3"
  input: "comnet_model/stack_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range"
  op: "Range"
  input: "comnet_model/rnn_3/range/start"
  input: "comnet_model/rnn_3/Rank"
  input: "comnet_model/rnn_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/concat/values_0"
  input: "comnet_model/rnn_3/range"
  input: "comnet_model/rnn_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_3"
  input: "comnet_model/rnn_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape"
  input: "comnet_model/rnn_3/strided_slice/stack"
  input: "comnet_model/rnn_3/strided_slice/stack_1"
  input: "comnet_model/rnn_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/stack"
  op: "Pack"
  input: "comnet_model/rnn_3/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/Equal"
  op: "Equal"
  input: "comnet_model/rnn_3/Shape_1"
  input: "comnet_model/rnn_3/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/All"
  op: "All"
  input: "comnet_model/rnn_3/Equal"
  input: "comnet_model/rnn_3/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_3/All"
  input: "comnet_model/rnn_3/Assert/Assert/data_0"
  input: "comnet_model/rnn_3/stack"
  input: "comnet_model/rnn_3/Assert/Assert/data_2"
  input: "comnet_model/rnn_3/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_3/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_3/sequence_length"
  input: "^comnet_model/rnn_3/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape_2"
  input: "comnet_model/rnn_3/strided_slice_1/stack"
  input: "comnet_model/rnn_3/strided_slice_1/stack_1"
  input: "comnet_model/rnn_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape_3"
  input: "comnet_model/rnn_3/strided_slice_2/stack"
  input: "comnet_model/rnn_3/strided_slice_2/stack_1"
  input: "comnet_model/rnn_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_3/strided_slice_2"
  input: "comnet_model/rnn_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/ExpandDims"
  input: "comnet_model/rnn_3/Const_1"
  input: "comnet_model/rnn_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/zeros"
  op: "Fill"
  input: "comnet_model/rnn_3/concat_1"
  input: "comnet_model/rnn_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Min"
  op: "Min"
  input: "comnet_model/rnn_3/CheckSeqLen"
  input: "comnet_model/rnn_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Max"
  op: "Max"
  input: "comnet_model/rnn_3/CheckSeqLen"
  input: "comnet_model/rnn_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_3/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_3/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_3/TensorArray_1"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "comnet_model/rnn_3/transpose"
  input: "comnet_model/rnn_3/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_3/Maximum/x"
  input: "comnet_model/rnn_3/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/strided_slice_1"
  input: "comnet_model/rnn_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn_2/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter"
  input: "comnet_model/rnn_3/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_1"
  input: "comnet_model/rnn_3/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_2"
  input: "comnet_model/rnn_3/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_3"
  input: "comnet_model/rnn_3/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less"
  op: "Less"
  input: "comnet_model/rnn_3/while/Merge"
  input: "comnet_model/rnn_3/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_3/while/Merge_1"
  input: "comnet_model/rnn_3/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_3/while/Less"
  input: "comnet_model/rnn_3/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_3/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_1"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_2"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_3"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add"
  op: "Add"
  input: "comnet_model/rnn_3/while/Identity"
  input: "comnet_model/rnn_3/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select"
  op: "Select"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "comnet_model/rnn_3/while/Select/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/Select"
  input: "comnet_model/rnn_3/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_3/TensorArray"
  input: "comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_3/TensorArrayStack/range/start"
  input: "comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_3/TensorArray"
  input: "comnet_model/rnn_3/TensorArrayStack/range"
  input: "comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1"
  op: "Range"
  input: "comnet_model/rnn_3/range_1/start"
  input: "comnet_model/rnn_3/Rank_1"
  input: "comnet_model/rnn_3/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/concat_2/values_0"
  input: "comnet_model/rnn_3/range_1"
  input: "comnet_model/rnn_3/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_3/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_3"
  op: "GatherNd"
  input: "comnet_model/rnn_3/transpose_1"
  input: "comnet_model/stack_8"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_3"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_3"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp"
  input: "comnet_model/gru_cell_3/strided_slice/stack"
  input: "comnet_model/gru_cell_3/strided_slice/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_1"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_2"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_3"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul"
  input: "comnet_model/gru_cell_3/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_4"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_1"
  input: "comnet_model/gru_cell_3/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_5"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_2"
  input: "comnet_model/gru_cell_3/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_6"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/add_5"
  input: "comnet_model/gru_cell_3/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_7"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/add_5"
  input: "comnet_model/gru_cell_3/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_3/add"
  input: "comnet_model/gru_cell_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_3/Mul"
  input: "comnet_model/gru_cell_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_3/Add_1"
  input: "comnet_model/gru_cell_3/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_3/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_3/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd_1"
  input: "comnet_model/gru_cell_3/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_3/add_2"
  input: "comnet_model/gru_cell_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_3/Mul_1"
  input: "comnet_model/gru_cell_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_3/Add_3"
  input: "comnet_model/gru_cell_3/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_3/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_3/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_3/clip_by_value_1"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_8"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_3/mul_2"
  input: "comnet_model/gru_cell_3/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd_2"
  input: "comnet_model/gru_cell_3/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_3/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_3/clip_by_value"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_3/sub/x"
  input: "comnet_model/gru_cell_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_3/sub"
  input: "comnet_model/gru_cell_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_3/mul_3"
  input: "comnet_model/gru_cell_3/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Exit_3"
  input: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense/MatMul"
  input: "comnet_model/sequential/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/sequential/dense/LeakyRelu"
  op: "LeakyRelu"
  input: "comnet_model/sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "comnet_model/sequential/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/max"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/RandomUniform"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform"
  op: "Add"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/mul"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout/dropout/sub/x"
  input: "comnet_model/sequential/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/truediv"
  op: "RealDiv"
  input: "comnet_model/sequential/dropout/dropout/truediv/x"
  input: "comnet_model/sequential/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/sequential/dropout/dropout/random_uniform"
  input: "comnet_model/sequential/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/mul"
  op: "Mul"
  input: "comnet_model/sequential/dense/LeakyRelu"
  input: "comnet_model/sequential/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/Cast"
  op: "Cast"
  input: "comnet_model/sequential/dropout/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/mul"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/MatMul"
  op: "MatMul"
  input: "comnet_model/sequential/dropout/dropout/mul_1"
  input: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense_1/MatMul"
  input: "comnet_model/sequential/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/LeakyRelu"
  op: "LeakyRelu"
  input: "comnet_model/sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "comnet_model/sequential/dropout_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/max"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/RandomUniform"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform"
  op: "Add"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/mul"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout_1/dropout/sub/x"
  input: "comnet_model/sequential/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/truediv"
  op: "RealDiv"
  input: "comnet_model/sequential/dropout_1/dropout/truediv/x"
  input: "comnet_model/sequential/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform"
  input: "comnet_model/sequential/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/mul"
  op: "Mul"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  input: "comnet_model/sequential/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/Cast"
  op: "Cast"
  input: "comnet_model/sequential/dropout_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/MatMul"
  op: "MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/mul_1"
  input: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense_2/MatMul"
  input: "comnet_model/sequential/dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "comnet_model/sequential/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "Squeeze"
  input: "transformation_func/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/rank"
  op: "Rank"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_scalar/x"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Cast/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Mul"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank"
  op: "Rank"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range"
  op: "Range"
  input: "mean_squared_error/range/start"
  input: "mean_squared_error/Rank"
  input: "mean_squared_error/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "mean_squared_error/Mul"
  input: "mean_squared_error/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like"
  op: "Fill"
  input: "mean_squared_error/ones_like/Shape"
  input: "mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/mul_1"
  op: "Mul"
  input: "mean_squared_error/ones_like"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank_1"
  op: "Rank"
  input: "mean_squared_error/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1"
  op: "Range"
  input: "mean_squared_error/range_1/start"
  input: "mean_squared_error/Rank_1"
  input: "mean_squared_error/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_1"
  op: "Sum"
  input: "mean_squared_error/mul_1"
  input: "mean_squared_error/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_2"
  op: "Sum"
  input: "mean_squared_error/Sum"
  input: "mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "DivNoNan"
  input: "mean_squared_error/Sum_2"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense/kernel/Regularizer/l2_regularizer/scale"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "add/x"
  input: "dense/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add"
  input: "dense_1/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "dense_2/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "mean_squared_error/value"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "mean_squared_error/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "regularization_loss"
      }
    }
  }
}
node {
  name: "regularization_loss"
  op: "ScalarSummary"
  input: "regularization_loss/tags"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_7"
  op: "Enter"
  input: "gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_4"
  op: "Merge"
  input: "gradients/f_count_7"
  input: "gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "gradients/Merge_4"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_2/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_2"
  op: "Add"
  input: "gradients/Switch_4:1"
  input: "gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_4"
  op: "NextIteration"
  input: "gradients/Add_2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_8"
  op: "Exit"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_9"
  op: "Enter"
  input: "gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_5"
  op: "Merge"
  input: "gradients/b_count_9"
  input: "gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "gradients/Merge_5"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_10"
  op: "LoopCond"
  input: "gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "gradients/Merge_5"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_2"
  op: "Sub"
  input: "gradients/Switch_5:1"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_5"
  op: "NextIteration"
  input: "gradients/Sub_2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_11"
  op: "Exit"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_10"
  op: "Enter"
  input: "gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_6"
  op: "Merge"
  input: "gradients/f_count_10"
  input: "gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "gradients/Merge_6"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_3/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_3"
  op: "Add"
  input: "gradients/Switch_6:1"
  input: "gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_6"
  op: "NextIteration"
  input: "gradients/Add_3"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_11"
  op: "Exit"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_13"
  op: "Enter"
  input: "gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_7"
  op: "Merge"
  input: "gradients/b_count_13"
  input: "gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "gradients/Merge_7"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_14"
  op: "LoopCond"
  input: "gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "gradients/Merge_7"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_3"
  op: "Sub"
  input: "gradients/Switch_7:1"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_7"
  op: "NextIteration"
  input: "gradients/Sub_3"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_15"
  op: "Exit"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/value_grad/Shape"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/Fill"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/div_no_nan"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum"
  input: "gradients/mean_squared_error/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Neg"
  op: "Neg"
  input: "mean_squared_error/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/Neg"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/mul"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum_1"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Size"
  op: "Size"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/add"
  op: "Add"
  input: "mean_squared_error/range"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/mean_squared_error/Sum_grad/add"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range"
  op: "Range"
  input: "gradients/mean_squared_error/Sum_grad/range/start"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  input: "gradients/mean_squared_error/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/mean_squared_error/Sum_grad/Shape_1"
  input: "gradients/mean_squared_error/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/range"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Tile"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul_1"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum_1"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "transformation_func/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  input: "gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Squeeze"
  input: "transformation_func/concat_5"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Squeeze_grad/Reshape"
  input: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/mul_1"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  input: "comnet_model/sequential/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  op: "LeakyReluGrad"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape"
  input: "comnet_model/sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  input: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/sequential/dropout/dropout/mul_1"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  input: "comnet_model/sequential/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dense/LeakyRelu"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  op: "LeakyReluGrad"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape"
  input: "comnet_model/sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  input: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Exit_3"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_3"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "gradients/AddN_5"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_3/TensorArray_1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_3/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_3_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_3/transpose_grad/transpose"
  input: "comnet_model/stack_8"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_2/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_3_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_2/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_3_grad/Size"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_3_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/sub"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell_2/Tanh"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_9"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_2/Add_1"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/mul_2"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_2/Add_3"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add_2"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice/stack"
  input: "comnet_model/gru_cell_2/strided_slice/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_10"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_2_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_6"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Select"
  input: "gradients/comnet_model/GatherNd_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_2/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_2_grad/ScatterNd"
  input: "gradients/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Exit_2"
  input: "^gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn_2/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_12"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_14"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArray_1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_2/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_2_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_2/transpose_grad/transpose"
  input: "comnet_model/stack_6"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_2_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_2_grad/Size"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_2_grad/Cast"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_2_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/strided_slice/stack"
  input: "gradients/strided_slice/stack_1"
  input: "gradients/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range"
  op: "Range"
  input: "gradients/range/start"
  input: "gradients/strided_slice"
  input: "gradients/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/Shape_2"
  input: "gradients/strided_slice_1/stack"
  input: "gradients/strided_slice_1/stack_1"
  input: "gradients/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_1"
  op: "Range"
  input: "gradients/range_1/start"
  input: "gradients/strided_slice_1"
  input: "gradients/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2"
  op: "StridedSlice"
  input: "gradients/Shape_3"
  input: "gradients/strided_slice_2/stack"
  input: "gradients/strided_slice_2/stack_1"
  input: "gradients/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_2"
  op: "Range"
  input: "gradients/range_2/start"
  input: "gradients/strided_slice_2"
  input: "gradients/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3"
  op: "StridedSlice"
  input: "gradients/Shape_4"
  input: "gradients/strided_slice_3/stack"
  input: "gradients/strided_slice_3/stack_1"
  input: "gradients/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_3"
  op: "Range"
  input: "gradients/range_3/start"
  input: "gradients/strided_slice_3"
  input: "gradients/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast"
  op: "Cast"
  input: "gradients/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_1"
  op: "Cast"
  input: "gradients/range_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_2"
  op: "Cast"
  input: "gradients/range_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_3"
  op: "Cast"
  input: "gradients/range_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  input: "gradients/comnet_model/GatherV2_2_grad/Reshape"
  input: "gradients/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_1"
  op: "ConcatV2"
  input: "gradients/Cast"
  input: "gradients/Cast_1"
  input: "gradients/Cast_2"
  input: "gradients/Cast_3"
  input: "gradients/comnet_model/GatherV2_2_grad/Reshape_1"
  input: "gradients/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/sub"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell_1/Tanh"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_18"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_1/Add_1"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/mul_2"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_1/Add_3"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add_2"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice/stack"
  input: "comnet_model/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_19"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_1_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_4"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Select"
  input: "gradients/comnet_model/GatherNd_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_1_grad/ScatterNd"
  input: "gradients/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Exit_2"
  input: "^gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn_1/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_21"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_23"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArray_1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_1_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_1/transpose_grad/transpose"
  input: "comnet_model/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_1_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_1_grad/Size"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_1_grad/Cast"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_1_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/strided_slice_4/stack"
  input: "gradients/strided_slice_4/stack_1"
  input: "gradients/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_4"
  op: "Range"
  input: "gradients/range_4/start"
  input: "gradients/strided_slice_4"
  input: "gradients/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5"
  op: "StridedSlice"
  input: "gradients/Shape_6"
  input: "gradients/strided_slice_5/stack"
  input: "gradients/strided_slice_5/stack_1"
  input: "gradients/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_5"
  op: "Range"
  input: "gradients/range_5/start"
  input: "gradients/strided_slice_5"
  input: "gradients/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6"
  op: "StridedSlice"
  input: "gradients/Shape_7"
  input: "gradients/strided_slice_6/stack"
  input: "gradients/strided_slice_6/stack_1"
  input: "gradients/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_6"
  op: "Range"
  input: "gradients/range_6/start"
  input: "gradients/strided_slice_6"
  input: "gradients/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7"
  op: "StridedSlice"
  input: "gradients/Shape_8"
  input: "gradients/strided_slice_7/stack"
  input: "gradients/strided_slice_7/stack_1"
  input: "gradients/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_7"
  op: "Range"
  input: "gradients/range_7/start"
  input: "gradients/strided_slice_7"
  input: "gradients/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_4"
  op: "Cast"
  input: "gradients/range_4"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_5"
  op: "Cast"
  input: "gradients/range_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_6"
  op: "Cast"
  input: "gradients/range_6"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_7"
  op: "Cast"
  input: "gradients/range_7"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_2"
  op: "ConcatV2"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  input: "gradients/comnet_model/GatherV2_1_grad/Reshape"
  input: "gradients/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_3"
  op: "ConcatV2"
  input: "gradients/Cast_4"
  input: "gradients/Cast_5"
  input: "gradients/Cast_6"
  input: "gradients/Cast_7"
  input: "gradients/comnet_model/GatherV2_1_grad/Reshape_1"
  input: "gradients/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/sub"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell/Tanh"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  input: "comnet_model/gru_cell/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_27"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell/Add_1"
  input: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/mul_2"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_5/stack"
  input: "comnet_model/gru_cell/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_8/stack"
  input: "comnet_model/gru_cell/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_2/stack"
  input: "comnet_model/gru_cell/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell/Add_3"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_3/stack"
  input: "comnet_model/gru_cell/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_6/stack"
  input: "comnet_model/gru_cell/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add_2"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice/stack"
  input: "comnet_model/gru_cell/strided_slice/stack_1"
  input: "comnet_model/gru_cell/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_4/stack"
  input: "comnet_model/gru_cell/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_7/stack"
  input: "comnet_model/gru_cell/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_28"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_1/stack"
  input: "comnet_model/gru_cell/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_2"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/Select"
  input: "gradients/comnet_model/GatherNd_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_grad/ScatterNd"
  input: "gradients/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn/while/Exit_2"
  input: "^gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn/while/Identity_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_32"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_32"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_33"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/mul_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "kernel_2"
      }
    }
  }
}
node {
  name: "kernel_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_2"
  op: "HistogramSummary"
  input: "kernel_2/tag"
  input: "kernel_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "recurrent_kernel_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_2"
  op: "HistogramSummary"
  input: "recurrent_kernel_2/tag"
  input: "recurrent_kernel_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bias_2"
      }
    }
  }
}
node {
  name: "bias_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_2"
  op: "HistogramSummary"
  input: "bias_2/tag"
  input: "bias_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "kernel_1_1"
      }
    }
  }
}
node {
  name: "kernel_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1_1"
  op: "HistogramSummary"
  input: "kernel_1_1/tag"
  input: "kernel_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "recurrent_kernel_1_1"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1_1"
  op: "HistogramSummary"
  input: "recurrent_kernel_1_1/tag"
  input: "recurrent_kernel_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bias_1_1"
      }
    }
  }
}
node {
  name: "bias_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1_1"
  op: "HistogramSummary"
  input: "bias_1_1/tag"
  input: "bias_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/kernel_1"
      }
    }
  }
}
node {
  name: "dense/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel_1"
  op: "HistogramSummary"
  input: "dense/kernel_1/tag"
  input: "dense/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/bias_1"
      }
    }
  }
}
node {
  name: "dense/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias_1"
  op: "HistogramSummary"
  input: "dense/bias_1/tag"
  input: "dense/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel_1"
  op: "HistogramSummary"
  input: "dense_1/kernel_1/tag"
  input: "dense_1/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/bias_1"
      }
    }
  }
}
node {
  name: "dense_1/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias_1"
  op: "HistogramSummary"
  input: "dense_1/bias_1/tag"
  input: "dense_1/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel_1"
  op: "HistogramSummary"
  input: "dense_2/kernel_1/tag"
  input: "dense_2/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/bias_1"
      }
    }
  }
}
node {
  name: "dense_2/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias_1"
  op: "HistogramSummary"
  input: "dense_2/bias_1/tag"
  input: "dense_2/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_31_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_31_1"
  op: "HistogramSummary"
  input: "gradients/AddN_31_1/tag"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_30_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_30_1"
  op: "HistogramSummary"
  input: "gradients/AddN_30_1/tag"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_29_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_29_1"
  op: "HistogramSummary"
  input: "gradients/AddN_29_1/tag"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_40_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_40_1"
  op: "HistogramSummary"
  input: "gradients/AddN_40_1/tag"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_39_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_39_1"
  op: "HistogramSummary"
  input: "gradients/AddN_39_1/tag"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_38_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_38_1"
  op: "HistogramSummary"
  input: "gradients/AddN_38_1/tag"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_2_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1"
  op: "HistogramSummary"
  input: "gradients/AddN_2_1/tag"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_1_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1"
  op: "HistogramSummary"
  input: "gradients/AddN_1_1/tag"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_41"
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "HistogramSummary"
  input: "gradients/AddN_41/tag"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "ExponentialDecay/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/initial_learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel/Adam"
    }
  }
}
node {
  name: "kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "kernel/Adam"
  input: "kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel/Adam_1"
    }
  }
}
node {
  name: "kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "kernel/Adam_1"
  input: "kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel/Adam"
    }
  }
}
node {
  name: "recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam"
  input: "recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam_1"
  input: "recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias/Adam"
    }
  }
}
node {
  name: "bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "bias/Adam"
  input: "bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias/Adam_1"
    }
  }
}
node {
  name: "bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "bias/Adam_1"
  input: "bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "kernel_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1/Adam"
    }
  }
}
node {
  name: "kernel_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "kernel_1/Adam"
  input: "kernel_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "kernel_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1/Adam_1"
    }
  }
}
node {
  name: "kernel_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "kernel_1/Adam_1"
  input: "kernel_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1/Adam"
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam"
  input: "recurrent_kernel_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1/Adam_1"
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1/Adam"
    }
  }
}
node {
  name: "bias_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "bias_1/Adam"
  input: "bias_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1/Adam_1"
    }
  }
}
node {
  name: "bias_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "bias_1/Adam_1"
  input: "bias_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam"
    }
  }
}
node {
  name: "dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam_1"
    }
  }
}
node {
  name: "dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam"
    }
  }
}
node {
  name: "dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam_1"
    }
  }
}
node {
  name: "dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam"
    }
  }
}
node {
  name: "dense_1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam"
    }
  }
}
node {
  name: "dense_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam_1"
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam"
    }
  }
}
node {
  name: "dense_2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam"
    }
  }
}
node {
  name: "dense_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam_1"
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "kernel"
  input: "kernel/Adam"
  input: "kernel/Adam_1"
  input: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "recurrent_kernel"
  input: "recurrent_kernel/Adam"
  input: "recurrent_kernel/Adam_1"
  input: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bias"
  input: "bias/Adam"
  input: "bias/Adam_1"
  input: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "kernel_1"
  input: "kernel_1/Adam"
  input: "kernel_1/Adam_1"
  input: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "recurrent_kernel_1"
  input: "recurrent_kernel_1/Adam"
  input: "recurrent_kernel_1/Adam_1"
  input: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bias_1"
  input: "bias_1/Adam"
  input: "bias_1/Adam_1"
  input: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam_1"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/bias"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam_1"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam_1"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/bias"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam_1"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^bias/Adam/Assign"
  input: "^bias/Adam_1/Assign"
  input: "^bias/Assign"
  input: "^bias_1/Adam/Assign"
  input: "^bias_1/Adam_1/Assign"
  input: "^bias_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense_1/bias/Adam/Assign"
  input: "^dense_1/bias/Adam_1/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Adam/Assign"
  input: "^dense_1/kernel/Adam_1/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Adam/Assign"
  input: "^dense_2/bias/Adam_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Adam/Assign"
  input: "^dense_2/kernel/Adam_1/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^global_step/Assign"
  input: "^kernel/Adam/Assign"
  input: "^kernel/Adam_1/Assign"
  input: "^kernel/Assign"
  input: "^kernel_1/Adam/Assign"
  input: "^kernel_1/Adam_1/Assign"
  input: "^kernel_1/Assign"
  input: "^recurrent_kernel/Adam/Assign"
  input: "^recurrent_kernel/Adam_1/Assign"
  input: "^recurrent_kernel/Assign"
  input: "^recurrent_kernel_1/Adam/Assign"
  input: "^recurrent_kernel_1/Adam_1/Assign"
  input: "^recurrent_kernel_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 39
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "global_step"
        string_val: "kernel"
        string_val: "recurrent_kernel"
        string_val: "bias"
        string_val: "kernel_1"
        string_val: "recurrent_kernel_1"
        string_val: "bias_1"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 39
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "global_step"
        string_val: "kernel"
        string_val: "recurrent_kernel"
        string_val: "bias"
        string_val: "kernel_1"
        string_val: "recurrent_kernel_1"
        string_val: "bias_1"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "regularization_loss"
  input: "kernel_2"
  input: "recurrent_kernel_2"
  input: "bias_2"
  input: "kernel_1_1"
  input: "recurrent_kernel_1_1"
  input: "bias_1_1"
  input: "dense/kernel_1"
  input: "dense/bias_1"
  input: "dense_1/kernel_1"
  input: "dense_1/bias_1"
  input: "dense_2/kernel_1"
  input: "dense_2/bias_1"
  input: "gradients/AddN_31_1"
  input: "gradients/AddN_30_1"
  input: "gradients/AddN_29_1"
  input: "gradients/AddN_40_1"
  input: "gradients/AddN_39_1"
  input: "gradients/AddN_38_1"
  input: "gradients/AddN_2_1"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
  input: "gradients/AddN_1_1"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
  input: "gradients/AddN_41"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
  attr {
    key: "N"
    value {
      i: 26
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_2f45ca15c67e4955b923441cd3dd144c/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bias"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "bias_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "kernel"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "kernel_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "recurrent_kernel_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "bias/Read/ReadVariableOp"
  input: "bias/Adam/Read/ReadVariableOp"
  input: "bias/Adam_1/Read/ReadVariableOp"
  input: "bias_1/Read/ReadVariableOp"
  input: "bias_1/Adam/Read/ReadVariableOp"
  input: "bias_1/Adam_1/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/bias/Adam/Read/ReadVariableOp"
  input: "dense/bias/Adam_1/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/kernel/Adam/Read/ReadVariableOp"
  input: "dense/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/bias/Adam/Read/ReadVariableOp"
  input: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/bias/Adam/Read/ReadVariableOp"
  input: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  input: "global_step"
  input: "kernel/Read/ReadVariableOp"
  input: "kernel/Adam/Read/ReadVariableOp"
  input: "kernel/Adam_1/Read/ReadVariableOp"
  input: "kernel_1/Read/ReadVariableOp"
  input: "kernel_1/Adam/Read/ReadVariableOp"
  input: "kernel_1/Adam_1/Read/ReadVariableOp"
  input: "recurrent_kernel/Read/ReadVariableOp"
  input: "recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "recurrent_kernel/Adam_1/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Adam/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Adam_1/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bias"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "bias_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "kernel"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "kernel_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "recurrent_kernel_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bias/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bias/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "bias_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "bias_1/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "bias_1/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "kernel"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "kernel/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "kernel/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "kernel_1"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "kernel_1/Adam"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "kernel_1/Adam_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "recurrent_kernel"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "__inference_Dataset_map_<lambda>_99"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity_2"
        type: DT_INT64
      }
      output_arg {
        name: "identity_3"
        type: DT_INT64
      }
      output_arg {
        name: "identity_4"
        type: DT_INT64
      }
      output_arg {
        name: "identity_5"
        type: DT_INT64
      }
      output_arg {
        name: "identity_6"
        type: DT_INT64
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "args_0"
      input: "parse/ParseSingleExample/Const:output:0"
      input: "parse/ParseSingleExample/Const_1:output:0"
      input: "parse/ParseSingleExample/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "n_links"
            s: "n_paths"
            s: "n_total"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 6
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
            s: "delay"
            s: "link_capacity"
            s: "links"
            s: "paths"
            s: "sequences"
            s: "traffic"
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:5"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:5"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:5"
      input: "parse/SparseToDense/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:0"
      input: "parse/SparseToDense_1/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:1"
      input: "parse/SparseToDense_2/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:2"
      input: "parse/SparseToDense_3/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:3"
      input: "parse/SparseToDense_4/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_5/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_5"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:4"
      input: "parse/SparseToDense_5/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "parse/SparseToDense_2:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "parse/SparseToDense_3:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:2"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "parse/SparseToDense_4:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "parse/SparseToDense_5:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "parse/SparseToDense:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "parse/SparseToDense_1:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TensorSliceDataset"
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "args_0"
      input: "flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_flat_map_read_one_file_37"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "FlatMapDataset:handle:0"
      input: "^TensorSliceDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TensorSliceDataset"
      value: "TensorSliceDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_read_one_file_37"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_lBp6ShTBAu8"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/tensors/normalize_tensors/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 345
              }
            }
            string_val: "topology/tfrecords/mix/1001.tfrecords"
            string_val: "topology/tfrecords/mix/1002.tfrecords"
            string_val: "topology/tfrecords/mix/1003.tfrecords"
            string_val: "topology/tfrecords/mix/1005.tfrecords"
            string_val: "topology/tfrecords/mix/1006.tfrecords"
            string_val: "topology/tfrecords/mix/1007.tfrecords"
            string_val: "topology/tfrecords/mix/1008.tfrecords"
            string_val: "topology/tfrecords/mix/1009.tfrecords"
            string_val: "topology/tfrecords/mix/100.tfrecords"
            string_val: "topology/tfrecords/mix/1010.tfrecords"
            string_val: "topology/tfrecords/mix/1011.tfrecords"
            string_val: "topology/tfrecords/mix/1013.tfrecords"
            string_val: "topology/tfrecords/mix/1014.tfrecords"
            string_val: "topology/tfrecords/mix/1016.tfrecords"
            string_val: "topology/tfrecords/mix/1017.tfrecords"
            string_val: "topology/tfrecords/mix/1018.tfrecords"
            string_val: "topology/tfrecords/mix/1019.tfrecords"
            string_val: "topology/tfrecords/mix/101.tfrecords"
            string_val: "topology/tfrecords/mix/1021.tfrecords"
            string_val: "topology/tfrecords/mix/1022.tfrecords"
            string_val: "topology/tfrecords/mix/1023.tfrecords"
            string_val: "topology/tfrecords/mix/1024.tfrecords"
            string_val: "topology/tfrecords/mix/1026.tfrecords"
            string_val: "topology/tfrecords/mix/1027.tfrecords"
            string_val: "topology/tfrecords/mix/1028.tfrecords"
            string_val: "topology/tfrecords/mix/1029.tfrecords"
            string_val: "topology/tfrecords/mix/102.tfrecords"
            string_val: "topology/tfrecords/mix/1030.tfrecords"
            string_val: "topology/tfrecords/mix/1031.tfrecords"
            string_val: "topology/tfrecords/mix/1032.tfrecords"
            string_val: "topology/tfrecords/mix/1033.tfrecords"
            string_val: "topology/tfrecords/mix/1034.tfrecords"
            string_val: "topology/tfrecords/mix/1035.tfrecords"
            string_val: "topology/tfrecords/mix/1036.tfrecords"
            string_val: "topology/tfrecords/mix/1038.tfrecords"
            string_val: "topology/tfrecords/mix/1039.tfrecords"
            string_val: "topology/tfrecords/mix/1040.tfrecords"
            string_val: "topology/tfrecords/mix/1041.tfrecords"
            string_val: "topology/tfrecords/mix/1042.tfrecords"
            string_val: "topology/tfrecords/mix/1043.tfrecords"
            string_val: "topology/tfrecords/mix/1045.tfrecords"
            string_val: "topology/tfrecords/mix/1048.tfrecords"
            string_val: "topology/tfrecords/mix/1049.tfrecords"
            string_val: "topology/tfrecords/mix/104.tfrecords"
            string_val: "topology/tfrecords/mix/1051.tfrecords"
            string_val: "topology/tfrecords/mix/1052.tfrecords"
            string_val: "topology/tfrecords/mix/1053.tfrecords"
            string_val: "topology/tfrecords/mix/1054.tfrecords"
            string_val: "topology/tfrecords/mix/1055.tfrecords"
            string_val: "topology/tfrecords/mix/1056.tfrecords"
            string_val: "topology/tfrecords/mix/1058.tfrecords"
            string_val: "topology/tfrecords/mix/1059.tfrecords"
            string_val: "topology/tfrecords/mix/105.tfrecords"
            string_val: "topology/tfrecords/mix/1060.tfrecords"
            string_val: "topology/tfrecords/mix/1061.tfrecords"
            string_val: "topology/tfrecords/mix/1062.tfrecords"
            string_val: "topology/tfrecords/mix/1063.tfrecords"
            string_val: "topology/tfrecords/mix/1064.tfrecords"
            string_val: "topology/tfrecords/mix/1066.tfrecords"
            string_val: "topology/tfrecords/mix/1067.tfrecords"
            string_val: "topology/tfrecords/mix/1068.tfrecords"
            string_val: "topology/tfrecords/mix/1069.tfrecords"
            string_val: "topology/tfrecords/mix/106.tfrecords"
            string_val: "topology/tfrecords/mix/1070.tfrecords"
            string_val: "topology/tfrecords/mix/1072.tfrecords"
            string_val: "topology/tfrecords/mix/1074.tfrecords"
            string_val: "topology/tfrecords/mix/1075.tfrecords"
            string_val: "topology/tfrecords/mix/1076.tfrecords"
            string_val: "topology/tfrecords/mix/1077.tfrecords"
            string_val: "topology/tfrecords/mix/1078.tfrecords"
            string_val: "topology/tfrecords/mix/1079.tfrecords"
            string_val: "topology/tfrecords/mix/107.tfrecords"
            string_val: "topology/tfrecords/mix/1080.tfrecords"
            string_val: "topology/tfrecords/mix/1081.tfrecords"
            string_val: "topology/tfrecords/mix/1083.tfrecords"
            string_val: "topology/tfrecords/mix/1085.tfrecords"
            string_val: "topology/tfrecords/mix/1086.tfrecords"
            string_val: "topology/tfrecords/mix/1087.tfrecords"
            string_val: "topology/tfrecords/mix/1089.tfrecords"
            string_val: "topology/tfrecords/mix/108.tfrecords"
            string_val: "topology/tfrecords/mix/1090.tfrecords"
            string_val: "topology/tfrecords/mix/1091.tfrecords"
            string_val: "topology/tfrecords/mix/1092.tfrecords"
            string_val: "topology/tfrecords/mix/1093.tfrecords"
            string_val: "topology/tfrecords/mix/1095.tfrecords"
            string_val: "topology/tfrecords/mix/1096.tfrecords"
            string_val: "topology/tfrecords/mix/1097.tfrecords"
            string_val: "topology/tfrecords/mix/1099.tfrecords"
            string_val: "topology/tfrecords/mix/109.tfrecords"
            string_val: "topology/tfrecords/mix/10.tfrecords"
            string_val: "topology/tfrecords/mix/1100.tfrecords"
            string_val: "topology/tfrecords/mix/1102.tfrecords"
            string_val: "topology/tfrecords/mix/1104.tfrecords"
            string_val: "topology/tfrecords/mix/1106.tfrecords"
            string_val: "topology/tfrecords/mix/1107.tfrecords"
            string_val: "topology/tfrecords/mix/1108.tfrecords"
            string_val: "topology/tfrecords/mix/110.tfrecords"
            string_val: "topology/tfrecords/mix/1111.tfrecords"
            string_val: "topology/tfrecords/mix/1112.tfrecords"
            string_val: "topology/tfrecords/mix/1113.tfrecords"
            string_val: "topology/tfrecords/mix/1114.tfrecords"
            string_val: "topology/tfrecords/mix/1115.tfrecords"
            string_val: "topology/tfrecords/mix/1116.tfrecords"
            string_val: "topology/tfrecords/mix/1117.tfrecords"
            string_val: "topology/tfrecords/mix/1118.tfrecords"
            string_val: "topology/tfrecords/mix/1119.tfrecords"
            string_val: "topology/tfrecords/mix/111.tfrecords"
            string_val: "topology/tfrecords/mix/1120.tfrecords"
            string_val: "topology/tfrecords/mix/1122.tfrecords"
            string_val: "topology/tfrecords/mix/1123.tfrecords"
            string_val: "topology/tfrecords/mix/1124.tfrecords"
            string_val: "topology/tfrecords/mix/1126.tfrecords"
            string_val: "topology/tfrecords/mix/1127.tfrecords"
            string_val: "topology/tfrecords/mix/1128.tfrecords"
            string_val: "topology/tfrecords/mix/112.tfrecords"
            string_val: "topology/tfrecords/mix/1132.tfrecords"
            string_val: "topology/tfrecords/mix/1133.tfrecords"
            string_val: "topology/tfrecords/mix/1134.tfrecords"
            string_val: "topology/tfrecords/mix/1135.tfrecords"
            string_val: "topology/tfrecords/mix/1136.tfrecords"
            string_val: "topology/tfrecords/mix/1137.tfrecords"
            string_val: "topology/tfrecords/mix/1138.tfrecords"
            string_val: "topology/tfrecords/mix/1139.tfrecords"
            string_val: "topology/tfrecords/mix/113.tfrecords"
            string_val: "topology/tfrecords/mix/1140.tfrecords"
            string_val: "topology/tfrecords/mix/1142.tfrecords"
            string_val: "topology/tfrecords/mix/1144.tfrecords"
            string_val: "topology/tfrecords/mix/1145.tfrecords"
            string_val: "topology/tfrecords/mix/1146.tfrecords"
            string_val: "topology/tfrecords/mix/1147.tfrecords"
            string_val: "topology/tfrecords/mix/1148.tfrecords"
            string_val: "topology/tfrecords/mix/1149.tfrecords"
            string_val: "topology/tfrecords/mix/114.tfrecords"
            string_val: "topology/tfrecords/mix/1151.tfrecords"
            string_val: "topology/tfrecords/mix/1152.tfrecords"
            string_val: "topology/tfrecords/mix/1153.tfrecords"
            string_val: "topology/tfrecords/mix/1155.tfrecords"
            string_val: "topology/tfrecords/mix/1157.tfrecords"
            string_val: "topology/tfrecords/mix/1158.tfrecords"
            string_val: "topology/tfrecords/mix/1159.tfrecords"
            string_val: "topology/tfrecords/mix/115.tfrecords"
            string_val: "topology/tfrecords/mix/1160.tfrecords"
            string_val: "topology/tfrecords/mix/1161.tfrecords"
            string_val: "topology/tfrecords/mix/1162.tfrecords"
            string_val: "topology/tfrecords/mix/1165.tfrecords"
            string_val: "topology/tfrecords/mix/1166.tfrecords"
            string_val: "topology/tfrecords/mix/1167.tfrecords"
            string_val: "topology/tfrecords/mix/1169.tfrecords"
            string_val: "topology/tfrecords/mix/116.tfrecords"
            string_val: "topology/tfrecords/mix/1170.tfrecords"
            string_val: "topology/tfrecords/mix/1171.tfrecords"
            string_val: "topology/tfrecords/mix/1172.tfrecords"
            string_val: "topology/tfrecords/mix/1173.tfrecords"
            string_val: "topology/tfrecords/mix/1176.tfrecords"
            string_val: "topology/tfrecords/mix/1178.tfrecords"
            string_val: "topology/tfrecords/mix/1179.tfrecords"
            string_val: "topology/tfrecords/mix/117.tfrecords"
            string_val: "topology/tfrecords/mix/1180.tfrecords"
            string_val: "topology/tfrecords/mix/1181.tfrecords"
            string_val: "topology/tfrecords/mix/1182.tfrecords"
            string_val: "topology/tfrecords/mix/1184.tfrecords"
            string_val: "topology/tfrecords/mix/1185.tfrecords"
            string_val: "topology/tfrecords/mix/1186.tfrecords"
            string_val: "topology/tfrecords/mix/1187.tfrecords"
            string_val: "topology/tfrecords/mix/1188.tfrecords"
            string_val: "topology/tfrecords/mix/1189.tfrecords"
            string_val: "topology/tfrecords/mix/118.tfrecords"
            string_val: "topology/tfrecords/mix/1190.tfrecords"
            string_val: "topology/tfrecords/mix/1191.tfrecords"
            string_val: "topology/tfrecords/mix/1192.tfrecords"
            string_val: "topology/tfrecords/mix/1193.tfrecords"
            string_val: "topology/tfrecords/mix/1194.tfrecords"
            string_val: "topology/tfrecords/mix/1195.tfrecords"
            string_val: "topology/tfrecords/mix/1196.tfrecords"
            string_val: "topology/tfrecords/mix/1197.tfrecords"
            string_val: "topology/tfrecords/mix/1198.tfrecords"
            string_val: "topology/tfrecords/mix/1199.tfrecords"
            string_val: "topology/tfrecords/mix/119.tfrecords"
            string_val: "topology/tfrecords/mix/11.tfrecords"
            string_val: "topology/tfrecords/mix/1200.tfrecords"
            string_val: "topology/tfrecords/mix/1201.tfrecords"
            string_val: "topology/tfrecords/mix/1202.tfrecords"
            string_val: "topology/tfrecords/mix/1203.tfrecords"
            string_val: "topology/tfrecords/mix/1204.tfrecords"
            string_val: "topology/tfrecords/mix/1206.tfrecords"
            string_val: "topology/tfrecords/mix/1207.tfrecords"
            string_val: "topology/tfrecords/mix/1208.tfrecords"
            string_val: "topology/tfrecords/mix/1209.tfrecords"
            string_val: "topology/tfrecords/mix/120.tfrecords"
            string_val: "topology/tfrecords/mix/1210.tfrecords"
            string_val: "topology/tfrecords/mix/1211.tfrecords"
            string_val: "topology/tfrecords/mix/1212.tfrecords"
            string_val: "topology/tfrecords/mix/1213.tfrecords"
            string_val: "topology/tfrecords/mix/1214.tfrecords"
            string_val: "topology/tfrecords/mix/1215.tfrecords"
            string_val: "topology/tfrecords/mix/1216.tfrecords"
            string_val: "topology/tfrecords/mix/1217.tfrecords"
            string_val: "topology/tfrecords/mix/121.tfrecords"
            string_val: "topology/tfrecords/mix/1220.tfrecords"
            string_val: "topology/tfrecords/mix/1221.tfrecords"
            string_val: "topology/tfrecords/mix/1222.tfrecords"
            string_val: "topology/tfrecords/mix/1223.tfrecords"
            string_val: "topology/tfrecords/mix/122.tfrecords"
            string_val: "topology/tfrecords/mix/123.tfrecords"
            string_val: "topology/tfrecords/mix/124.tfrecords"
            string_val: "topology/tfrecords/mix/125.tfrecords"
            string_val: "topology/tfrecords/mix/126.tfrecords"
            string_val: "topology/tfrecords/mix/127.tfrecords"
            string_val: "topology/tfrecords/mix/12.tfrecords"
            string_val: "topology/tfrecords/mix/130.tfrecords"
            string_val: "topology/tfrecords/mix/131.tfrecords"
            string_val: "topology/tfrecords/mix/132.tfrecords"
            string_val: "topology/tfrecords/mix/133.tfrecords"
            string_val: "topology/tfrecords/mix/135.tfrecords"
            string_val: "topology/tfrecords/mix/136.tfrecords"
            string_val: "topology/tfrecords/mix/137.tfrecords"
            string_val: "topology/tfrecords/mix/138.tfrecords"
            string_val: "topology/tfrecords/mix/139.tfrecords"
            string_val: "topology/tfrecords/mix/13.tfrecords"
            string_val: "topology/tfrecords/mix/140.tfrecords"
            string_val: "topology/tfrecords/mix/141.tfrecords"
            string_val: "topology/tfrecords/mix/142.tfrecords"
            string_val: "topology/tfrecords/mix/143.tfrecords"
            string_val: "topology/tfrecords/mix/145.tfrecords"
            string_val: "topology/tfrecords/mix/146.tfrecords"
            string_val: "topology/tfrecords/mix/147.tfrecords"
            string_val: "topology/tfrecords/mix/148.tfrecords"
            string_val: "topology/tfrecords/mix/151.tfrecords"
            string_val: "topology/tfrecords/mix/154.tfrecords"
            string_val: "topology/tfrecords/mix/155.tfrecords"
            string_val: "topology/tfrecords/mix/156.tfrecords"
            string_val: "topology/tfrecords/mix/157.tfrecords"
            string_val: "topology/tfrecords/mix/158.tfrecords"
            string_val: "topology/tfrecords/mix/15.tfrecords"
            string_val: "topology/tfrecords/mix/160.tfrecords"
            string_val: "topology/tfrecords/mix/162.tfrecords"
            string_val: "topology/tfrecords/mix/163.tfrecords"
            string_val: "topology/tfrecords/mix/164.tfrecords"
            string_val: "topology/tfrecords/mix/165.tfrecords"
            string_val: "topology/tfrecords/mix/167.tfrecords"
            string_val: "topology/tfrecords/mix/168.tfrecords"
            string_val: "topology/tfrecords/mix/171.tfrecords"
            string_val: "topology/tfrecords/mix/173.tfrecords"
            string_val: "topology/tfrecords/mix/174.tfrecords"
            string_val: "topology/tfrecords/mix/175.tfrecords"
            string_val: "topology/tfrecords/mix/176.tfrecords"
            string_val: "topology/tfrecords/mix/177.tfrecords"
            string_val: "topology/tfrecords/mix/178.tfrecords"
            string_val: "topology/tfrecords/mix/179.tfrecords"
            string_val: "topology/tfrecords/mix/17.tfrecords"
            string_val: "topology/tfrecords/mix/180.tfrecords"
            string_val: "topology/tfrecords/mix/181.tfrecords"
            string_val: "topology/tfrecords/mix/183.tfrecords"
            string_val: "topology/tfrecords/mix/184.tfrecords"
            string_val: "topology/tfrecords/mix/185.tfrecords"
            string_val: "topology/tfrecords/mix/186.tfrecords"
            string_val: "topology/tfrecords/mix/187.tfrecords"
            string_val: "topology/tfrecords/mix/188.tfrecords"
            string_val: "topology/tfrecords/mix/189.tfrecords"
            string_val: "topology/tfrecords/mix/191.tfrecords"
            string_val: "topology/tfrecords/mix/192.tfrecords"
            string_val: "topology/tfrecords/mix/193.tfrecords"
            string_val: "topology/tfrecords/mix/194.tfrecords"
            string_val: "topology/tfrecords/mix/195.tfrecords"
            string_val: "topology/tfrecords/mix/197.tfrecords"
            string_val: "topology/tfrecords/mix/198.tfrecords"
            string_val: "topology/tfrecords/mix/199.tfrecords"
            string_val: "topology/tfrecords/mix/19.tfrecords"
            string_val: "topology/tfrecords/mix/1.tfrecords"
            string_val: "topology/tfrecords/mix/20.tfrecords"
            string_val: "topology/tfrecords/mix/21.tfrecords"
            string_val: "topology/tfrecords/mix/22.tfrecords"
            string_val: "topology/tfrecords/mix/23.tfrecords"
            string_val: "topology/tfrecords/mix/24.tfrecords"
            string_val: "topology/tfrecords/mix/25.tfrecords"
            string_val: "topology/tfrecords/mix/26.tfrecords"
            string_val: "topology/tfrecords/mix/27.tfrecords"
            string_val: "topology/tfrecords/mix/28.tfrecords"
            string_val: "topology/tfrecords/mix/29.tfrecords"
            string_val: "topology/tfrecords/mix/2.tfrecords"
            string_val: "topology/tfrecords/mix/30.tfrecords"
            string_val: "topology/tfrecords/mix/31.tfrecords"
            string_val: "topology/tfrecords/mix/32.tfrecords"
            string_val: "topology/tfrecords/mix/33.tfrecords"
            string_val: "topology/tfrecords/mix/34.tfrecords"
            string_val: "topology/tfrecords/mix/35.tfrecords"
            string_val: "topology/tfrecords/mix/37.tfrecords"
            string_val: "topology/tfrecords/mix/38.tfrecords"
            string_val: "topology/tfrecords/mix/39.tfrecords"
            string_val: "topology/tfrecords/mix/3.tfrecords"
            string_val: "topology/tfrecords/mix/40.tfrecords"
            string_val: "topology/tfrecords/mix/41.tfrecords"
            string_val: "topology/tfrecords/mix/42.tfrecords"
            string_val: "topology/tfrecords/mix/44.tfrecords"
            string_val: "topology/tfrecords/mix/45.tfrecords"
            string_val: "topology/tfrecords/mix/46.tfrecords"
            string_val: "topology/tfrecords/mix/48.tfrecords"
            string_val: "topology/tfrecords/mix/4.tfrecords"
            string_val: "topology/tfrecords/mix/50.tfrecords"
            string_val: "topology/tfrecords/mix/51.tfrecords"
            string_val: "topology/tfrecords/mix/52.tfrecords"
            string_val: "topology/tfrecords/mix/53.tfrecords"
            string_val: "topology/tfrecords/mix/54.tfrecords"
            string_val: "topology/tfrecords/mix/55.tfrecords"
            string_val: "topology/tfrecords/mix/56.tfrecords"
            string_val: "topology/tfrecords/mix/58.tfrecords"
            string_val: "topology/tfrecords/mix/5.tfrecords"
            string_val: "topology/tfrecords/mix/61.tfrecords"
            string_val: "topology/tfrecords/mix/63.tfrecords"
            string_val: "topology/tfrecords/mix/64.tfrecords"
            string_val: "topology/tfrecords/mix/65.tfrecords"
            string_val: "topology/tfrecords/mix/67.tfrecords"
            string_val: "topology/tfrecords/mix/68.tfrecords"
            string_val: "topology/tfrecords/mix/69.tfrecords"
            string_val: "topology/tfrecords/mix/6.tfrecords"
            string_val: "topology/tfrecords/mix/70.tfrecords"
            string_val: "topology/tfrecords/mix/71.tfrecords"
            string_val: "topology/tfrecords/mix/73.tfrecords"
            string_val: "topology/tfrecords/mix/74.tfrecords"
            string_val: "topology/tfrecords/mix/76.tfrecords"
            string_val: "topology/tfrecords/mix/77.tfrecords"
            string_val: "topology/tfrecords/mix/79.tfrecords"
            string_val: "topology/tfrecords/mix/7.tfrecords"
            string_val: "topology/tfrecords/mix/80.tfrecords"
            string_val: "topology/tfrecords/mix/81.tfrecords"
            string_val: "topology/tfrecords/mix/82.tfrecords"
            string_val: "topology/tfrecords/mix/83.tfrecords"
            string_val: "topology/tfrecords/mix/84.tfrecords"
            string_val: "topology/tfrecords/mix/85.tfrecords"
            string_val: "topology/tfrecords/mix/86.tfrecords"
            string_val: "topology/tfrecords/mix/87.tfrecords"
            string_val: "topology/tfrecords/mix/88.tfrecords"
            string_val: "topology/tfrecords/mix/89.tfrecords"
            string_val: "topology/tfrecords/mix/8.tfrecords"
            string_val: "topology/tfrecords/mix/90.tfrecords"
            string_val: "topology/tfrecords/mix/91.tfrecords"
            string_val: "topology/tfrecords/mix/92.tfrecords"
            string_val: "topology/tfrecords/mix/93.tfrecords"
            string_val: "topology/tfrecords/mix/94.tfrecords"
            string_val: "topology/tfrecords/mix/95.tfrecords"
            string_val: "topology/tfrecords/mix/96.tfrecords"
            string_val: "topology/tfrecords/mix/97.tfrecords"
            string_val: "topology/tfrecords/mix/98.tfrecords"
            string_val: "topology/tfrecords/mix/99.tfrecords"
            string_val: "topology/tfrecords/mix/9.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "OptimizeDataset/tensors/normalize_tensors/component_0:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 345
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleDataset"
      op: "ShuffleDataset"
      input: "OptimizeDataset/TensorSliceDataset:handle:0"
      input: "OptimizeDataset/buffer_size:output:0"
      input: "OptimizeDataset/seed:output:0"
      input: "OptimizeDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/cycle_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/block_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/sloppy"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_output_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/prefetch_input_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ExperimentalParallelInterleaveDataset"
      op: "ExperimentalParallelInterleaveDataset"
      input: "OptimizeDataset/ShuffleDataset:handle:0"
      input: "OptimizeDataset/cycle_length:output:0"
      input: "OptimizeDataset/block_length:output:0"
      input: "OptimizeDataset/sloppy:output:0"
      input: "OptimizeDataset/buffer_output_elements:output:0"
      input: "OptimizeDataset/prefetch_input_elements:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleAndRepeatDataset"
      op: "ShuffleAndRepeatDataset"
      input: "OptimizeDataset/ExperimentalParallelInterleaveDataset:handle:0"
      input: "OptimizeDataset/buffer_size_1:output:0"
      input: "OptimizeDataset/seed_1:output:0"
      input: "OptimizeDataset/seed2_1:output:0"
      input: "OptimizeDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/num_parallel_calls"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "OptimizeDataset/ShuffleAndRepeatDataset:handle:0"
      input: "OptimizeDataset/num_parallel_calls:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map_<lambda>_99"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "sloppy"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/PrefetchDataset"
      op: "PrefetchDataset"
      input: "OptimizeDataset/ParallelMapDataset:handle:0"
      input: "OptimizeDataset/buffer_size_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/PrefetchDataset:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 38
  min_consumer: 12
}
