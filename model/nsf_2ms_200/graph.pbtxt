node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tensors/normalize_tensors/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2951
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2951
          }
        }
        string_val: "topology/tfrecords/train_2ms/1000.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1001.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1002.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1003.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1004.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1006.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1007.tfrecords"
        string_val: "topology/tfrecords/train_2ms/100.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1010.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1013.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1014.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1015.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1016.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1017.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1018.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1019.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1020.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1021.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1023.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1024.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1025.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1028.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1029.tfrecords"
        string_val: "topology/tfrecords/train_2ms/102.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1030.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1031.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1032.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1033.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1034.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1035.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1036.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1037.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1038.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1039.tfrecords"
        string_val: "topology/tfrecords/train_2ms/103.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1043.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1044.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1045.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1046.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1047.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1048.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1049.tfrecords"
        string_val: "topology/tfrecords/train_2ms/104.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1051.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1052.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1053.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1054.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1055.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1056.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1057.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1058.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1059.tfrecords"
        string_val: "topology/tfrecords/train_2ms/105.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1061.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1062.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1064.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1065.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1068.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1069.tfrecords"
        string_val: "topology/tfrecords/train_2ms/106.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1071.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1072.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1074.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1075.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1076.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1077.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1078.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1079.tfrecords"
        string_val: "topology/tfrecords/train_2ms/107.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1080.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1081.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1082.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1083.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1084.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1086.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1087.tfrecords"
        string_val: "topology/tfrecords/train_2ms/108.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1090.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1091.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1092.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1093.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1094.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1096.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1097.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1098.tfrecords"
        string_val: "topology/tfrecords/train_2ms/109.tfrecords"
        string_val: "topology/tfrecords/train_2ms/10.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1100.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1102.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1103.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1105.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1107.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1108.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1109.tfrecords"
        string_val: "topology/tfrecords/train_2ms/110.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1112.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1114.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1115.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1116.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1117.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1118.tfrecords"
        string_val: "topology/tfrecords/train_2ms/111.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1120.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1121.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1122.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1124.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1125.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1126.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1127.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1128.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1129.tfrecords"
        string_val: "topology/tfrecords/train_2ms/112.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1130.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1134.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1135.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1136.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1137.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1138.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1139.tfrecords"
        string_val: "topology/tfrecords/train_2ms/113.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1140.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1141.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1143.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1144.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1145.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1146.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1147.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1148.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1149.tfrecords"
        string_val: "topology/tfrecords/train_2ms/114.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1150.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1151.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1152.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1153.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1154.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1155.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1156.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1157.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1158.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1159.tfrecords"
        string_val: "topology/tfrecords/train_2ms/115.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1160.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1161.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1163.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1164.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1165.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1166.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1167.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1168.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1169.tfrecords"
        string_val: "topology/tfrecords/train_2ms/116.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1170.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1171.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1172.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1173.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1174.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1175.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1176.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1177.tfrecords"
        string_val: "topology/tfrecords/train_2ms/117.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1180.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1181.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1182.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1185.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1186.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1187.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1189.tfrecords"
        string_val: "topology/tfrecords/train_2ms/118.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1190.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1191.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1193.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1194.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1195.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1197.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1198.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1199.tfrecords"
        string_val: "topology/tfrecords/train_2ms/119.tfrecords"
        string_val: "topology/tfrecords/train_2ms/11.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1200.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1201.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1202.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1203.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1204.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1206.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1207.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1209.tfrecords"
        string_val: "topology/tfrecords/train_2ms/120.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1210.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1211.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1212.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1213.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1214.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1215.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1216.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1218.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1219.tfrecords"
        string_val: "topology/tfrecords/train_2ms/121.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1220.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1221.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1222.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1223.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1224.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1225.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1226.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1227.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1228.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1229.tfrecords"
        string_val: "topology/tfrecords/train_2ms/122.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1232.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1233.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1234.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1235.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1236.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1238.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1239.tfrecords"
        string_val: "topology/tfrecords/train_2ms/123.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1240.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1241.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1242.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1247.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1249.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1250.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1251.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1252.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1253.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1255.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1256.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1257.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1258.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1259.tfrecords"
        string_val: "topology/tfrecords/train_2ms/125.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1260.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1261.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1263.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1264.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1266.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1267.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1268.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1269.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1270.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1271.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1272.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1273.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1274.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1275.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1276.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1277.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1278.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1279.tfrecords"
        string_val: "topology/tfrecords/train_2ms/127.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1280.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1281.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1282.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1283.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1284.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1285.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1287.tfrecords"
        string_val: "topology/tfrecords/train_2ms/128.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1290.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1291.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1293.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1294.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1295.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1296.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1297.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1299.tfrecords"
        string_val: "topology/tfrecords/train_2ms/129.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1300.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1301.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1302.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1303.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1304.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1305.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1306.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1307.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1308.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1309.tfrecords"
        string_val: "topology/tfrecords/train_2ms/130.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1310.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1311.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1312.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1314.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1317.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1319.tfrecords"
        string_val: "topology/tfrecords/train_2ms/131.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1320.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1322.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1323.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1325.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1327.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1328.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1329.tfrecords"
        string_val: "topology/tfrecords/train_2ms/132.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1330.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1331.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1332.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1333.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1334.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1336.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1337.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1338.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1339.tfrecords"
        string_val: "topology/tfrecords/train_2ms/133.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1340.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1341.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1342.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1343.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1344.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1345.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1346.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1347.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1348.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1349.tfrecords"
        string_val: "topology/tfrecords/train_2ms/134.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1350.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1351.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1352.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1353.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1354.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1355.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1357.tfrecords"
        string_val: "topology/tfrecords/train_2ms/135.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1360.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1361.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1363.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1364.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1365.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1366.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1367.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1369.tfrecords"
        string_val: "topology/tfrecords/train_2ms/136.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1370.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1371.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1372.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1374.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1375.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1376.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1377.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1378.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1379.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1380.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1381.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1382.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1383.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1384.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1385.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1387.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1388.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1389.tfrecords"
        string_val: "topology/tfrecords/train_2ms/138.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1390.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1391.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1392.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1393.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1394.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1396.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1397.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1398.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1399.tfrecords"
        string_val: "topology/tfrecords/train_2ms/13.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1400.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1401.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1402.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1403.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1404.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1405.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1406.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1408.tfrecords"
        string_val: "topology/tfrecords/train_2ms/140.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1410.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1413.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1414.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1415.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1417.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1418.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1419.tfrecords"
        string_val: "topology/tfrecords/train_2ms/141.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1420.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1421.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1422.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1426.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1427.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1428.tfrecords"
        string_val: "topology/tfrecords/train_2ms/142.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1430.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1431.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1432.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1433.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1434.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1435.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1436.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1437.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1438.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1439.tfrecords"
        string_val: "topology/tfrecords/train_2ms/143.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1440.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1441.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1443.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1444.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1445.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1447.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1448.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1449.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1450.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1452.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1453.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1455.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1457.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1458.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1459.tfrecords"
        string_val: "topology/tfrecords/train_2ms/145.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1461.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1462.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1463.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1464.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1465.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1466.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1467.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1468.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1469.tfrecords"
        string_val: "topology/tfrecords/train_2ms/146.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1470.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1471.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1472.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1473.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1474.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1475.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1476.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1477.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1478.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1479.tfrecords"
        string_val: "topology/tfrecords/train_2ms/147.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1480.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1481.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1482.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1483.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1484.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1485.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1487.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1488.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1489.tfrecords"
        string_val: "topology/tfrecords/train_2ms/148.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1490.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1492.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1493.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1494.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1495.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1496.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1497.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1498.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1499.tfrecords"
        string_val: "topology/tfrecords/train_2ms/149.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1500.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1501.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1504.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1505.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1506.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1507.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1508.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1509.tfrecords"
        string_val: "topology/tfrecords/train_2ms/150.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1511.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1512.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1513.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1514.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1515.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1518.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1519.tfrecords"
        string_val: "topology/tfrecords/train_2ms/151.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1520.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1521.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1523.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1525.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1526.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1527.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1528.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1529.tfrecords"
        string_val: "topology/tfrecords/train_2ms/152.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1530.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1532.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1533.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1534.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1535.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1536.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1538.tfrecords"
        string_val: "topology/tfrecords/train_2ms/153.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1542.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1544.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1545.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1546.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1547.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1548.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1549.tfrecords"
        string_val: "topology/tfrecords/train_2ms/154.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1551.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1552.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1553.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1556.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1557.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1558.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1559.tfrecords"
        string_val: "topology/tfrecords/train_2ms/155.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1560.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1561.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1562.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1564.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1565.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1566.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1567.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1568.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1569.tfrecords"
        string_val: "topology/tfrecords/train_2ms/156.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1570.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1571.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1573.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1574.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1576.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1577.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1578.tfrecords"
        string_val: "topology/tfrecords/train_2ms/157.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1580.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1581.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1582.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1583.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1584.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1585.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1586.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1587.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1588.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1589.tfrecords"
        string_val: "topology/tfrecords/train_2ms/158.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1590.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1593.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1594.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1595.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1597.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1598.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1599.tfrecords"
        string_val: "topology/tfrecords/train_2ms/159.tfrecords"
        string_val: "topology/tfrecords/train_2ms/15.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1600.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1601.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1602.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1603.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1604.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1606.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1607.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1608.tfrecords"
        string_val: "topology/tfrecords/train_2ms/160.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1611.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1612.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1613.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1614.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1615.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1616.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1618.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1619.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1620.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1621.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1622.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1625.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1626.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1627.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1628.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1629.tfrecords"
        string_val: "topology/tfrecords/train_2ms/162.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1630.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1631.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1633.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1634.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1635.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1636.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1637.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1638.tfrecords"
        string_val: "topology/tfrecords/train_2ms/163.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1640.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1641.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1642.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1643.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1644.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1645.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1646.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1647.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1648.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1649.tfrecords"
        string_val: "topology/tfrecords/train_2ms/164.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1650.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1651.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1652.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1653.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1654.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1655.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1656.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1657.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1658.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1659.tfrecords"
        string_val: "topology/tfrecords/train_2ms/165.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1660.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1661.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1662.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1663.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1664.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1665.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1666.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1667.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1668.tfrecords"
        string_val: "topology/tfrecords/train_2ms/166.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1671.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1672.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1673.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1674.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1675.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1676.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1677.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1678.tfrecords"
        string_val: "topology/tfrecords/train_2ms/167.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1680.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1681.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1683.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1685.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1687.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1688.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1689.tfrecords"
        string_val: "topology/tfrecords/train_2ms/168.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1691.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1692.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1694.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1695.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1696.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1697.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1699.tfrecords"
        string_val: "topology/tfrecords/train_2ms/169.tfrecords"
        string_val: "topology/tfrecords/train_2ms/16.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1700.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1702.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1704.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1706.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1707.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1708.tfrecords"
        string_val: "topology/tfrecords/train_2ms/170.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1710.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1711.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1712.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1714.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1715.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1716.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1717.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1718.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1719.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1720.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1721.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1722.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1725.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1726.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1728.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1729.tfrecords"
        string_val: "topology/tfrecords/train_2ms/172.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1730.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1731.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1732.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1733.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1734.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1735.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1736.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1737.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1738.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1739.tfrecords"
        string_val: "topology/tfrecords/train_2ms/173.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1740.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1741.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1743.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1744.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1745.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1747.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1748.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1749.tfrecords"
        string_val: "topology/tfrecords/train_2ms/174.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1750.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1752.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1753.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1754.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1755.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1757.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1759.tfrecords"
        string_val: "topology/tfrecords/train_2ms/175.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1761.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1762.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1763.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1764.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1765.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1766.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1768.tfrecords"
        string_val: "topology/tfrecords/train_2ms/176.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1770.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1771.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1772.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1773.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1774.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1775.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1776.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1778.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1779.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1780.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1781.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1782.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1783.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1784.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1788.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1789.tfrecords"
        string_val: "topology/tfrecords/train_2ms/178.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1790.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1791.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1792.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1793.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1794.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1796.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1797.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1798.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1799.tfrecords"
        string_val: "topology/tfrecords/train_2ms/179.tfrecords"
        string_val: "topology/tfrecords/train_2ms/17.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1800.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1801.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1802.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1804.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1806.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1807.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1808.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1809.tfrecords"
        string_val: "topology/tfrecords/train_2ms/180.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1810.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1811.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1812.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1813.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1814.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1815.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1816.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1817.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1818.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1819.tfrecords"
        string_val: "topology/tfrecords/train_2ms/181.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1820.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1821.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1824.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1825.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1829.tfrecords"
        string_val: "topology/tfrecords/train_2ms/182.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1830.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1831.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1832.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1833.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1834.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1835.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1836.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1837.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1838.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1840.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1843.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1844.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1845.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1846.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1847.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1848.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1849.tfrecords"
        string_val: "topology/tfrecords/train_2ms/184.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1850.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1851.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1852.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1853.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1855.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1856.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1857.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1858.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1859.tfrecords"
        string_val: "topology/tfrecords/train_2ms/185.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1860.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1861.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1864.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1865.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1866.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1867.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1868.tfrecords"
        string_val: "topology/tfrecords/train_2ms/186.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1870.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1871.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1873.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1874.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1875.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1876.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1877.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1878.tfrecords"
        string_val: "topology/tfrecords/train_2ms/187.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1880.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1881.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1882.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1883.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1884.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1886.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1889.tfrecords"
        string_val: "topology/tfrecords/train_2ms/188.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1890.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1892.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1893.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1894.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1896.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1897.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1898.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1899.tfrecords"
        string_val: "topology/tfrecords/train_2ms/189.tfrecords"
        string_val: "topology/tfrecords/train_2ms/18.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1900.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1902.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1903.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1904.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1906.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1907.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1908.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1909.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1910.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1911.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1912.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1914.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1915.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1917.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1918.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1919.tfrecords"
        string_val: "topology/tfrecords/train_2ms/191.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1920.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1921.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1922.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1923.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1924.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1926.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1927.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1928.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1929.tfrecords"
        string_val: "topology/tfrecords/train_2ms/192.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1930.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1933.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1934.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1938.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1939.tfrecords"
        string_val: "topology/tfrecords/train_2ms/193.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1940.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1942.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1943.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1944.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1945.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1946.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1947.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1948.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1949.tfrecords"
        string_val: "topology/tfrecords/train_2ms/194.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1951.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1953.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1954.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1955.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1956.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1958.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1959.tfrecords"
        string_val: "topology/tfrecords/train_2ms/195.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1960.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1962.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1963.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1964.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1967.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1968.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1969.tfrecords"
        string_val: "topology/tfrecords/train_2ms/196.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1970.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1972.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1973.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1975.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1977.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1978.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1979.tfrecords"
        string_val: "topology/tfrecords/train_2ms/197.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1980.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1981.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1982.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1983.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1985.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1986.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1987.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1989.tfrecords"
        string_val: "topology/tfrecords/train_2ms/198.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1990.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1991.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1992.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1993.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1994.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1995.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1996.tfrecords"
        string_val: "topology/tfrecords/train_2ms/1997.tfrecords"
        string_val: "topology/tfrecords/train_2ms/199.tfrecords"
        string_val: "topology/tfrecords/train_2ms/19.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2001.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2002.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2004.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2005.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2009.tfrecords"
        string_val: "topology/tfrecords/train_2ms/200.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2010.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2013.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2015.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2017.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2018.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2019.tfrecords"
        string_val: "topology/tfrecords/train_2ms/201.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2020.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2023.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2024.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2025.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2026.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2028.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2029.tfrecords"
        string_val: "topology/tfrecords/train_2ms/202.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2030.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2031.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2032.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2033.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2034.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2035.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2036.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2037.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2038.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2039.tfrecords"
        string_val: "topology/tfrecords/train_2ms/203.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2040.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2041.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2042.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2044.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2045.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2046.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2047.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2048.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2049.tfrecords"
        string_val: "topology/tfrecords/train_2ms/204.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2051.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2053.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2054.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2055.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2056.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2057.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2058.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2059.tfrecords"
        string_val: "topology/tfrecords/train_2ms/205.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2062.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2063.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2064.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2065.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2066.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2067.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2068.tfrecords"
        string_val: "topology/tfrecords/train_2ms/206.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2070.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2071.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2072.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2073.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2074.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2075.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2076.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2077.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2078.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2079.tfrecords"
        string_val: "topology/tfrecords/train_2ms/207.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2080.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2083.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2084.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2085.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2086.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2087.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2088.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2089.tfrecords"
        string_val: "topology/tfrecords/train_2ms/208.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2090.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2094.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2095.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2096.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2097.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2098.tfrecords"
        string_val: "topology/tfrecords/train_2ms/209.tfrecords"
        string_val: "topology/tfrecords/train_2ms/20.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2100.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2101.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2102.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2103.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2104.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2105.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2106.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2108.tfrecords"
        string_val: "topology/tfrecords/train_2ms/210.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2110.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2111.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2112.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2114.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2115.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2116.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2117.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2118.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2119.tfrecords"
        string_val: "topology/tfrecords/train_2ms/211.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2120.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2121.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2124.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2125.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2126.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2127.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2129.tfrecords"
        string_val: "topology/tfrecords/train_2ms/212.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2130.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2132.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2133.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2134.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2136.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2137.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2139.tfrecords"
        string_val: "topology/tfrecords/train_2ms/213.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2140.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2141.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2142.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2143.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2144.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2146.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2148.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2149.tfrecords"
        string_val: "topology/tfrecords/train_2ms/214.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2150.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2151.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2152.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2154.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2155.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2157.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2158.tfrecords"
        string_val: "topology/tfrecords/train_2ms/215.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2160.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2162.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2163.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2166.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2167.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2168.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2169.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2170.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2171.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2172.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2173.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2174.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2176.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2177.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2178.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2179.tfrecords"
        string_val: "topology/tfrecords/train_2ms/217.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2180.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2181.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2182.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2185.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2186.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2187.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2188.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2189.tfrecords"
        string_val: "topology/tfrecords/train_2ms/218.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2190.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2191.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2192.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2193.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2194.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2195.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2196.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2197.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2198.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2199.tfrecords"
        string_val: "topology/tfrecords/train_2ms/219.tfrecords"
        string_val: "topology/tfrecords/train_2ms/21.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2200.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2201.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2203.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2204.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2206.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2207.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2208.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2209.tfrecords"
        string_val: "topology/tfrecords/train_2ms/220.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2211.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2212.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2215.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2216.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2219.tfrecords"
        string_val: "topology/tfrecords/train_2ms/221.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2220.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2221.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2222.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2223.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2224.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2225.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2226.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2227.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2228.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2229.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2231.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2233.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2234.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2235.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2236.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2237.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2239.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2240.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2241.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2242.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2243.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2244.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2245.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2246.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2247.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2248.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2250.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2253.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2254.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2255.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2257.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2259.tfrecords"
        string_val: "topology/tfrecords/train_2ms/225.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2260.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2261.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2262.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2264.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2265.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2266.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2267.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2269.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2271.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2272.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2274.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2275.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2276.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2277.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2278.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2279.tfrecords"
        string_val: "topology/tfrecords/train_2ms/227.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2281.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2283.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2284.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2285.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2286.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2287.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2289.tfrecords"
        string_val: "topology/tfrecords/train_2ms/228.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2290.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2291.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2292.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2295.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2296.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2297.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2298.tfrecords"
        string_val: "topology/tfrecords/train_2ms/229.tfrecords"
        string_val: "topology/tfrecords/train_2ms/22.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2300.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2301.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2302.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2303.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2304.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2305.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2307.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2308.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2309.tfrecords"
        string_val: "topology/tfrecords/train_2ms/230.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2311.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2312.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2313.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2314.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2315.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2316.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2318.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2319.tfrecords"
        string_val: "topology/tfrecords/train_2ms/231.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2320.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2321.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2322.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2323.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2324.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2326.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2327.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2328.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2329.tfrecords"
        string_val: "topology/tfrecords/train_2ms/232.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2330.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2331.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2333.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2334.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2335.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2336.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2337.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2338.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2339.tfrecords"
        string_val: "topology/tfrecords/train_2ms/233.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2340.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2341.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2342.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2343.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2344.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2345.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2346.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2347.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2349.tfrecords"
        string_val: "topology/tfrecords/train_2ms/234.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2350.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2351.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2353.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2354.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2355.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2356.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2357.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2358.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2359.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2360.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2361.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2362.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2364.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2365.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2366.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2367.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2369.tfrecords"
        string_val: "topology/tfrecords/train_2ms/236.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2370.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2372.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2373.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2374.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2376.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2377.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2379.tfrecords"
        string_val: "topology/tfrecords/train_2ms/237.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2381.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2383.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2384.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2385.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2386.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2387.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2389.tfrecords"
        string_val: "topology/tfrecords/train_2ms/238.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2390.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2391.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2392.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2393.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2395.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2396.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2397.tfrecords"
        string_val: "topology/tfrecords/train_2ms/239.tfrecords"
        string_val: "topology/tfrecords/train_2ms/23.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2400.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2403.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2404.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2405.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2406.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2407.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2408.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2409.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2410.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2411.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2412.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2413.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2414.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2415.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2416.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2417.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2419.tfrecords"
        string_val: "topology/tfrecords/train_2ms/241.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2420.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2422.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2424.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2425.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2426.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2427.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2428.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2429.tfrecords"
        string_val: "topology/tfrecords/train_2ms/242.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2431.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2433.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2434.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2435.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2436.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2437.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2438.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2439.tfrecords"
        string_val: "topology/tfrecords/train_2ms/243.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2442.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2443.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2444.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2445.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2446.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2448.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2449.tfrecords"
        string_val: "topology/tfrecords/train_2ms/244.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2450.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2451.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2452.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2453.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2454.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2456.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2457.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2458.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2459.tfrecords"
        string_val: "topology/tfrecords/train_2ms/245.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2460.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2461.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2462.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2463.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2464.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2465.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2466.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2467.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2468.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2469.tfrecords"
        string_val: "topology/tfrecords/train_2ms/246.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2471.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2472.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2473.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2474.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2475.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2476.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2478.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2479.tfrecords"
        string_val: "topology/tfrecords/train_2ms/247.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2480.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2481.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2482.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2483.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2484.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2485.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2486.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2487.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2488.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2489.tfrecords"
        string_val: "topology/tfrecords/train_2ms/248.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2494.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2495.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2496.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2497.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2498.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2499.tfrecords"
        string_val: "topology/tfrecords/train_2ms/249.tfrecords"
        string_val: "topology/tfrecords/train_2ms/24.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2500.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2501.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2502.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2503.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2504.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2505.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2506.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2507.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2508.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2509.tfrecords"
        string_val: "topology/tfrecords/train_2ms/250.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2510.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2512.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2513.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2514.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2515.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2517.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2518.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2519.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2520.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2521.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2522.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2523.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2524.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2525.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2528.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2529.tfrecords"
        string_val: "topology/tfrecords/train_2ms/252.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2530.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2531.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2533.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2534.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2536.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2537.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2539.tfrecords"
        string_val: "topology/tfrecords/train_2ms/253.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2540.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2541.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2542.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2543.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2544.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2545.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2546.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2547.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2548.tfrecords"
        string_val: "topology/tfrecords/train_2ms/254.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2553.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2554.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2556.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2557.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2558.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2559.tfrecords"
        string_val: "topology/tfrecords/train_2ms/255.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2561.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2562.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2563.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2565.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2566.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2567.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2569.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2570.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2571.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2572.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2573.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2574.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2575.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2577.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2579.tfrecords"
        string_val: "topology/tfrecords/train_2ms/257.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2580.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2581.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2582.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2583.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2584.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2585.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2586.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2587.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2588.tfrecords"
        string_val: "topology/tfrecords/train_2ms/258.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2591.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2592.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2593.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2594.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2595.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2596.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2597.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2598.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2599.tfrecords"
        string_val: "topology/tfrecords/train_2ms/259.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2600.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2601.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2602.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2603.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2604.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2605.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2606.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2607.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2608.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2609.tfrecords"
        string_val: "topology/tfrecords/train_2ms/260.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2610.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2611.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2612.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2613.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2614.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2615.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2616.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2617.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2618.tfrecords"
        string_val: "topology/tfrecords/train_2ms/261.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2620.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2621.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2622.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2623.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2624.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2625.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2627.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2629.tfrecords"
        string_val: "topology/tfrecords/train_2ms/262.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2630.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2631.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2632.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2634.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2635.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2636.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2638.tfrecords"
        string_val: "topology/tfrecords/train_2ms/263.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2641.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2642.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2644.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2645.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2646.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2647.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2648.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2651.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2653.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2654.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2655.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2656.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2657.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2658.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2659.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2660.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2661.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2662.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2664.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2665.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2666.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2667.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2668.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2669.tfrecords"
        string_val: "topology/tfrecords/train_2ms/266.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2670.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2671.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2672.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2674.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2675.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2676.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2677.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2678.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2679.tfrecords"
        string_val: "topology/tfrecords/train_2ms/267.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2680.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2681.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2682.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2685.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2686.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2688.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2689.tfrecords"
        string_val: "topology/tfrecords/train_2ms/268.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2690.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2691.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2692.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2693.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2694.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2695.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2696.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2697.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2698.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2699.tfrecords"
        string_val: "topology/tfrecords/train_2ms/26.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2701.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2702.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2703.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2704.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2707.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2708.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2709.tfrecords"
        string_val: "topology/tfrecords/train_2ms/270.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2710.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2711.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2712.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2713.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2714.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2716.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2717.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2718.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2719.tfrecords"
        string_val: "topology/tfrecords/train_2ms/271.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2720.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2722.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2724.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2725.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2726.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2727.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2728.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2729.tfrecords"
        string_val: "topology/tfrecords/train_2ms/272.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2730.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2731.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2732.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2733.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2734.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2735.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2736.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2737.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2738.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2739.tfrecords"
        string_val: "topology/tfrecords/train_2ms/273.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2740.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2742.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2743.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2744.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2745.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2746.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2748.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2749.tfrecords"
        string_val: "topology/tfrecords/train_2ms/274.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2750.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2751.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2752.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2753.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2755.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2756.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2757.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2759.tfrecords"
        string_val: "topology/tfrecords/train_2ms/275.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2760.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2761.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2762.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2765.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2767.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2768.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2769.tfrecords"
        string_val: "topology/tfrecords/train_2ms/276.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2770.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2771.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2772.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2773.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2774.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2775.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2776.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2777.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2778.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2779.tfrecords"
        string_val: "topology/tfrecords/train_2ms/277.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2780.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2781.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2783.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2784.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2786.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2787.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2788.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2789.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2791.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2792.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2793.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2794.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2795.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2796.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2797.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2798.tfrecords"
        string_val: "topology/tfrecords/train_2ms/279.tfrecords"
        string_val: "topology/tfrecords/train_2ms/27.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2801.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2802.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2804.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2805.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2806.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2807.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2809.tfrecords"
        string_val: "topology/tfrecords/train_2ms/280.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2810.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2812.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2813.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2814.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2815.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2816.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2817.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2818.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2819.tfrecords"
        string_val: "topology/tfrecords/train_2ms/281.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2820.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2821.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2822.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2823.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2824.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2825.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2826.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2827.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2828.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2829.tfrecords"
        string_val: "topology/tfrecords/train_2ms/282.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2830.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2832.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2833.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2834.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2835.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2836.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2837.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2838.tfrecords"
        string_val: "topology/tfrecords/train_2ms/283.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2840.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2841.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2843.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2844.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2845.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2846.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2847.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2848.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2849.tfrecords"
        string_val: "topology/tfrecords/train_2ms/284.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2850.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2851.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2852.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2854.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2855.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2856.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2857.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2858.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2859.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2860.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2861.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2862.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2863.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2868.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2869.tfrecords"
        string_val: "topology/tfrecords/train_2ms/286.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2870.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2872.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2874.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2875.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2876.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2877.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2878.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2879.tfrecords"
        string_val: "topology/tfrecords/train_2ms/287.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2881.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2882.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2883.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2884.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2885.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2886.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2887.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2888.tfrecords"
        string_val: "topology/tfrecords/train_2ms/288.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2890.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2891.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2892.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2893.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2894.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2896.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2898.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2899.tfrecords"
        string_val: "topology/tfrecords/train_2ms/28.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2901.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2902.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2903.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2904.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2905.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2906.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2907.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2908.tfrecords"
        string_val: "topology/tfrecords/train_2ms/290.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2910.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2912.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2913.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2916.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2918.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2919.tfrecords"
        string_val: "topology/tfrecords/train_2ms/291.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2922.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2924.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2925.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2926.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2927.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2928.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2929.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2931.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2932.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2933.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2936.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2937.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2938.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2939.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2940.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2941.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2942.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2943.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2944.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2946.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2947.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2948.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2949.tfrecords"
        string_val: "topology/tfrecords/train_2ms/294.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2950.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2951.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2952.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2954.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2955.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2956.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2957.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2959.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2961.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2962.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2963.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2964.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2965.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2966.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2968.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2969.tfrecords"
        string_val: "topology/tfrecords/train_2ms/296.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2970.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2971.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2974.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2976.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2978.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2979.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2980.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2981.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2983.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2984.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2986.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2987.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2988.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2989.tfrecords"
        string_val: "topology/tfrecords/train_2ms/298.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2990.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2991.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2993.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2994.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2995.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2996.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2997.tfrecords"
        string_val: "topology/tfrecords/train_2ms/2998.tfrecords"
        string_val: "topology/tfrecords/train_2ms/299.tfrecords"
        string_val: "topology/tfrecords/train_2ms/29.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3000.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3001.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3002.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3004.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3005.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3007.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3008.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3009.tfrecords"
        string_val: "topology/tfrecords/train_2ms/300.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3010.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3011.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3012.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3013.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3015.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3017.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3018.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3019.tfrecords"
        string_val: "topology/tfrecords/train_2ms/301.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3021.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3022.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3024.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3025.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3027.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3028.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3029.tfrecords"
        string_val: "topology/tfrecords/train_2ms/302.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3030.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3031.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3032.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3033.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3034.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3035.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3036.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3037.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3038.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3039.tfrecords"
        string_val: "topology/tfrecords/train_2ms/303.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3040.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3041.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3042.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3043.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3044.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3045.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3046.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3047.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3048.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3049.tfrecords"
        string_val: "topology/tfrecords/train_2ms/304.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3050.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3051.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3052.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3053.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3054.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3055.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3056.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3058.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3059.tfrecords"
        string_val: "topology/tfrecords/train_2ms/305.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3061.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3062.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3063.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3064.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3065.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3066.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3067.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3068.tfrecords"
        string_val: "topology/tfrecords/train_2ms/306.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3071.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3072.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3073.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3075.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3076.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3077.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3079.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3080.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3081.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3082.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3083.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3085.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3086.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3087.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3088.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3089.tfrecords"
        string_val: "topology/tfrecords/train_2ms/308.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3090.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3091.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3093.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3097.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3099.tfrecords"
        string_val: "topology/tfrecords/train_2ms/309.tfrecords"
        string_val: "topology/tfrecords/train_2ms/30.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3100.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3101.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3102.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3103.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3104.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3105.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3107.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3108.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3109.tfrecords"
        string_val: "topology/tfrecords/train_2ms/310.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3110.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3113.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3114.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3115.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3116.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3118.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3119.tfrecords"
        string_val: "topology/tfrecords/train_2ms/311.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3120.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3122.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3123.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3124.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3125.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3126.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3127.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3128.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3129.tfrecords"
        string_val: "topology/tfrecords/train_2ms/312.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3130.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3132.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3133.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3134.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3136.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3137.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3139.tfrecords"
        string_val: "topology/tfrecords/train_2ms/313.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3140.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3142.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3143.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3144.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3145.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3147.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3148.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3149.tfrecords"
        string_val: "topology/tfrecords/train_2ms/314.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3150.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3151.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3152.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3153.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3154.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3155.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3156.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3158.tfrecords"
        string_val: "topology/tfrecords/train_2ms/315.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3160.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3161.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3162.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3163.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3164.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3166.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3167.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3168.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3169.tfrecords"
        string_val: "topology/tfrecords/train_2ms/316.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3170.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3171.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3172.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3173.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3174.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3175.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3176.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3177.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3178.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3179.tfrecords"
        string_val: "topology/tfrecords/train_2ms/317.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3180.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3181.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3182.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3183.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3184.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3185.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3187.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3188.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3189.tfrecords"
        string_val: "topology/tfrecords/train_2ms/318.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3190.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3191.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3192.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3193.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3194.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3196.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3197.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3198.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3199.tfrecords"
        string_val: "topology/tfrecords/train_2ms/319.tfrecords"
        string_val: "topology/tfrecords/train_2ms/31.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3200.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3201.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3202.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3203.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3205.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3207.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3208.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3209.tfrecords"
        string_val: "topology/tfrecords/train_2ms/320.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3210.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3211.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3212.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3213.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3215.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3217.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3218.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3219.tfrecords"
        string_val: "topology/tfrecords/train_2ms/321.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3220.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3221.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3223.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3224.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3225.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3227.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3228.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3229.tfrecords"
        string_val: "topology/tfrecords/train_2ms/322.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3230.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3231.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3232.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3233.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3234.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3235.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3236.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3237.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3238.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3239.tfrecords"
        string_val: "topology/tfrecords/train_2ms/323.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3241.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3242.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3244.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3245.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3246.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3248.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3249.tfrecords"
        string_val: "topology/tfrecords/train_2ms/324.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3250.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3251.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3254.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3255.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3256.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3258.tfrecords"
        string_val: "topology/tfrecords/train_2ms/325.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3260.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3261.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3262.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3264.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3265.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3266.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3268.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3269.tfrecords"
        string_val: "topology/tfrecords/train_2ms/326.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3271.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3272.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3273.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3274.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3278.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3279.tfrecords"
        string_val: "topology/tfrecords/train_2ms/327.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3281.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3284.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3285.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3286.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3287.tfrecords"
        string_val: "topology/tfrecords/train_2ms/328.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3290.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3291.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3292.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3293.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3294.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3295.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3296.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3298.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3299.tfrecords"
        string_val: "topology/tfrecords/train_2ms/329.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3301.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3302.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3303.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3304.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3305.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3306.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3307.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3308.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3309.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3310.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3311.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3312.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3313.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3315.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3316.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3317.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3318.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3319.tfrecords"
        string_val: "topology/tfrecords/train_2ms/331.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3321.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3322.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3324.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3326.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3327.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3329.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3330.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3331.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3332.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3333.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3334.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3335.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3337.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3338.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3339.tfrecords"
        string_val: "topology/tfrecords/train_2ms/333.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3341.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3342.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3344.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3345.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3347.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3348.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3349.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3350.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3353.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3354.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3355.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3356.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3357.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3358.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3359.tfrecords"
        string_val: "topology/tfrecords/train_2ms/335.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3360.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3361.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3362.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3363.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3366.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3367.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3368.tfrecords"
        string_val: "topology/tfrecords/train_2ms/336.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3370.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3371.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3372.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3373.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3374.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3375.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3378.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3380.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3382.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3383.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3384.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3386.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3387.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3388.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3389.tfrecords"
        string_val: "topology/tfrecords/train_2ms/338.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3390.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3391.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3392.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3393.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3395.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3397.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3398.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3399.tfrecords"
        string_val: "topology/tfrecords/train_2ms/339.tfrecords"
        string_val: "topology/tfrecords/train_2ms/33.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3402.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3404.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3405.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3406.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3407.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3409.tfrecords"
        string_val: "topology/tfrecords/train_2ms/340.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3410.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3411.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3412.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3414.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3416.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3417.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3418.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3419.tfrecords"
        string_val: "topology/tfrecords/train_2ms/341.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3420.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3421.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3422.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3423.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3424.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3425.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3426.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3427.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3428.tfrecords"
        string_val: "topology/tfrecords/train_2ms/342.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3430.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3431.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3432.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3434.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3435.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3436.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3437.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3439.tfrecords"
        string_val: "topology/tfrecords/train_2ms/343.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3440.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3441.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3442.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3443.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3444.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3445.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3446.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3447.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3448.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3449.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3450.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3451.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3452.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3454.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3455.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3456.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3457.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3458.tfrecords"
        string_val: "topology/tfrecords/train_2ms/345.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3460.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3461.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3462.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3463.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3465.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3466.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3468.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3469.tfrecords"
        string_val: "topology/tfrecords/train_2ms/346.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3470.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3471.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3472.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3473.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3475.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3476.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3477.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3479.tfrecords"
        string_val: "topology/tfrecords/train_2ms/347.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3480.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3481.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3482.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3483.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3484.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3485.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3486.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3487.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3488.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3489.tfrecords"
        string_val: "topology/tfrecords/train_2ms/348.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3490.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3491.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3492.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3493.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3494.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3495.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3496.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3497.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3498.tfrecords"
        string_val: "topology/tfrecords/train_2ms/349.tfrecords"
        string_val: "topology/tfrecords/train_2ms/34.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3500.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3501.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3502.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3504.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3506.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3509.tfrecords"
        string_val: "topology/tfrecords/train_2ms/350.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3511.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3512.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3513.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3515.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3516.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3518.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3520.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3521.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3522.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3523.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3524.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3525.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3526.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3528.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3529.tfrecords"
        string_val: "topology/tfrecords/train_2ms/352.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3532.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3533.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3534.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3535.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3537.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3538.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3539.tfrecords"
        string_val: "topology/tfrecords/train_2ms/353.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3540.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3541.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3542.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3543.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3544.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3545.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3546.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3547.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3548.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3549.tfrecords"
        string_val: "topology/tfrecords/train_2ms/354.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3550.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3551.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3552.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3553.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3555.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3556.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3557.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3558.tfrecords"
        string_val: "topology/tfrecords/train_2ms/355.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3560.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3561.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3563.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3564.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3565.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3566.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3567.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3568.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3569.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3570.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3571.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3572.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3575.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3576.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3578.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3579.tfrecords"
        string_val: "topology/tfrecords/train_2ms/357.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3580.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3582.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3583.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3584.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3585.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3586.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3587.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3589.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3590.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3591.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3592.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3593.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3594.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3595.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3596.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3597.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3598.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3599.tfrecords"
        string_val: "topology/tfrecords/train_2ms/359.tfrecords"
        string_val: "topology/tfrecords/train_2ms/35.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3601.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3603.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3604.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3605.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3609.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3613.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3614.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3615.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3617.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3618.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3619.tfrecords"
        string_val: "topology/tfrecords/train_2ms/361.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3620.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3621.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3622.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3623.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3624.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3625.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3626.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3628.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3629.tfrecords"
        string_val: "topology/tfrecords/train_2ms/362.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3630.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3631.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3632.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3633.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3634.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3635.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3636.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3638.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3639.tfrecords"
        string_val: "topology/tfrecords/train_2ms/363.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3640.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3641.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3642.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3643.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3644.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3645.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3647.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3649.tfrecords"
        string_val: "topology/tfrecords/train_2ms/364.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3650.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3651.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3652.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3653.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3654.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3655.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3656.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3657.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3658.tfrecords"
        string_val: "topology/tfrecords/train_2ms/365.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3661.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3662.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3663.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3665.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3666.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3667.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3668.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3669.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3670.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3671.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3672.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3673.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3675.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3676.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3678.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3679.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3680.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3681.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3682.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3683.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3685.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3686.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3687.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3688.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3689.tfrecords"
        string_val: "topology/tfrecords/train_2ms/368.tfrecords"
        string_val: "topology/tfrecords/train_2ms/369.tfrecords"
        string_val: "topology/tfrecords/train_2ms/36.tfrecords"
        string_val: "topology/tfrecords/train_2ms/371.tfrecords"
        string_val: "topology/tfrecords/train_2ms/372.tfrecords"
        string_val: "topology/tfrecords/train_2ms/373.tfrecords"
        string_val: "topology/tfrecords/train_2ms/374.tfrecords"
        string_val: "topology/tfrecords/train_2ms/375.tfrecords"
        string_val: "topology/tfrecords/train_2ms/376.tfrecords"
        string_val: "topology/tfrecords/train_2ms/378.tfrecords"
        string_val: "topology/tfrecords/train_2ms/379.tfrecords"
        string_val: "topology/tfrecords/train_2ms/37.tfrecords"
        string_val: "topology/tfrecords/train_2ms/380.tfrecords"
        string_val: "topology/tfrecords/train_2ms/381.tfrecords"
        string_val: "topology/tfrecords/train_2ms/385.tfrecords"
        string_val: "topology/tfrecords/train_2ms/386.tfrecords"
        string_val: "topology/tfrecords/train_2ms/387.tfrecords"
        string_val: "topology/tfrecords/train_2ms/388.tfrecords"
        string_val: "topology/tfrecords/train_2ms/389.tfrecords"
        string_val: "topology/tfrecords/train_2ms/38.tfrecords"
        string_val: "topology/tfrecords/train_2ms/391.tfrecords"
        string_val: "topology/tfrecords/train_2ms/395.tfrecords"
        string_val: "topology/tfrecords/train_2ms/396.tfrecords"
        string_val: "topology/tfrecords/train_2ms/397.tfrecords"
        string_val: "topology/tfrecords/train_2ms/398.tfrecords"
        string_val: "topology/tfrecords/train_2ms/39.tfrecords"
        string_val: "topology/tfrecords/train_2ms/3.tfrecords"
        string_val: "topology/tfrecords/train_2ms/400.tfrecords"
        string_val: "topology/tfrecords/train_2ms/401.tfrecords"
        string_val: "topology/tfrecords/train_2ms/403.tfrecords"
        string_val: "topology/tfrecords/train_2ms/405.tfrecords"
        string_val: "topology/tfrecords/train_2ms/406.tfrecords"
        string_val: "topology/tfrecords/train_2ms/407.tfrecords"
        string_val: "topology/tfrecords/train_2ms/409.tfrecords"
        string_val: "topology/tfrecords/train_2ms/40.tfrecords"
        string_val: "topology/tfrecords/train_2ms/410.tfrecords"
        string_val: "topology/tfrecords/train_2ms/411.tfrecords"
        string_val: "topology/tfrecords/train_2ms/412.tfrecords"
        string_val: "topology/tfrecords/train_2ms/414.tfrecords"
        string_val: "topology/tfrecords/train_2ms/415.tfrecords"
        string_val: "topology/tfrecords/train_2ms/417.tfrecords"
        string_val: "topology/tfrecords/train_2ms/419.tfrecords"
        string_val: "topology/tfrecords/train_2ms/421.tfrecords"
        string_val: "topology/tfrecords/train_2ms/422.tfrecords"
        string_val: "topology/tfrecords/train_2ms/423.tfrecords"
        string_val: "topology/tfrecords/train_2ms/424.tfrecords"
        string_val: "topology/tfrecords/train_2ms/425.tfrecords"
        string_val: "topology/tfrecords/train_2ms/426.tfrecords"
        string_val: "topology/tfrecords/train_2ms/427.tfrecords"
        string_val: "topology/tfrecords/train_2ms/428.tfrecords"
        string_val: "topology/tfrecords/train_2ms/42.tfrecords"
        string_val: "topology/tfrecords/train_2ms/430.tfrecords"
        string_val: "topology/tfrecords/train_2ms/431.tfrecords"
        string_val: "topology/tfrecords/train_2ms/432.tfrecords"
        string_val: "topology/tfrecords/train_2ms/435.tfrecords"
        string_val: "topology/tfrecords/train_2ms/438.tfrecords"
        string_val: "topology/tfrecords/train_2ms/440.tfrecords"
        string_val: "topology/tfrecords/train_2ms/441.tfrecords"
        string_val: "topology/tfrecords/train_2ms/442.tfrecords"
        string_val: "topology/tfrecords/train_2ms/443.tfrecords"
        string_val: "topology/tfrecords/train_2ms/444.tfrecords"
        string_val: "topology/tfrecords/train_2ms/445.tfrecords"
        string_val: "topology/tfrecords/train_2ms/447.tfrecords"
        string_val: "topology/tfrecords/train_2ms/448.tfrecords"
        string_val: "topology/tfrecords/train_2ms/449.tfrecords"
        string_val: "topology/tfrecords/train_2ms/44.tfrecords"
        string_val: "topology/tfrecords/train_2ms/450.tfrecords"
        string_val: "topology/tfrecords/train_2ms/451.tfrecords"
        string_val: "topology/tfrecords/train_2ms/452.tfrecords"
        string_val: "topology/tfrecords/train_2ms/453.tfrecords"
        string_val: "topology/tfrecords/train_2ms/454.tfrecords"
        string_val: "topology/tfrecords/train_2ms/455.tfrecords"
        string_val: "topology/tfrecords/train_2ms/456.tfrecords"
        string_val: "topology/tfrecords/train_2ms/457.tfrecords"
        string_val: "topology/tfrecords/train_2ms/459.tfrecords"
        string_val: "topology/tfrecords/train_2ms/45.tfrecords"
        string_val: "topology/tfrecords/train_2ms/460.tfrecords"
        string_val: "topology/tfrecords/train_2ms/461.tfrecords"
        string_val: "topology/tfrecords/train_2ms/462.tfrecords"
        string_val: "topology/tfrecords/train_2ms/463.tfrecords"
        string_val: "topology/tfrecords/train_2ms/464.tfrecords"
        string_val: "topology/tfrecords/train_2ms/465.tfrecords"
        string_val: "topology/tfrecords/train_2ms/467.tfrecords"
        string_val: "topology/tfrecords/train_2ms/468.tfrecords"
        string_val: "topology/tfrecords/train_2ms/470.tfrecords"
        string_val: "topology/tfrecords/train_2ms/471.tfrecords"
        string_val: "topology/tfrecords/train_2ms/473.tfrecords"
        string_val: "topology/tfrecords/train_2ms/474.tfrecords"
        string_val: "topology/tfrecords/train_2ms/475.tfrecords"
        string_val: "topology/tfrecords/train_2ms/476.tfrecords"
        string_val: "topology/tfrecords/train_2ms/477.tfrecords"
        string_val: "topology/tfrecords/train_2ms/478.tfrecords"
        string_val: "topology/tfrecords/train_2ms/479.tfrecords"
        string_val: "topology/tfrecords/train_2ms/47.tfrecords"
        string_val: "topology/tfrecords/train_2ms/481.tfrecords"
        string_val: "topology/tfrecords/train_2ms/482.tfrecords"
        string_val: "topology/tfrecords/train_2ms/483.tfrecords"
        string_val: "topology/tfrecords/train_2ms/484.tfrecords"
        string_val: "topology/tfrecords/train_2ms/485.tfrecords"
        string_val: "topology/tfrecords/train_2ms/486.tfrecords"
        string_val: "topology/tfrecords/train_2ms/487.tfrecords"
        string_val: "topology/tfrecords/train_2ms/488.tfrecords"
        string_val: "topology/tfrecords/train_2ms/489.tfrecords"
        string_val: "topology/tfrecords/train_2ms/48.tfrecords"
        string_val: "topology/tfrecords/train_2ms/490.tfrecords"
        string_val: "topology/tfrecords/train_2ms/491.tfrecords"
        string_val: "topology/tfrecords/train_2ms/492.tfrecords"
        string_val: "topology/tfrecords/train_2ms/494.tfrecords"
        string_val: "topology/tfrecords/train_2ms/495.tfrecords"
        string_val: "topology/tfrecords/train_2ms/496.tfrecords"
        string_val: "topology/tfrecords/train_2ms/497.tfrecords"
        string_val: "topology/tfrecords/train_2ms/498.tfrecords"
        string_val: "topology/tfrecords/train_2ms/49.tfrecords"
        string_val: "topology/tfrecords/train_2ms/500.tfrecords"
        string_val: "topology/tfrecords/train_2ms/502.tfrecords"
        string_val: "topology/tfrecords/train_2ms/503.tfrecords"
        string_val: "topology/tfrecords/train_2ms/504.tfrecords"
        string_val: "topology/tfrecords/train_2ms/505.tfrecords"
        string_val: "topology/tfrecords/train_2ms/506.tfrecords"
        string_val: "topology/tfrecords/train_2ms/508.tfrecords"
        string_val: "topology/tfrecords/train_2ms/50.tfrecords"
        string_val: "topology/tfrecords/train_2ms/510.tfrecords"
        string_val: "topology/tfrecords/train_2ms/511.tfrecords"
        string_val: "topology/tfrecords/train_2ms/512.tfrecords"
        string_val: "topology/tfrecords/train_2ms/515.tfrecords"
        string_val: "topology/tfrecords/train_2ms/516.tfrecords"
        string_val: "topology/tfrecords/train_2ms/517.tfrecords"
        string_val: "topology/tfrecords/train_2ms/518.tfrecords"
        string_val: "topology/tfrecords/train_2ms/519.tfrecords"
        string_val: "topology/tfrecords/train_2ms/51.tfrecords"
        string_val: "topology/tfrecords/train_2ms/521.tfrecords"
        string_val: "topology/tfrecords/train_2ms/522.tfrecords"
        string_val: "topology/tfrecords/train_2ms/523.tfrecords"
        string_val: "topology/tfrecords/train_2ms/524.tfrecords"
        string_val: "topology/tfrecords/train_2ms/526.tfrecords"
        string_val: "topology/tfrecords/train_2ms/527.tfrecords"
        string_val: "topology/tfrecords/train_2ms/528.tfrecords"
        string_val: "topology/tfrecords/train_2ms/533.tfrecords"
        string_val: "topology/tfrecords/train_2ms/534.tfrecords"
        string_val: "topology/tfrecords/train_2ms/535.tfrecords"
        string_val: "topology/tfrecords/train_2ms/536.tfrecords"
        string_val: "topology/tfrecords/train_2ms/537.tfrecords"
        string_val: "topology/tfrecords/train_2ms/538.tfrecords"
        string_val: "topology/tfrecords/train_2ms/539.tfrecords"
        string_val: "topology/tfrecords/train_2ms/540.tfrecords"
        string_val: "topology/tfrecords/train_2ms/541.tfrecords"
        string_val: "topology/tfrecords/train_2ms/542.tfrecords"
        string_val: "topology/tfrecords/train_2ms/543.tfrecords"
        string_val: "topology/tfrecords/train_2ms/544.tfrecords"
        string_val: "topology/tfrecords/train_2ms/545.tfrecords"
        string_val: "topology/tfrecords/train_2ms/546.tfrecords"
        string_val: "topology/tfrecords/train_2ms/547.tfrecords"
        string_val: "topology/tfrecords/train_2ms/549.tfrecords"
        string_val: "topology/tfrecords/train_2ms/54.tfrecords"
        string_val: "topology/tfrecords/train_2ms/550.tfrecords"
        string_val: "topology/tfrecords/train_2ms/552.tfrecords"
        string_val: "topology/tfrecords/train_2ms/553.tfrecords"
        string_val: "topology/tfrecords/train_2ms/556.tfrecords"
        string_val: "topology/tfrecords/train_2ms/558.tfrecords"
        string_val: "topology/tfrecords/train_2ms/559.tfrecords"
        string_val: "topology/tfrecords/train_2ms/55.tfrecords"
        string_val: "topology/tfrecords/train_2ms/561.tfrecords"
        string_val: "topology/tfrecords/train_2ms/562.tfrecords"
        string_val: "topology/tfrecords/train_2ms/563.tfrecords"
        string_val: "topology/tfrecords/train_2ms/564.tfrecords"
        string_val: "topology/tfrecords/train_2ms/565.tfrecords"
        string_val: "topology/tfrecords/train_2ms/566.tfrecords"
        string_val: "topology/tfrecords/train_2ms/568.tfrecords"
        string_val: "topology/tfrecords/train_2ms/569.tfrecords"
        string_val: "topology/tfrecords/train_2ms/56.tfrecords"
        string_val: "topology/tfrecords/train_2ms/570.tfrecords"
        string_val: "topology/tfrecords/train_2ms/571.tfrecords"
        string_val: "topology/tfrecords/train_2ms/572.tfrecords"
        string_val: "topology/tfrecords/train_2ms/574.tfrecords"
        string_val: "topology/tfrecords/train_2ms/576.tfrecords"
        string_val: "topology/tfrecords/train_2ms/578.tfrecords"
        string_val: "topology/tfrecords/train_2ms/57.tfrecords"
        string_val: "topology/tfrecords/train_2ms/580.tfrecords"
        string_val: "topology/tfrecords/train_2ms/581.tfrecords"
        string_val: "topology/tfrecords/train_2ms/582.tfrecords"
        string_val: "topology/tfrecords/train_2ms/583.tfrecords"
        string_val: "topology/tfrecords/train_2ms/584.tfrecords"
        string_val: "topology/tfrecords/train_2ms/586.tfrecords"
        string_val: "topology/tfrecords/train_2ms/587.tfrecords"
        string_val: "topology/tfrecords/train_2ms/588.tfrecords"
        string_val: "topology/tfrecords/train_2ms/589.tfrecords"
        string_val: "topology/tfrecords/train_2ms/58.tfrecords"
        string_val: "topology/tfrecords/train_2ms/590.tfrecords"
        string_val: "topology/tfrecords/train_2ms/591.tfrecords"
        string_val: "topology/tfrecords/train_2ms/592.tfrecords"
        string_val: "topology/tfrecords/train_2ms/593.tfrecords"
        string_val: "topology/tfrecords/train_2ms/594.tfrecords"
        string_val: "topology/tfrecords/train_2ms/595.tfrecords"
        string_val: "topology/tfrecords/train_2ms/596.tfrecords"
        string_val: "topology/tfrecords/train_2ms/597.tfrecords"
        string_val: "topology/tfrecords/train_2ms/598.tfrecords"
        string_val: "topology/tfrecords/train_2ms/599.tfrecords"
        string_val: "topology/tfrecords/train_2ms/59.tfrecords"
        string_val: "topology/tfrecords/train_2ms/5.tfrecords"
        string_val: "topology/tfrecords/train_2ms/600.tfrecords"
        string_val: "topology/tfrecords/train_2ms/602.tfrecords"
        string_val: "topology/tfrecords/train_2ms/603.tfrecords"
        string_val: "topology/tfrecords/train_2ms/604.tfrecords"
        string_val: "topology/tfrecords/train_2ms/605.tfrecords"
        string_val: "topology/tfrecords/train_2ms/606.tfrecords"
        string_val: "topology/tfrecords/train_2ms/607.tfrecords"
        string_val: "topology/tfrecords/train_2ms/608.tfrecords"
        string_val: "topology/tfrecords/train_2ms/609.tfrecords"
        string_val: "topology/tfrecords/train_2ms/60.tfrecords"
        string_val: "topology/tfrecords/train_2ms/610.tfrecords"
        string_val: "topology/tfrecords/train_2ms/611.tfrecords"
        string_val: "topology/tfrecords/train_2ms/612.tfrecords"
        string_val: "topology/tfrecords/train_2ms/613.tfrecords"
        string_val: "topology/tfrecords/train_2ms/614.tfrecords"
        string_val: "topology/tfrecords/train_2ms/615.tfrecords"
        string_val: "topology/tfrecords/train_2ms/618.tfrecords"
        string_val: "topology/tfrecords/train_2ms/619.tfrecords"
        string_val: "topology/tfrecords/train_2ms/61.tfrecords"
        string_val: "topology/tfrecords/train_2ms/620.tfrecords"
        string_val: "topology/tfrecords/train_2ms/621.tfrecords"
        string_val: "topology/tfrecords/train_2ms/623.tfrecords"
        string_val: "topology/tfrecords/train_2ms/624.tfrecords"
        string_val: "topology/tfrecords/train_2ms/625.tfrecords"
        string_val: "topology/tfrecords/train_2ms/626.tfrecords"
        string_val: "topology/tfrecords/train_2ms/627.tfrecords"
        string_val: "topology/tfrecords/train_2ms/628.tfrecords"
        string_val: "topology/tfrecords/train_2ms/629.tfrecords"
        string_val: "topology/tfrecords/train_2ms/630.tfrecords"
        string_val: "topology/tfrecords/train_2ms/631.tfrecords"
        string_val: "topology/tfrecords/train_2ms/632.tfrecords"
        string_val: "topology/tfrecords/train_2ms/633.tfrecords"
        string_val: "topology/tfrecords/train_2ms/634.tfrecords"
        string_val: "topology/tfrecords/train_2ms/635.tfrecords"
        string_val: "topology/tfrecords/train_2ms/638.tfrecords"
        string_val: "topology/tfrecords/train_2ms/639.tfrecords"
        string_val: "topology/tfrecords/train_2ms/63.tfrecords"
        string_val: "topology/tfrecords/train_2ms/640.tfrecords"
        string_val: "topology/tfrecords/train_2ms/642.tfrecords"
        string_val: "topology/tfrecords/train_2ms/643.tfrecords"
        string_val: "topology/tfrecords/train_2ms/644.tfrecords"
        string_val: "topology/tfrecords/train_2ms/646.tfrecords"
        string_val: "topology/tfrecords/train_2ms/647.tfrecords"
        string_val: "topology/tfrecords/train_2ms/648.tfrecords"
        string_val: "topology/tfrecords/train_2ms/64.tfrecords"
        string_val: "topology/tfrecords/train_2ms/650.tfrecords"
        string_val: "topology/tfrecords/train_2ms/651.tfrecords"
        string_val: "topology/tfrecords/train_2ms/652.tfrecords"
        string_val: "topology/tfrecords/train_2ms/653.tfrecords"
        string_val: "topology/tfrecords/train_2ms/654.tfrecords"
        string_val: "topology/tfrecords/train_2ms/657.tfrecords"
        string_val: "topology/tfrecords/train_2ms/658.tfrecords"
        string_val: "topology/tfrecords/train_2ms/65.tfrecords"
        string_val: "topology/tfrecords/train_2ms/661.tfrecords"
        string_val: "topology/tfrecords/train_2ms/663.tfrecords"
        string_val: "topology/tfrecords/train_2ms/665.tfrecords"
        string_val: "topology/tfrecords/train_2ms/666.tfrecords"
        string_val: "topology/tfrecords/train_2ms/667.tfrecords"
        string_val: "topology/tfrecords/train_2ms/668.tfrecords"
        string_val: "topology/tfrecords/train_2ms/669.tfrecords"
        string_val: "topology/tfrecords/train_2ms/66.tfrecords"
        string_val: "topology/tfrecords/train_2ms/670.tfrecords"
        string_val: "topology/tfrecords/train_2ms/672.tfrecords"
        string_val: "topology/tfrecords/train_2ms/673.tfrecords"
        string_val: "topology/tfrecords/train_2ms/674.tfrecords"
        string_val: "topology/tfrecords/train_2ms/675.tfrecords"
        string_val: "topology/tfrecords/train_2ms/677.tfrecords"
        string_val: "topology/tfrecords/train_2ms/678.tfrecords"
        string_val: "topology/tfrecords/train_2ms/680.tfrecords"
        string_val: "topology/tfrecords/train_2ms/681.tfrecords"
        string_val: "topology/tfrecords/train_2ms/682.tfrecords"
        string_val: "topology/tfrecords/train_2ms/684.tfrecords"
        string_val: "topology/tfrecords/train_2ms/685.tfrecords"
        string_val: "topology/tfrecords/train_2ms/686.tfrecords"
        string_val: "topology/tfrecords/train_2ms/687.tfrecords"
        string_val: "topology/tfrecords/train_2ms/688.tfrecords"
        string_val: "topology/tfrecords/train_2ms/689.tfrecords"
        string_val: "topology/tfrecords/train_2ms/68.tfrecords"
        string_val: "topology/tfrecords/train_2ms/690.tfrecords"
        string_val: "topology/tfrecords/train_2ms/691.tfrecords"
        string_val: "topology/tfrecords/train_2ms/692.tfrecords"
        string_val: "topology/tfrecords/train_2ms/694.tfrecords"
        string_val: "topology/tfrecords/train_2ms/695.tfrecords"
        string_val: "topology/tfrecords/train_2ms/697.tfrecords"
        string_val: "topology/tfrecords/train_2ms/698.tfrecords"
        string_val: "topology/tfrecords/train_2ms/699.tfrecords"
        string_val: "topology/tfrecords/train_2ms/69.tfrecords"
        string_val: "topology/tfrecords/train_2ms/6.tfrecords"
        string_val: "topology/tfrecords/train_2ms/700.tfrecords"
        string_val: "topology/tfrecords/train_2ms/701.tfrecords"
        string_val: "topology/tfrecords/train_2ms/702.tfrecords"
        string_val: "topology/tfrecords/train_2ms/703.tfrecords"
        string_val: "topology/tfrecords/train_2ms/704.tfrecords"
        string_val: "topology/tfrecords/train_2ms/705.tfrecords"
        string_val: "topology/tfrecords/train_2ms/706.tfrecords"
        string_val: "topology/tfrecords/train_2ms/708.tfrecords"
        string_val: "topology/tfrecords/train_2ms/709.tfrecords"
        string_val: "topology/tfrecords/train_2ms/70.tfrecords"
        string_val: "topology/tfrecords/train_2ms/711.tfrecords"
        string_val: "topology/tfrecords/train_2ms/712.tfrecords"
        string_val: "topology/tfrecords/train_2ms/713.tfrecords"
        string_val: "topology/tfrecords/train_2ms/714.tfrecords"
        string_val: "topology/tfrecords/train_2ms/715.tfrecords"
        string_val: "topology/tfrecords/train_2ms/716.tfrecords"
        string_val: "topology/tfrecords/train_2ms/717.tfrecords"
        string_val: "topology/tfrecords/train_2ms/718.tfrecords"
        string_val: "topology/tfrecords/train_2ms/719.tfrecords"
        string_val: "topology/tfrecords/train_2ms/71.tfrecords"
        string_val: "topology/tfrecords/train_2ms/721.tfrecords"
        string_val: "topology/tfrecords/train_2ms/723.tfrecords"
        string_val: "topology/tfrecords/train_2ms/724.tfrecords"
        string_val: "topology/tfrecords/train_2ms/725.tfrecords"
        string_val: "topology/tfrecords/train_2ms/726.tfrecords"
        string_val: "topology/tfrecords/train_2ms/728.tfrecords"
        string_val: "topology/tfrecords/train_2ms/729.tfrecords"
        string_val: "topology/tfrecords/train_2ms/72.tfrecords"
        string_val: "topology/tfrecords/train_2ms/731.tfrecords"
        string_val: "topology/tfrecords/train_2ms/732.tfrecords"
        string_val: "topology/tfrecords/train_2ms/733.tfrecords"
        string_val: "topology/tfrecords/train_2ms/734.tfrecords"
        string_val: "topology/tfrecords/train_2ms/735.tfrecords"
        string_val: "topology/tfrecords/train_2ms/736.tfrecords"
        string_val: "topology/tfrecords/train_2ms/737.tfrecords"
        string_val: "topology/tfrecords/train_2ms/738.tfrecords"
        string_val: "topology/tfrecords/train_2ms/739.tfrecords"
        string_val: "topology/tfrecords/train_2ms/73.tfrecords"
        string_val: "topology/tfrecords/train_2ms/740.tfrecords"
        string_val: "topology/tfrecords/train_2ms/742.tfrecords"
        string_val: "topology/tfrecords/train_2ms/744.tfrecords"
        string_val: "topology/tfrecords/train_2ms/745.tfrecords"
        string_val: "topology/tfrecords/train_2ms/746.tfrecords"
        string_val: "topology/tfrecords/train_2ms/748.tfrecords"
        string_val: "topology/tfrecords/train_2ms/74.tfrecords"
        string_val: "topology/tfrecords/train_2ms/750.tfrecords"
        string_val: "topology/tfrecords/train_2ms/751.tfrecords"
        string_val: "topology/tfrecords/train_2ms/752.tfrecords"
        string_val: "topology/tfrecords/train_2ms/754.tfrecords"
        string_val: "topology/tfrecords/train_2ms/756.tfrecords"
        string_val: "topology/tfrecords/train_2ms/757.tfrecords"
        string_val: "topology/tfrecords/train_2ms/758.tfrecords"
        string_val: "topology/tfrecords/train_2ms/759.tfrecords"
        string_val: "topology/tfrecords/train_2ms/75.tfrecords"
        string_val: "topology/tfrecords/train_2ms/760.tfrecords"
        string_val: "topology/tfrecords/train_2ms/761.tfrecords"
        string_val: "topology/tfrecords/train_2ms/763.tfrecords"
        string_val: "topology/tfrecords/train_2ms/767.tfrecords"
        string_val: "topology/tfrecords/train_2ms/768.tfrecords"
        string_val: "topology/tfrecords/train_2ms/769.tfrecords"
        string_val: "topology/tfrecords/train_2ms/76.tfrecords"
        string_val: "topology/tfrecords/train_2ms/771.tfrecords"
        string_val: "topology/tfrecords/train_2ms/772.tfrecords"
        string_val: "topology/tfrecords/train_2ms/774.tfrecords"
        string_val: "topology/tfrecords/train_2ms/775.tfrecords"
        string_val: "topology/tfrecords/train_2ms/776.tfrecords"
        string_val: "topology/tfrecords/train_2ms/777.tfrecords"
        string_val: "topology/tfrecords/train_2ms/778.tfrecords"
        string_val: "topology/tfrecords/train_2ms/779.tfrecords"
        string_val: "topology/tfrecords/train_2ms/77.tfrecords"
        string_val: "topology/tfrecords/train_2ms/780.tfrecords"
        string_val: "topology/tfrecords/train_2ms/781.tfrecords"
        string_val: "topology/tfrecords/train_2ms/783.tfrecords"
        string_val: "topology/tfrecords/train_2ms/785.tfrecords"
        string_val: "topology/tfrecords/train_2ms/786.tfrecords"
        string_val: "topology/tfrecords/train_2ms/787.tfrecords"
        string_val: "topology/tfrecords/train_2ms/788.tfrecords"
        string_val: "topology/tfrecords/train_2ms/789.tfrecords"
        string_val: "topology/tfrecords/train_2ms/78.tfrecords"
        string_val: "topology/tfrecords/train_2ms/790.tfrecords"
        string_val: "topology/tfrecords/train_2ms/792.tfrecords"
        string_val: "topology/tfrecords/train_2ms/794.tfrecords"
        string_val: "topology/tfrecords/train_2ms/795.tfrecords"
        string_val: "topology/tfrecords/train_2ms/796.tfrecords"
        string_val: "topology/tfrecords/train_2ms/797.tfrecords"
        string_val: "topology/tfrecords/train_2ms/798.tfrecords"
        string_val: "topology/tfrecords/train_2ms/799.tfrecords"
        string_val: "topology/tfrecords/train_2ms/79.tfrecords"
        string_val: "topology/tfrecords/train_2ms/7.tfrecords"
        string_val: "topology/tfrecords/train_2ms/800.tfrecords"
        string_val: "topology/tfrecords/train_2ms/801.tfrecords"
        string_val: "topology/tfrecords/train_2ms/802.tfrecords"
        string_val: "topology/tfrecords/train_2ms/804.tfrecords"
        string_val: "topology/tfrecords/train_2ms/805.tfrecords"
        string_val: "topology/tfrecords/train_2ms/806.tfrecords"
        string_val: "topology/tfrecords/train_2ms/807.tfrecords"
        string_val: "topology/tfrecords/train_2ms/808.tfrecords"
        string_val: "topology/tfrecords/train_2ms/809.tfrecords"
        string_val: "topology/tfrecords/train_2ms/811.tfrecords"
        string_val: "topology/tfrecords/train_2ms/812.tfrecords"
        string_val: "topology/tfrecords/train_2ms/813.tfrecords"
        string_val: "topology/tfrecords/train_2ms/814.tfrecords"
        string_val: "topology/tfrecords/train_2ms/815.tfrecords"
        string_val: "topology/tfrecords/train_2ms/816.tfrecords"
        string_val: "topology/tfrecords/train_2ms/817.tfrecords"
        string_val: "topology/tfrecords/train_2ms/818.tfrecords"
        string_val: "topology/tfrecords/train_2ms/819.tfrecords"
        string_val: "topology/tfrecords/train_2ms/81.tfrecords"
        string_val: "topology/tfrecords/train_2ms/820.tfrecords"
        string_val: "topology/tfrecords/train_2ms/824.tfrecords"
        string_val: "topology/tfrecords/train_2ms/826.tfrecords"
        string_val: "topology/tfrecords/train_2ms/827.tfrecords"
        string_val: "topology/tfrecords/train_2ms/828.tfrecords"
        string_val: "topology/tfrecords/train_2ms/82.tfrecords"
        string_val: "topology/tfrecords/train_2ms/831.tfrecords"
        string_val: "topology/tfrecords/train_2ms/832.tfrecords"
        string_val: "topology/tfrecords/train_2ms/834.tfrecords"
        string_val: "topology/tfrecords/train_2ms/835.tfrecords"
        string_val: "topology/tfrecords/train_2ms/836.tfrecords"
        string_val: "topology/tfrecords/train_2ms/837.tfrecords"
        string_val: "topology/tfrecords/train_2ms/838.tfrecords"
        string_val: "topology/tfrecords/train_2ms/839.tfrecords"
        string_val: "topology/tfrecords/train_2ms/83.tfrecords"
        string_val: "topology/tfrecords/train_2ms/841.tfrecords"
        string_val: "topology/tfrecords/train_2ms/842.tfrecords"
        string_val: "topology/tfrecords/train_2ms/844.tfrecords"
        string_val: "topology/tfrecords/train_2ms/845.tfrecords"
        string_val: "topology/tfrecords/train_2ms/846.tfrecords"
        string_val: "topology/tfrecords/train_2ms/847.tfrecords"
        string_val: "topology/tfrecords/train_2ms/849.tfrecords"
        string_val: "topology/tfrecords/train_2ms/84.tfrecords"
        string_val: "topology/tfrecords/train_2ms/850.tfrecords"
        string_val: "topology/tfrecords/train_2ms/851.tfrecords"
        string_val: "topology/tfrecords/train_2ms/852.tfrecords"
        string_val: "topology/tfrecords/train_2ms/853.tfrecords"
        string_val: "topology/tfrecords/train_2ms/854.tfrecords"
        string_val: "topology/tfrecords/train_2ms/855.tfrecords"
        string_val: "topology/tfrecords/train_2ms/857.tfrecords"
        string_val: "topology/tfrecords/train_2ms/858.tfrecords"
        string_val: "topology/tfrecords/train_2ms/859.tfrecords"
        string_val: "topology/tfrecords/train_2ms/85.tfrecords"
        string_val: "topology/tfrecords/train_2ms/860.tfrecords"
        string_val: "topology/tfrecords/train_2ms/861.tfrecords"
        string_val: "topology/tfrecords/train_2ms/862.tfrecords"
        string_val: "topology/tfrecords/train_2ms/863.tfrecords"
        string_val: "topology/tfrecords/train_2ms/864.tfrecords"
        string_val: "topology/tfrecords/train_2ms/865.tfrecords"
        string_val: "topology/tfrecords/train_2ms/867.tfrecords"
        string_val: "topology/tfrecords/train_2ms/868.tfrecords"
        string_val: "topology/tfrecords/train_2ms/869.tfrecords"
        string_val: "topology/tfrecords/train_2ms/870.tfrecords"
        string_val: "topology/tfrecords/train_2ms/872.tfrecords"
        string_val: "topology/tfrecords/train_2ms/873.tfrecords"
        string_val: "topology/tfrecords/train_2ms/874.tfrecords"
        string_val: "topology/tfrecords/train_2ms/876.tfrecords"
        string_val: "topology/tfrecords/train_2ms/877.tfrecords"
        string_val: "topology/tfrecords/train_2ms/878.tfrecords"
        string_val: "topology/tfrecords/train_2ms/87.tfrecords"
        string_val: "topology/tfrecords/train_2ms/880.tfrecords"
        string_val: "topology/tfrecords/train_2ms/881.tfrecords"
        string_val: "topology/tfrecords/train_2ms/882.tfrecords"
        string_val: "topology/tfrecords/train_2ms/883.tfrecords"
        string_val: "topology/tfrecords/train_2ms/884.tfrecords"
        string_val: "topology/tfrecords/train_2ms/886.tfrecords"
        string_val: "topology/tfrecords/train_2ms/887.tfrecords"
        string_val: "topology/tfrecords/train_2ms/888.tfrecords"
        string_val: "topology/tfrecords/train_2ms/889.tfrecords"
        string_val: "topology/tfrecords/train_2ms/890.tfrecords"
        string_val: "topology/tfrecords/train_2ms/892.tfrecords"
        string_val: "topology/tfrecords/train_2ms/893.tfrecords"
        string_val: "topology/tfrecords/train_2ms/894.tfrecords"
        string_val: "topology/tfrecords/train_2ms/896.tfrecords"
        string_val: "topology/tfrecords/train_2ms/897.tfrecords"
        string_val: "topology/tfrecords/train_2ms/898.tfrecords"
        string_val: "topology/tfrecords/train_2ms/899.tfrecords"
        string_val: "topology/tfrecords/train_2ms/89.tfrecords"
        string_val: "topology/tfrecords/train_2ms/900.tfrecords"
        string_val: "topology/tfrecords/train_2ms/901.tfrecords"
        string_val: "topology/tfrecords/train_2ms/902.tfrecords"
        string_val: "topology/tfrecords/train_2ms/904.tfrecords"
        string_val: "topology/tfrecords/train_2ms/906.tfrecords"
        string_val: "topology/tfrecords/train_2ms/909.tfrecords"
        string_val: "topology/tfrecords/train_2ms/910.tfrecords"
        string_val: "topology/tfrecords/train_2ms/911.tfrecords"
        string_val: "topology/tfrecords/train_2ms/912.tfrecords"
        string_val: "topology/tfrecords/train_2ms/913.tfrecords"
        string_val: "topology/tfrecords/train_2ms/914.tfrecords"
        string_val: "topology/tfrecords/train_2ms/915.tfrecords"
        string_val: "topology/tfrecords/train_2ms/916.tfrecords"
        string_val: "topology/tfrecords/train_2ms/917.tfrecords"
        string_val: "topology/tfrecords/train_2ms/918.tfrecords"
        string_val: "topology/tfrecords/train_2ms/919.tfrecords"
        string_val: "topology/tfrecords/train_2ms/91.tfrecords"
        string_val: "topology/tfrecords/train_2ms/920.tfrecords"
        string_val: "topology/tfrecords/train_2ms/921.tfrecords"
        string_val: "topology/tfrecords/train_2ms/922.tfrecords"
        string_val: "topology/tfrecords/train_2ms/923.tfrecords"
        string_val: "topology/tfrecords/train_2ms/924.tfrecords"
        string_val: "topology/tfrecords/train_2ms/925.tfrecords"
        string_val: "topology/tfrecords/train_2ms/926.tfrecords"
        string_val: "topology/tfrecords/train_2ms/927.tfrecords"
        string_val: "topology/tfrecords/train_2ms/928.tfrecords"
        string_val: "topology/tfrecords/train_2ms/929.tfrecords"
        string_val: "topology/tfrecords/train_2ms/92.tfrecords"
        string_val: "topology/tfrecords/train_2ms/930.tfrecords"
        string_val: "topology/tfrecords/train_2ms/931.tfrecords"
        string_val: "topology/tfrecords/train_2ms/932.tfrecords"
        string_val: "topology/tfrecords/train_2ms/933.tfrecords"
        string_val: "topology/tfrecords/train_2ms/934.tfrecords"
        string_val: "topology/tfrecords/train_2ms/935.tfrecords"
        string_val: "topology/tfrecords/train_2ms/936.tfrecords"
        string_val: "topology/tfrecords/train_2ms/937.tfrecords"
        string_val: "topology/tfrecords/train_2ms/938.tfrecords"
        string_val: "topology/tfrecords/train_2ms/939.tfrecords"
        string_val: "topology/tfrecords/train_2ms/940.tfrecords"
        string_val: "topology/tfrecords/train_2ms/941.tfrecords"
        string_val: "topology/tfrecords/train_2ms/942.tfrecords"
        string_val: "topology/tfrecords/train_2ms/944.tfrecords"
        string_val: "topology/tfrecords/train_2ms/945.tfrecords"
        string_val: "topology/tfrecords/train_2ms/946.tfrecords"
        string_val: "topology/tfrecords/train_2ms/949.tfrecords"
        string_val: "topology/tfrecords/train_2ms/94.tfrecords"
        string_val: "topology/tfrecords/train_2ms/950.tfrecords"
        string_val: "topology/tfrecords/train_2ms/951.tfrecords"
        string_val: "topology/tfrecords/train_2ms/952.tfrecords"
        string_val: "topology/tfrecords/train_2ms/953.tfrecords"
        string_val: "topology/tfrecords/train_2ms/954.tfrecords"
        string_val: "topology/tfrecords/train_2ms/955.tfrecords"
        string_val: "topology/tfrecords/train_2ms/956.tfrecords"
        string_val: "topology/tfrecords/train_2ms/958.tfrecords"
        string_val: "topology/tfrecords/train_2ms/959.tfrecords"
        string_val: "topology/tfrecords/train_2ms/962.tfrecords"
        string_val: "topology/tfrecords/train_2ms/963.tfrecords"
        string_val: "topology/tfrecords/train_2ms/964.tfrecords"
        string_val: "topology/tfrecords/train_2ms/965.tfrecords"
        string_val: "topology/tfrecords/train_2ms/966.tfrecords"
        string_val: "topology/tfrecords/train_2ms/967.tfrecords"
        string_val: "topology/tfrecords/train_2ms/968.tfrecords"
        string_val: "topology/tfrecords/train_2ms/969.tfrecords"
        string_val: "topology/tfrecords/train_2ms/971.tfrecords"
        string_val: "topology/tfrecords/train_2ms/972.tfrecords"
        string_val: "topology/tfrecords/train_2ms/974.tfrecords"
        string_val: "topology/tfrecords/train_2ms/975.tfrecords"
        string_val: "topology/tfrecords/train_2ms/976.tfrecords"
        string_val: "topology/tfrecords/train_2ms/977.tfrecords"
        string_val: "topology/tfrecords/train_2ms/979.tfrecords"
        string_val: "topology/tfrecords/train_2ms/980.tfrecords"
        string_val: "topology/tfrecords/train_2ms/981.tfrecords"
        string_val: "topology/tfrecords/train_2ms/982.tfrecords"
        string_val: "topology/tfrecords/train_2ms/983.tfrecords"
        string_val: "topology/tfrecords/train_2ms/985.tfrecords"
        string_val: "topology/tfrecords/train_2ms/986.tfrecords"
        string_val: "topology/tfrecords/train_2ms/987.tfrecords"
        string_val: "topology/tfrecords/train_2ms/988.tfrecords"
        string_val: "topology/tfrecords/train_2ms/98.tfrecords"
        string_val: "topology/tfrecords/train_2ms/990.tfrecords"
        string_val: "topology/tfrecords/train_2ms/991.tfrecords"
        string_val: "topology/tfrecords/train_2ms/992.tfrecords"
        string_val: "topology/tfrecords/train_2ms/996.tfrecords"
        string_val: "topology/tfrecords/train_2ms/998.tfrecords"
        string_val: "topology/tfrecords/train_2ms/999.tfrecords"
        string_val: "topology/tfrecords/train_2ms/9.tfrecords"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "tensors/normalize_tensors/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2951
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "cycle_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4
      }
    }
  }
}
node {
  name: "block_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "sloppy"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "buffer_output_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "prefetch_input_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 8
      }
    }
  }
}
node {
  name: "ExperimentalParallelInterleaveDataset"
  op: "ExperimentalParallelInterleaveDataset"
  input: "ShuffleDataset"
  input: "cycle_length"
  input: "block_length"
  input: "sloppy"
  input: "buffer_output_elements"
  input: "prefetch_input_elements"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "seed_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleAndRepeatDataset"
  op: "ShuffleAndRepeatDataset"
  input: "ExperimentalParallelInterleaveDataset"
  input: "buffer_size_1"
  input: "seed_1"
  input: "seed2_1"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "ShuffleAndRepeatDataset"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_<lambda>_99"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "sloppy"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "ParallelMapDataset"
  input: "buffer_size_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_UpAAVULdaCc"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_1"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_2"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_3"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_4"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_5"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_6"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/IteratorGetNext_7"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max"
  op: "Max"
  input: "transformation_func/IteratorGetNext:1"
  input: "transformation_func/cummax/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add"
  op: "Add"
  input: "transformation_func/cummax/Max"
  input: "transformation_func/cummax/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_1"
  op: "Max"
  input: "transformation_func/IteratorGetNext_1:1"
  input: "transformation_func/cummax/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_1"
  op: "Add"
  input: "transformation_func/cummax/Max_1"
  input: "transformation_func/cummax/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_2"
  op: "Max"
  input: "transformation_func/IteratorGetNext_2:1"
  input: "transformation_func/cummax/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_2"
  op: "Add"
  input: "transformation_func/cummax/Max_2"
  input: "transformation_func/cummax/add_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_3"
  op: "Max"
  input: "transformation_func/IteratorGetNext_3:1"
  input: "transformation_func/cummax/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_3"
  op: "Add"
  input: "transformation_func/cummax/Max_3"
  input: "transformation_func/cummax/add_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_4"
  op: "Max"
  input: "transformation_func/IteratorGetNext_4:1"
  input: "transformation_func/cummax/Const_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_4"
  op: "Add"
  input: "transformation_func/cummax/Max_4"
  input: "transformation_func/cummax/add_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_5"
  op: "Max"
  input: "transformation_func/IteratorGetNext_5:1"
  input: "transformation_func/cummax/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_5"
  op: "Add"
  input: "transformation_func/cummax/Max_5"
  input: "transformation_func/cummax/add_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_6"
  op: "Max"
  input: "transformation_func/IteratorGetNext_6:1"
  input: "transformation_func/cummax/Const_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_6"
  op: "Add"
  input: "transformation_func/cummax/Max_6"
  input: "transformation_func/cummax/add_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/Max_7"
  op: "Max"
  input: "transformation_func/IteratorGetNext_7:1"
  input: "transformation_func/cummax/Const_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax/add_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax/add_7"
  op: "Add"
  input: "transformation_func/cummax/Max_7"
  input: "transformation_func/cummax/add_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/zeros_like"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_1"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_2"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_3"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_4"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  input: "transformation_func/cummax/add_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax/AddN_5"
  op: "AddN"
  input: "transformation_func/cummax/add"
  input: "transformation_func/cummax/add_1"
  input: "transformation_func/cummax/add_2"
  input: "transformation_func/cummax/add_3"
  input: "transformation_func/cummax/add_4"
  input: "transformation_func/cummax/add_5"
  input: "transformation_func/cummax/add_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max"
  op: "Max"
  input: "transformation_func/IteratorGetNext:5"
  input: "transformation_func/cummax_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add"
  op: "Add"
  input: "transformation_func/cummax_1/Max"
  input: "transformation_func/cummax_1/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_1"
  op: "Max"
  input: "transformation_func/IteratorGetNext_1:5"
  input: "transformation_func/cummax_1/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_1"
  op: "Add"
  input: "transformation_func/cummax_1/Max_1"
  input: "transformation_func/cummax_1/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_2"
  op: "Max"
  input: "transformation_func/IteratorGetNext_2:5"
  input: "transformation_func/cummax_1/Const_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_2"
  op: "Add"
  input: "transformation_func/cummax_1/Max_2"
  input: "transformation_func/cummax_1/add_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_3"
  op: "Max"
  input: "transformation_func/IteratorGetNext_3:5"
  input: "transformation_func/cummax_1/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_3"
  op: "Add"
  input: "transformation_func/cummax_1/Max_3"
  input: "transformation_func/cummax_1/add_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_4"
  op: "Max"
  input: "transformation_func/IteratorGetNext_4:5"
  input: "transformation_func/cummax_1/Const_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_4"
  op: "Add"
  input: "transformation_func/cummax_1/Max_4"
  input: "transformation_func/cummax_1/add_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_5"
  op: "Max"
  input: "transformation_func/IteratorGetNext_5:5"
  input: "transformation_func/cummax_1/Const_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_5"
  op: "Add"
  input: "transformation_func/cummax_1/Max_5"
  input: "transformation_func/cummax_1/add_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_6"
  op: "Max"
  input: "transformation_func/IteratorGetNext_6:5"
  input: "transformation_func/cummax_1/Const_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_6"
  op: "Add"
  input: "transformation_func/cummax_1/Max_6"
  input: "transformation_func/cummax_1/add_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/Max_7"
  op: "Max"
  input: "transformation_func/IteratorGetNext_7:5"
  input: "transformation_func/cummax_1/Const_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/add_7"
  op: "Add"
  input: "transformation_func/cummax_1/Max_7"
  input: "transformation_func/cummax_1/add_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/zeros_like"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_1"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_2"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_3"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_4"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  input: "transformation_func/cummax_1/add_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/cummax_1/AddN_5"
  op: "AddN"
  input: "transformation_func/cummax_1/add"
  input: "transformation_func/cummax_1/add_1"
  input: "transformation_func/cummax_1/add_2"
  input: "transformation_func/cummax_1/add_3"
  input: "transformation_func/cummax_1/add_4"
  input: "transformation_func/cummax_1/add_5"
  input: "transformation_func/cummax_1/add_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:7"
  input: "transformation_func/IteratorGetNext_1:7"
  input: "transformation_func/IteratorGetNext_2:7"
  input: "transformation_func/IteratorGetNext_3:7"
  input: "transformation_func/IteratorGetNext_4:7"
  input: "transformation_func/IteratorGetNext_5:7"
  input: "transformation_func/IteratorGetNext_6:7"
  input: "transformation_func/IteratorGetNext_7:7"
  input: "transformation_func/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_1/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_1"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:6"
  input: "transformation_func/IteratorGetNext_1:6"
  input: "transformation_func/IteratorGetNext_2:6"
  input: "transformation_func/IteratorGetNext_3:6"
  input: "transformation_func/IteratorGetNext_4:6"
  input: "transformation_func/IteratorGetNext_5:6"
  input: "transformation_func/IteratorGetNext_6:6"
  input: "transformation_func/IteratorGetNext_7:6"
  input: "transformation_func/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_2"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext"
  input: "transformation_func/IteratorGetNext_1"
  input: "transformation_func/IteratorGetNext_2"
  input: "transformation_func/IteratorGetNext_3"
  input: "transformation_func/IteratorGetNext_4"
  input: "transformation_func/IteratorGetNext_5"
  input: "transformation_func/IteratorGetNext_6"
  input: "transformation_func/IteratorGetNext_7"
  input: "transformation_func/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add"
  op: "Add"
  input: "transformation_func/IteratorGetNext:1"
  input: "transformation_func/cummax/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_1"
  op: "Add"
  input: "transformation_func/IteratorGetNext_1:1"
  input: "transformation_func/cummax/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_2"
  op: "Add"
  input: "transformation_func/IteratorGetNext_2:1"
  input: "transformation_func/cummax/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_3"
  op: "Add"
  input: "transformation_func/IteratorGetNext_3:1"
  input: "transformation_func/cummax/AddN_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_4"
  op: "Add"
  input: "transformation_func/IteratorGetNext_4:1"
  input: "transformation_func/cummax/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_5"
  op: "Add"
  input: "transformation_func/IteratorGetNext_5:1"
  input: "transformation_func/cummax/AddN_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_6"
  op: "Add"
  input: "transformation_func/IteratorGetNext_6:1"
  input: "transformation_func/cummax/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_7"
  op: "Add"
  input: "transformation_func/IteratorGetNext_7:1"
  input: "transformation_func/cummax/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_3/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_3"
  op: "ConcatV2"
  input: "transformation_func/add"
  input: "transformation_func/add_1"
  input: "transformation_func/add_2"
  input: "transformation_func/add_3"
  input: "transformation_func/add_4"
  input: "transformation_func/add_5"
  input: "transformation_func/add_6"
  input: "transformation_func/add_7"
  input: "transformation_func/concat_3/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_8"
  op: "Add"
  input: "transformation_func/IteratorGetNext:5"
  input: "transformation_func/cummax_1/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_9"
  op: "Add"
  input: "transformation_func/IteratorGetNext_1:5"
  input: "transformation_func/cummax_1/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_10"
  op: "Add"
  input: "transformation_func/IteratorGetNext_2:5"
  input: "transformation_func/cummax_1/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_11"
  op: "Add"
  input: "transformation_func/IteratorGetNext_3:5"
  input: "transformation_func/cummax_1/AddN_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_12"
  op: "Add"
  input: "transformation_func/IteratorGetNext_4:5"
  input: "transformation_func/cummax_1/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_13"
  op: "Add"
  input: "transformation_func/IteratorGetNext_5:5"
  input: "transformation_func/cummax_1/AddN_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_14"
  op: "Add"
  input: "transformation_func/IteratorGetNext_6:5"
  input: "transformation_func/cummax_1/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/add_15"
  op: "Add"
  input: "transformation_func/IteratorGetNext_7:5"
  input: "transformation_func/cummax_1/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_4/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_4"
  op: "ConcatV2"
  input: "transformation_func/add_8"
  input: "transformation_func/add_9"
  input: "transformation_func/add_10"
  input: "transformation_func/add_11"
  input: "transformation_func/add_12"
  input: "transformation_func/add_13"
  input: "transformation_func/add_14"
  input: "transformation_func/add_15"
  input: "transformation_func/concat_4/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:2"
  input: "transformation_func/IteratorGetNext_1:2"
  input: "transformation_func/IteratorGetNext_2:2"
  input: "transformation_func/IteratorGetNext_3:2"
  input: "transformation_func/IteratorGetNext_4:2"
  input: "transformation_func/IteratorGetNext_5:2"
  input: "transformation_func/IteratorGetNext_6:2"
  input: "transformation_func/IteratorGetNext_7:2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN_1"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:3"
  input: "transformation_func/IteratorGetNext_1:3"
  input: "transformation_func/IteratorGetNext_2:3"
  input: "transformation_func/IteratorGetNext_3:3"
  input: "transformation_func/IteratorGetNext_4:3"
  input: "transformation_func/IteratorGetNext_5:3"
  input: "transformation_func/IteratorGetNext_6:3"
  input: "transformation_func/IteratorGetNext_7:3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/AddN_2"
  op: "AddN"
  input: "transformation_func/IteratorGetNext:4"
  input: "transformation_func/IteratorGetNext_1:4"
  input: "transformation_func/IteratorGetNext_2:4"
  input: "transformation_func/IteratorGetNext_3:4"
  input: "transformation_func/IteratorGetNext_4:4"
  input: "transformation_func/IteratorGetNext_5:4"
  input: "transformation_func/IteratorGetNext_6:4"
  input: "transformation_func/IteratorGetNext_7:4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "transformation_func/concat_5/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "transformation_func/concat_5"
  op: "ConcatV2"
  input: "transformation_func/IteratorGetNext:8"
  input: "transformation_func/IteratorGetNext_1:8"
  input: "transformation_func/IteratorGetNext_2:8"
  input: "transformation_func/IteratorGetNext_3:8"
  input: "transformation_func/IteratorGetNext_4:8"
  input: "transformation_func/IteratorGetNext_5:8"
  input: "transformation_func/IteratorGetNext_6:8"
  input: "transformation_func/IteratorGetNext_7:8"
  input: "transformation_func/concat_5/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "kernel/Initializer/random_uniform/max"
  input: "kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "kernel/Initializer/random_uniform/RandomUniform"
  input: "kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel/Initializer/random_uniform"
  op: "Add"
  input: "kernel/Initializer/random_uniform/mul"
  input: "kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel"
    }
  }
}
node {
  name: "kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Assign"
  op: "AssignVariableOp"
  input: "kernel"
  input: "kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "recurrent_kernel/Initializer/random_normal/mul"
  input: "recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "recurrent_kernel/Initializer/Qr"
  input: "recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "recurrent_kernel/Initializer/mul"
  input: "recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "recurrent_kernel/Initializer/mul_1/x"
  input: "recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel"
    }
  }
}
node {
  name: "recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel"
  input: "recurrent_kernel/Initializer/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias"
    }
  }
}
node {
  name: "bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Assign"
  op: "AssignVariableOp"
  input: "bias"
  input: "bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "kernel_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "kernel_1/Initializer/random_uniform/max"
  input: "kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "kernel_1/Initializer/random_uniform/RandomUniform"
  input: "kernel_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_1/Initializer/random_uniform"
  op: "Add"
  input: "kernel_1/Initializer/random_uniform/mul"
  input: "kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1"
    }
  }
}
node {
  name: "kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Assign"
  op: "AssignVariableOp"
  input: "kernel_1"
  input: "kernel_1/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "recurrent_kernel_1/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal/mul"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  input: "recurrent_kernel_1/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/random_normal"
  op: "Add"
  input: "recurrent_kernel_1/Initializer/random_normal/mul"
  input: "recurrent_kernel_1/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Qr"
  op: "Qr"
  input: "recurrent_kernel_1/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/DiagPart"
  op: "DiagPart"
  input: "recurrent_kernel_1/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Sign"
  op: "Sign"
  input: "recurrent_kernel_1/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/Qr"
  input: "recurrent_kernel_1/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "recurrent_kernel_1/Initializer/mul"
  input: "recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/Reshape"
  op: "Reshape"
  input: "recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  input: "recurrent_kernel_1/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Initializer/mul_1"
  op: "Mul"
  input: "recurrent_kernel_1/Initializer/mul_1/x"
  input: "recurrent_kernel_1/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1"
    }
  }
}
node {
  name: "recurrent_kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1"
  input: "recurrent_kernel_1/Initializer/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1"
    }
  }
}
node {
  name: "bias_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Assign"
  op: "AssignVariableOp"
  input: "bias_1"
  input: "bias_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20096810162067413
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense/kernel/Initializer/truncated_normal/mul"
  input: "dense/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "Placeholder"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/LeakyRelu"
  op: "LeakyRelu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "dropout/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/switch_t"
  op: "Identity"
  input: "dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/switch_f"
  op: "Identity"
  input: "dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/rate"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense/LeakyRelu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/cond/dropout/random_uniform/max"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/cond/dropout/random_uniform/RandomUniform"
  input: "dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout/cond/dropout/random_uniform/mul"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub"
  op: "Sub"
  input: "dropout/cond/dropout/sub/x"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout/cond/dropout/truediv/x"
  input: "dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/cond/dropout/random_uniform"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/mul"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Cast"
  op: "Cast"
  input: "dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Identity"
  op: "Identity"
  input: "dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Identity/Switch"
  op: "Switch"
  input: "dense/LeakyRelu"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout/cond/Merge"
  op: "Merge"
  input: "dropout/cond/Identity"
  input: "dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "dense_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "dense_1/kernel/Initializer/truncated_normal/mul"
  input: "dense_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "dropout/cond/Merge"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/LeakyRelu"
  op: "LeakyRelu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_1/LeakyRelu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/sub/x"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1/cond/dropout/truediv/x"
  input: "dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/cond/dropout/random_uniform"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity"
  op: "Identity"
  input: "dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "dense_1/LeakyRelu"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/LeakyRelu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Identity"
  input: "dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1527949720621109
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "dropout_1/cond/Merge"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 63
      }
    }
  }
}
node {
  name: "comnet_model/stack"
  op: "Pack"
  input: "transformation_func/AddN"
  input: "comnet_model/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ExpandDims"
  op: "ExpandDims"
  input: "transformation_func/concat_2"
  input: "comnet_model/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/zeros"
  op: "Fill"
  input: "comnet_model/stack"
  input: "comnet_model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 63
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "comnet_model/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/concat"
  op: "ConcatV2"
  input: "comnet_model/ExpandDims"
  input: "comnet_model/zeros"
  input: "comnet_model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 63
      }
    }
  }
}
node {
  name: "comnet_model/stack_1"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack_1"
  op: "Pack"
  input: "transformation_func/AddN_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/Cast"
  op: "Cast"
  input: "comnet_model/strided_slice/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice/Cast_1"
  op: "Cast"
  input: "comnet_model/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/strided_slice"
  op: "StridedSlice"
  input: "transformation_func/concat"
  input: "comnet_model/strided_slice/Cast"
  input: "comnet_model/strided_slice/stack_1"
  input: "comnet_model/strided_slice/Cast_1"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ExpandDims_1"
  op: "ExpandDims"
  input: "comnet_model/strided_slice"
  input: "comnet_model/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/zeros_1"
  op: "Fill"
  input: "comnet_model/stack_1"
  input: "comnet_model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 63
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "comnet_model/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/concat_1"
  op: "ConcatV2"
  input: "comnet_model/ExpandDims_1"
  input: "comnet_model/zeros_1"
  input: "comnet_model/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2"
  op: "GatherV2"
  input: "comnet_model/concat"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_2"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add"
  op: "Add"
  input: "comnet_model/Max"
  input: "comnet_model/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_3/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_3"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add"
  input: "comnet_model/stack_3/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like"
  op: "Fill"
  input: "comnet_model/ones_like/Shape"
  input: "comnet_model/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum"
  op: "SegmentSum"
  input: "comnet_model/ones_like"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_2"
  input: "comnet_model/GatherV2"
  input: "comnet_model/stack_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range"
  op: "Range"
  input: "comnet_model/rnn/range/start"
  input: "comnet_model/rnn/Rank"
  input: "comnet_model/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn/concat/values_0"
  input: "comnet_model/rnn/range"
  input: "comnet_model/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd"
  input: "comnet_model/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape"
  input: "comnet_model/rnn/strided_slice/stack"
  input: "comnet_model/rnn/strided_slice/stack_1"
  input: "comnet_model/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/stack"
  op: "Pack"
  input: "comnet_model/rnn/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/Equal"
  op: "Equal"
  input: "comnet_model/rnn/Shape_1"
  input: "comnet_model/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/All"
  op: "All"
  input: "comnet_model/rnn/Equal"
  input: "comnet_model/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn/All"
  input: "comnet_model/rnn/Assert/Assert/data_0"
  input: "comnet_model/rnn/stack"
  input: "comnet_model/rnn/Assert/Assert/data_2"
  input: "comnet_model/rnn/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn/sequence_length"
  input: "^comnet_model/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape_2"
  input: "comnet_model/rnn/strided_slice_1/stack"
  input: "comnet_model/rnn/strided_slice_1/stack_1"
  input: "comnet_model/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn/Shape_3"
  input: "comnet_model/rnn/strided_slice_2/stack"
  input: "comnet_model/rnn/strided_slice_2/stack_1"
  input: "comnet_model/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn/strided_slice_2"
  input: "comnet_model/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn/ExpandDims"
  input: "comnet_model/rnn/Const_1"
  input: "comnet_model/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/zeros"
  op: "Fill"
  input: "comnet_model/rnn/concat_1"
  input: "comnet_model/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Min"
  op: "Min"
  input: "comnet_model/rnn/CheckSeqLen"
  input: "comnet_model/rnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Max"
  op: "Max"
  input: "comnet_model/rnn/CheckSeqLen"
  input: "comnet_model/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn/TensorArray_1"
  input: "comnet_model/rnn/TensorArrayUnstack/range"
  input: "comnet_model/rnn/transpose"
  input: "comnet_model/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn/Maximum/x"
  input: "comnet_model/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/strided_slice_1"
  input: "comnet_model/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Enter_3"
  op: "Enter"
  input: "comnet_model/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter"
  input: "comnet_model/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_1"
  input: "comnet_model/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_2"
  input: "comnet_model/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn/while/Enter_3"
  input: "comnet_model/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less"
  op: "Less"
  input: "comnet_model/rnn/while/Merge"
  input: "comnet_model/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn/while/Merge_1"
  input: "comnet_model/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn/while/Less"
  input: "comnet_model/rnn/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_1"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_2"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn/while/Merge_3"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add"
  op: "Add"
  input: "comnet_model/rnn/while/Identity"
  input: "comnet_model/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  input: "comnet_model/rnn/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/Mul"
  input: "comnet_model/rnn/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  input: "comnet_model/rnn/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select"
  op: "Select"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "comnet_model/rnn/while/Select/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "comnet_model/rnn/while/Identity_3"
  input: "comnet_model/rnn/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/Select"
  input: "comnet_model/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/add_1"
  op: "Add"
  input: "comnet_model/rnn/while/Identity_1"
  input: "comnet_model/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn/TensorArrayStack/range/start"
  input: "comnet_model/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/TensorArrayStack/range"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn/range_1"
  op: "Range"
  input: "comnet_model/rnn/range_1/start"
  input: "comnet_model/rnn/Rank_1"
  input: "comnet_model/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn/concat_2/values_0"
  input: "comnet_model/rnn/range_1"
  input: "comnet_model/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd"
  op: "GatherNd"
  input: "comnet_model/rnn/transpose_1"
  input: "comnet_model/stack_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp"
  input: "comnet_model/gru_cell/strided_slice/stack"
  input: "comnet_model/gru_cell/strided_slice/stack_1"
  input: "comnet_model/gru_cell/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack"
  input: "comnet_model/gru_cell/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_2"
  input: "comnet_model/gru_cell/strided_slice_2/stack"
  input: "comnet_model/gru_cell/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "comnet_model/gru_cell/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_3"
  input: "comnet_model/gru_cell/strided_slice_3/stack"
  input: "comnet_model/gru_cell/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul"
  input: "comnet_model/gru_cell/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_4"
  input: "comnet_model/gru_cell/strided_slice_4/stack"
  input: "comnet_model/gru_cell/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul_1"
  input: "comnet_model/gru_cell/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_5"
  input: "comnet_model/gru_cell/strided_slice_5/stack"
  input: "comnet_model/gru_cell/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell/MatMul_2"
  input: "comnet_model/gru_cell/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_6"
  input: "comnet_model/gru_cell/strided_slice_6/stack"
  input: "comnet_model/gru_cell/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_3"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "comnet_model/gru_cell/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_7"
  input: "comnet_model/gru_cell/strided_slice_7/stack"
  input: "comnet_model/gru_cell/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_4"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "comnet_model/gru_cell/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/add"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd"
  input: "comnet_model/gru_cell/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell/add"
  input: "comnet_model/gru_cell/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell/Mul"
  input: "comnet_model/gru_cell/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell/Add_1"
  input: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  input: "comnet_model/gru_cell/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_2"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd_1"
  input: "comnet_model/gru_cell/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add_2"
  input: "comnet_model/gru_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell/Mul_1"
  input: "comnet_model/gru_cell/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell/Add_3"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value_1"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell/ReadVariableOp_8"
  input: "comnet_model/gru_cell/strided_slice_8/stack"
  input: "comnet_model/gru_cell/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell/mul_2"
  input: "comnet_model/gru_cell/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_4"
  op: "Add"
  input: "comnet_model/gru_cell/BiasAdd_2"
  input: "comnet_model/gru_cell/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/sub"
  op: "Sub"
  input: "comnet_model/gru_cell/sub/x"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell/sub"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell/add_5"
  op: "Add"
  input: "comnet_model/gru_cell/mul_3"
  input: "comnet_model/gru_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_1"
  op: "GatherV2"
  input: "comnet_model/gru_cell/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_4"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_1"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_1"
  op: "Add"
  input: "comnet_model/Max_1"
  input: "comnet_model/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_5/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_5"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_1"
  input: "comnet_model/stack_5/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_1/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_1"
  op: "Fill"
  input: "comnet_model/ones_like_1/Shape"
  input: "comnet_model/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_1"
  op: "SegmentSum"
  input: "comnet_model/ones_like_1"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_1"
  op: "ScatterNd"
  input: "comnet_model/stack_4"
  input: "comnet_model/GatherV2_1"
  input: "comnet_model/stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range"
  op: "Range"
  input: "comnet_model/rnn_1/range/start"
  input: "comnet_model/rnn_1/Rank"
  input: "comnet_model/rnn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/concat/values_0"
  input: "comnet_model/rnn_1/range"
  input: "comnet_model/rnn_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_1"
  input: "comnet_model/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape"
  input: "comnet_model/rnn_1/strided_slice/stack"
  input: "comnet_model/rnn_1/strided_slice/stack_1"
  input: "comnet_model/rnn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/stack"
  op: "Pack"
  input: "comnet_model/rnn_1/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/Equal"
  op: "Equal"
  input: "comnet_model/rnn_1/Shape_1"
  input: "comnet_model/rnn_1/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/All"
  op: "All"
  input: "comnet_model/rnn_1/Equal"
  input: "comnet_model/rnn_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_1/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_1/All"
  input: "comnet_model/rnn_1/Assert/Assert/data_0"
  input: "comnet_model/rnn_1/stack"
  input: "comnet_model/rnn_1/Assert/Assert/data_2"
  input: "comnet_model/rnn_1/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_1/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_1/sequence_length"
  input: "^comnet_model/rnn_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape_2"
  input: "comnet_model/rnn_1/strided_slice_1/stack"
  input: "comnet_model/rnn_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/Shape_3"
  input: "comnet_model/rnn_1/strided_slice_2/stack"
  input: "comnet_model/rnn_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_1/strided_slice_2"
  input: "comnet_model/rnn_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/ExpandDims"
  input: "comnet_model/rnn_1/Const_1"
  input: "comnet_model/rnn_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/zeros"
  op: "Fill"
  input: "comnet_model/rnn_1/concat_1"
  input: "comnet_model/rnn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Min"
  op: "Min"
  input: "comnet_model/rnn_1/CheckSeqLen"
  input: "comnet_model/rnn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Max"
  op: "Max"
  input: "comnet_model/rnn_1/CheckSeqLen"
  input: "comnet_model/rnn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_1/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_1/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_1/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_1/TensorArray_1"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "comnet_model/rnn_1/transpose"
  input: "comnet_model/rnn_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_1/Maximum/x"
  input: "comnet_model/rnn_1/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/strided_slice_1"
  input: "comnet_model/rnn_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter"
  input: "comnet_model/rnn_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_1"
  input: "comnet_model/rnn_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_2"
  input: "comnet_model/rnn_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_1/while/Enter_3"
  input: "comnet_model/rnn_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less"
  op: "Less"
  input: "comnet_model/rnn_1/while/Merge"
  input: "comnet_model/rnn_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_1/while/Merge_1"
  input: "comnet_model/rnn_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_1/while/Less"
  input: "comnet_model/rnn_1/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_1/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_1"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_2"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_1/while/Merge_3"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add"
  op: "Add"
  input: "comnet_model/rnn_1/while/Identity"
  input: "comnet_model/rnn_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select"
  op: "Select"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "comnet_model/rnn_1/while/Select/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/Select"
  input: "comnet_model/rnn_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "comnet_model/rnn_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_1/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_1/TensorArrayStack/range/start"
  input: "comnet_model/rnn_1/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/TensorArrayStack/range"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/range_1"
  op: "Range"
  input: "comnet_model/rnn_1/range_1/start"
  input: "comnet_model/rnn_1/Rank_1"
  input: "comnet_model/rnn_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_1/concat_2/values_0"
  input: "comnet_model/rnn_1/range_1"
  input: "comnet_model/rnn_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_1/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_1"
  op: "GatherNd"
  input: "comnet_model/rnn_1/transpose_1"
  input: "comnet_model/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_1"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_1"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp"
  input: "comnet_model/gru_cell_1/strided_slice/stack"
  input: "comnet_model/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "comnet_model/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul"
  input: "comnet_model/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_1"
  input: "comnet_model/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_2"
  input: "comnet_model/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "comnet_model/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "comnet_model/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd"
  input: "comnet_model/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add"
  input: "comnet_model/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_1/Mul"
  input: "comnet_model/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_1/Add_1"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd_1"
  input: "comnet_model/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add_2"
  input: "comnet_model/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_1/Mul_1"
  input: "comnet_model/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_1/Add_3"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/mul_2"
  input: "comnet_model/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_1/BiasAdd_2"
  input: "comnet_model/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_1/sub/x"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_1/sub"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_1/mul_3"
  input: "comnet_model/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_2"
  op: "GatherV2"
  input: "comnet_model/gru_cell_1/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_6"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_2"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_2"
  op: "Add"
  input: "comnet_model/Max_2"
  input: "comnet_model/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_7/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_7"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_2"
  input: "comnet_model/stack_7/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_2/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_2"
  op: "Fill"
  input: "comnet_model/ones_like_2/Shape"
  input: "comnet_model/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_2"
  op: "SegmentSum"
  input: "comnet_model/ones_like_2"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_2"
  op: "ScatterNd"
  input: "comnet_model/stack_6"
  input: "comnet_model/GatherV2_2"
  input: "comnet_model/stack_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range"
  op: "Range"
  input: "comnet_model/rnn_2/range/start"
  input: "comnet_model/rnn_2/Rank"
  input: "comnet_model/rnn_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/concat/values_0"
  input: "comnet_model/rnn_2/range"
  input: "comnet_model/rnn_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_2"
  input: "comnet_model/rnn_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape"
  input: "comnet_model/rnn_2/strided_slice/stack"
  input: "comnet_model/rnn_2/strided_slice/stack_1"
  input: "comnet_model/rnn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/stack"
  op: "Pack"
  input: "comnet_model/rnn_2/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/Equal"
  op: "Equal"
  input: "comnet_model/rnn_2/Shape_1"
  input: "comnet_model/rnn_2/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/All"
  op: "All"
  input: "comnet_model/rnn_2/Equal"
  input: "comnet_model/rnn_2/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_2/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_2/All"
  input: "comnet_model/rnn_2/Assert/Assert/data_0"
  input: "comnet_model/rnn_2/stack"
  input: "comnet_model/rnn_2/Assert/Assert/data_2"
  input: "comnet_model/rnn_2/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_2/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_2/sequence_length"
  input: "^comnet_model/rnn_2/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape_2"
  input: "comnet_model/rnn_2/strided_slice_1/stack"
  input: "comnet_model/rnn_2/strided_slice_1/stack_1"
  input: "comnet_model/rnn_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/Shape_3"
  input: "comnet_model/rnn_2/strided_slice_2/stack"
  input: "comnet_model/rnn_2/strided_slice_2/stack_1"
  input: "comnet_model/rnn_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_2/strided_slice_2"
  input: "comnet_model/rnn_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/ExpandDims"
  input: "comnet_model/rnn_2/Const_1"
  input: "comnet_model/rnn_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/zeros"
  op: "Fill"
  input: "comnet_model/rnn_2/concat_1"
  input: "comnet_model/rnn_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Min"
  op: "Min"
  input: "comnet_model/rnn_2/CheckSeqLen"
  input: "comnet_model/rnn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Max"
  op: "Max"
  input: "comnet_model/rnn_2/CheckSeqLen"
  input: "comnet_model/rnn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_2/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_2/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_2/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_2/TensorArray_1"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "comnet_model/rnn_2/transpose"
  input: "comnet_model/rnn_2/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_2/Maximum/x"
  input: "comnet_model/rnn_2/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/strided_slice_1"
  input: "comnet_model/rnn_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter"
  input: "comnet_model/rnn_2/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_1"
  input: "comnet_model/rnn_2/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_2"
  input: "comnet_model/rnn_2/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_2/while/Enter_3"
  input: "comnet_model/rnn_2/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less"
  op: "Less"
  input: "comnet_model/rnn_2/while/Merge"
  input: "comnet_model/rnn_2/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_2/while/Merge_1"
  input: "comnet_model/rnn_2/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_2/while/Less"
  input: "comnet_model/rnn_2/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_2/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_1"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_2"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_2/while/Merge_3"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add"
  op: "Add"
  input: "comnet_model/rnn_2/while/Identity"
  input: "comnet_model/rnn_2/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select"
  op: "Select"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "comnet_model/rnn_2/while/Select/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/Select"
  input: "comnet_model/rnn_2/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "comnet_model/rnn_2/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_2/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_2/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_2/TensorArrayStack/range/start"
  input: "comnet_model/rnn_2/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/TensorArrayStack/range"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/range_1"
  op: "Range"
  input: "comnet_model/rnn_2/range_1/start"
  input: "comnet_model/rnn_2/Rank_1"
  input: "comnet_model/rnn_2/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_2/concat_2/values_0"
  input: "comnet_model/rnn_2/range_1"
  input: "comnet_model/rnn_2/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_2/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_2/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_2"
  op: "GatherNd"
  input: "comnet_model/rnn_2/transpose_1"
  input: "comnet_model/stack_6"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_2"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_2"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp"
  input: "comnet_model/gru_cell_2/strided_slice/stack"
  input: "comnet_model/gru_cell_2/strided_slice/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_2"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "comnet_model/gru_cell_2/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_3"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul"
  input: "comnet_model/gru_cell_2/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_4"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_1"
  input: "comnet_model/gru_cell_2/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_5"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_2"
  input: "comnet_model/gru_cell_2/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_6"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "comnet_model/gru_cell_2/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_7"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "comnet_model/gru_cell_2/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd"
  input: "comnet_model/gru_cell_2/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add"
  input: "comnet_model/gru_cell_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_2/Mul"
  input: "comnet_model/gru_cell_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_2/Add_1"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd_1"
  input: "comnet_model/gru_cell_2/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add_2"
  input: "comnet_model/gru_cell_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_2/Mul_1"
  input: "comnet_model/gru_cell_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_2/Add_3"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_2/ReadVariableOp_8"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/mul_2"
  input: "comnet_model/gru_cell_2/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_2/BiasAdd_2"
  input: "comnet_model/gru_cell_2/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_2/sub/x"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_2/sub"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_2/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_2/mul_3"
  input: "comnet_model/gru_cell_2/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/GatherV2_3"
  op: "GatherV2"
  input: "comnet_model/gru_cell_2/add_5"
  input: "transformation_func/concat_3"
  input: "comnet_model/GatherV2_3/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/stack_8"
  op: "Pack"
  input: "transformation_func/concat_4"
  input: "transformation_func/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/Max_3"
  op: "Max"
  input: "transformation_func/concat_1"
  input: "comnet_model/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/add_3"
  op: "Add"
  input: "comnet_model/Max_3"
  input: "comnet_model/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/stack_9/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/stack_9"
  op: "Pack"
  input: "transformation_func/AddN_1"
  input: "comnet_model/add_3"
  input: "comnet_model/stack_9/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/ones_like_3/Shape"
  op: "Shape"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/ones_like_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/ones_like_3"
  op: "Fill"
  input: "comnet_model/ones_like_3/Shape"
  input: "comnet_model/ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/SegmentSum_3"
  op: "SegmentSum"
  input: "comnet_model/ones_like_3"
  input: "transformation_func/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/ScatterNd_3"
  op: "ScatterNd"
  input: "comnet_model/stack_8"
  input: "comnet_model/GatherV2_3"
  input: "comnet_model/stack_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range"
  op: "Range"
  input: "comnet_model/rnn_3/range/start"
  input: "comnet_model/rnn_3/Rank"
  input: "comnet_model/rnn_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/concat/values_0"
  input: "comnet_model/rnn_3/range"
  input: "comnet_model/rnn_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/transpose"
  op: "Transpose"
  input: "comnet_model/ScatterNd_3"
  input: "comnet_model/rnn_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Cast"
  op: "Cast"
  input: "comnet_model/SegmentSum_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/sequence_length"
  op: "Identity"
  input: "comnet_model/rnn_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape"
  input: "comnet_model/rnn_3/strided_slice/stack"
  input: "comnet_model/rnn_3/strided_slice/stack_1"
  input: "comnet_model/rnn_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/stack"
  op: "Pack"
  input: "comnet_model/rnn_3/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/Equal"
  op: "Equal"
  input: "comnet_model/rnn_3/Shape_1"
  input: "comnet_model/rnn_3/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/All"
  op: "All"
  input: "comnet_model/rnn_3/Equal"
  input: "comnet_model/rnn_3/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor comnet_model/rnn_3/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Assert/Assert"
  op: "Assert"
  input: "comnet_model/rnn_3/All"
  input: "comnet_model/rnn_3/Assert/Assert/data_0"
  input: "comnet_model/rnn_3/stack"
  input: "comnet_model/rnn_3/Assert/Assert/data_2"
  input: "comnet_model/rnn_3/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "comnet_model/rnn_3/CheckSeqLen"
  op: "Identity"
  input: "comnet_model/rnn_3/sequence_length"
  input: "^comnet_model/rnn_3/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_2"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape_2"
  input: "comnet_model/rnn_3/strided_slice_1/stack"
  input: "comnet_model/rnn_3/strided_slice_1/stack_1"
  input: "comnet_model/rnn_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/Shape_3"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/Shape_3"
  input: "comnet_model/rnn_3/strided_slice_2/stack"
  input: "comnet_model/rnn_3/strided_slice_2/stack_1"
  input: "comnet_model/rnn_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/ExpandDims"
  op: "ExpandDims"
  input: "comnet_model/rnn_3/strided_slice_2"
  input: "comnet_model/rnn_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_1"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/ExpandDims"
  input: "comnet_model/rnn_3/Const_1"
  input: "comnet_model/rnn_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/zeros"
  op: "Fill"
  input: "comnet_model/rnn_3/concat_1"
  input: "comnet_model/rnn_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Min"
  op: "Min"
  input: "comnet_model/rnn_3/CheckSeqLen"
  input: "comnet_model/rnn_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Max"
  op: "Max"
  input: "comnet_model/rnn_3/CheckSeqLen"
  input: "comnet_model/rnn_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArray"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_3/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "comnet_model/rnn_3/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/TensorArrayUnstack/Shape"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/range"
  op: "Range"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range/start"
  input: "comnet_model/rnn_3/TensorArrayUnstack/strided_slice"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "comnet_model/rnn_3/TensorArray_1"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "comnet_model/rnn_3/transpose"
  input: "comnet_model/rnn_3/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Maximum"
  op: "Maximum"
  input: "comnet_model/rnn_3/Maximum/x"
  input: "comnet_model/rnn_3/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/strided_slice_1"
  input: "comnet_model/rnn_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_2"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Enter_3"
  op: "Enter"
  input: "comnet_model/rnn_2/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter"
  input: "comnet_model/rnn_3/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_1"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_1"
  input: "comnet_model/rnn_3/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_2"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_2"
  input: "comnet_model/rnn_3/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Merge_3"
  op: "Merge"
  input: "comnet_model/rnn_3/while/Enter_3"
  input: "comnet_model/rnn_3/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less"
  op: "Less"
  input: "comnet_model/rnn_3/while/Merge"
  input: "comnet_model/rnn_3/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less_1"
  op: "Less"
  input: "comnet_model/rnn_3/while/Merge_1"
  input: "comnet_model/rnn_3/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Less_1/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "comnet_model/rnn_3/while/Less"
  input: "comnet_model/rnn_3/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/LoopCond"
  op: "LoopCond"
  input: "comnet_model/rnn_3/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_1"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_1"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_2"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_2"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Switch_3"
  op: "Switch"
  input: "comnet_model/rnn_3/while/Merge_3"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_1"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_2"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Identity_3"
  op: "Identity"
  input: "comnet_model/rnn_3/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add"
  op: "Add"
  input: "comnet_model/rnn_3/while/Identity"
  input: "comnet_model/rnn_3/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/GreaterEqual/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_2"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  op: "Enter"
  input: "bias_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_4"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_5"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  op: "Enter"
  input: "recurrent_kernel_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_7"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  op: "Maximum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Const_3"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_1"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_2"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_8"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_4"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  op: "Tanh"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/sub/x"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/sub"
  op: "Sub"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub/x"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  op: "Mul"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  op: "Add"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select"
  op: "Select"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "comnet_model/rnn_3/while/Select/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Select_1"
  op: "Select"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/Select"
  input: "comnet_model/rnn_3/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/add_1"
  op: "Add"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "comnet_model/rnn_3/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_1"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_2"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/NextIteration_3"
  op: "NextIteration"
  input: "comnet_model/rnn_3/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_1"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_2"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/while/Exit_3"
  op: "Exit"
  input: "comnet_model/rnn_3/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "comnet_model/rnn_3/TensorArray"
  input: "comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/range"
  op: "Range"
  input: "comnet_model/rnn_3/TensorArrayStack/range/start"
  input: "comnet_model/rnn_3/TensorArrayStack/TensorArraySizeV3"
  input: "comnet_model/rnn_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "comnet_model/rnn_3/TensorArray"
  input: "comnet_model/rnn_3/TensorArrayStack/range"
  input: "comnet_model/rnn_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/range_1"
  op: "Range"
  input: "comnet_model/rnn_3/range_1/start"
  input: "comnet_model/rnn_3/Rank_1"
  input: "comnet_model/rnn_3/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/concat_2"
  op: "ConcatV2"
  input: "comnet_model/rnn_3/concat_2/values_0"
  input: "comnet_model/rnn_3/range_1"
  input: "comnet_model/rnn_3/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/rnn_3/transpose_1"
  op: "Transpose"
  input: "comnet_model/rnn_3/TensorArrayStack/TensorArrayGatherV3"
  input: "comnet_model/rnn_3/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/GatherNd_3"
  op: "GatherNd"
  input: "comnet_model/rnn_3/transpose_1"
  input: "comnet_model/stack_8"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/UnsortedSegmentSum_3"
  op: "UnsortedSegmentSum"
  input: "comnet_model/GatherNd_3"
  input: "transformation_func/concat_3"
  input: "transformation_func/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp"
  input: "comnet_model/gru_cell_3/strided_slice/stack"
  input: "comnet_model/gru_cell_3/strided_slice/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_1"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_1"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_2"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_2"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_2"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_3"
  input: "comnet_model/gru_cell_3/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_3"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_3"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul"
  input: "comnet_model/gru_cell_3/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_4"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_4"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd_1"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_1"
  input: "comnet_model/gru_cell_3/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_5"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_5"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/BiasAdd_2"
  op: "BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_2"
  input: "comnet_model/gru_cell_3/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_6"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_6"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_3"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/add_5"
  input: "comnet_model/gru_cell_3/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_7"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_7"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_4"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/add_5"
  input: "comnet_model/gru_cell_3/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd"
  input: "comnet_model/gru_cell_3/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Mul"
  op: "Mul"
  input: "comnet_model/gru_cell_3/add"
  input: "comnet_model/gru_cell_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Add_1"
  op: "Add"
  input: "comnet_model/gru_cell_3/Mul"
  input: "comnet_model/gru_cell_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_3/Add_1"
  input: "comnet_model/gru_cell_3/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value"
  op: "Maximum"
  input: "comnet_model/gru_cell_3/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_3/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_2"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd_1"
  input: "comnet_model/gru_cell_3/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_3/add_2"
  input: "comnet_model/gru_cell_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Add_3"
  op: "Add"
  input: "comnet_model/gru_cell_3/Mul_1"
  input: "comnet_model/gru_cell_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "comnet_model/gru_cell_3/Add_3"
  input: "comnet_model/gru_cell_3/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/clip_by_value_1"
  op: "Maximum"
  input: "comnet_model/gru_cell_3/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_3/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_2"
  op: "Mul"
  input: "comnet_model/gru_cell_3/clip_by_value_1"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/strided_slice_8"
  op: "StridedSlice"
  input: "comnet_model/gru_cell_3/ReadVariableOp_8"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_3/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/MatMul_5"
  op: "MatMul"
  input: "comnet_model/gru_cell_3/mul_2"
  input: "comnet_model/gru_cell_3/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_4"
  op: "Add"
  input: "comnet_model/gru_cell_3/BiasAdd_2"
  input: "comnet_model/gru_cell_3/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/Tanh"
  op: "Tanh"
  input: "comnet_model/gru_cell_3/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_3"
  op: "Mul"
  input: "comnet_model/gru_cell_3/clip_by_value"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/sub"
  op: "Sub"
  input: "comnet_model/gru_cell_3/sub/x"
  input: "comnet_model/gru_cell_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/mul_4"
  op: "Mul"
  input: "comnet_model/gru_cell_3/sub"
  input: "comnet_model/gru_cell_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/gru_cell_3/add_5"
  op: "Add"
  input: "comnet_model/gru_cell_3/mul_3"
  input: "comnet_model/gru_cell_3/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense/MatMul"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Exit_3"
  input: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense/MatMul"
  input: "comnet_model/sequential/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/sequential/dense/LeakyRelu"
  op: "LeakyRelu"
  input: "comnet_model/sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "comnet_model/sequential/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/max"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/RandomUniform"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/random_uniform"
  op: "Add"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/mul"
  input: "comnet_model/sequential/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout/dropout/sub/x"
  input: "comnet_model/sequential/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/truediv"
  op: "RealDiv"
  input: "comnet_model/sequential/dropout/dropout/truediv/x"
  input: "comnet_model/sequential/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/sequential/dropout/dropout/random_uniform"
  input: "comnet_model/sequential/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/mul"
  op: "Mul"
  input: "comnet_model/sequential/dense/LeakyRelu"
  input: "comnet_model/sequential/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/Cast"
  op: "Cast"
  input: "comnet_model/sequential/dropout/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout/dropout/mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/mul"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/MatMul"
  op: "MatMul"
  input: "comnet_model/sequential/dropout/dropout/mul_1"
  input: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense_1/MatMul"
  input: "comnet_model/sequential/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "comnet_model/sequential/dense_1/LeakyRelu"
  op: "LeakyRelu"
  input: "comnet_model/sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "comnet_model/sequential/dropout_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/max"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/RandomUniform"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/random_uniform"
  op: "Add"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/mul"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/sub"
  op: "Sub"
  input: "comnet_model/sequential/dropout_1/dropout/sub/x"
  input: "comnet_model/sequential/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/truediv"
  op: "RealDiv"
  input: "comnet_model/sequential/dropout_1/dropout/truediv/x"
  input: "comnet_model/sequential/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/sequential/dropout_1/dropout/random_uniform"
  input: "comnet_model/sequential/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/mul"
  op: "Mul"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  input: "comnet_model/sequential/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/Cast"
  op: "Cast"
  input: "comnet_model/sequential/dropout_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dropout_1/dropout/mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/MatMul"
  op: "MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/mul_1"
  input: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "comnet_model/sequential/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "comnet_model/sequential/dense_2/MatMul"
  input: "comnet_model/sequential/dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "comnet_model/sequential/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "Squeeze"
  input: "transformation_func/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/rank"
  op: "Rank"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_scalar/x"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/assert_broadcastable/weights:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_squared_error/SquaredDifference:0"
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/weights/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/weights/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/values/shape"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/values/shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "mean_squared_error/assert_broadcastable/is_scalar"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/is_scalar"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "mean_squared_error/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Cast/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Mul"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank"
  op: "Rank"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range"
  op: "Range"
  input: "mean_squared_error/range/start"
  input: "mean_squared_error/Rank"
  input: "mean_squared_error/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "mean_squared_error/Mul"
  input: "mean_squared_error/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like"
  op: "Fill"
  input: "mean_squared_error/ones_like/Shape"
  input: "mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/mul_1"
  op: "Mul"
  input: "mean_squared_error/ones_like"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Rank_1"
  op: "Rank"
  input: "mean_squared_error/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/start"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1/delta"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/range_1"
  op: "Range"
  input: "mean_squared_error/range_1/start"
  input: "mean_squared_error/Rank_1"
  input: "mean_squared_error/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_1"
  op: "Sum"
  input: "mean_squared_error/mul_1"
  input: "mean_squared_error/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_2"
  op: "Sum"
  input: "mean_squared_error/Sum"
  input: "mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "DivNoNan"
  input: "mean_squared_error/Sum_2"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense/kernel/Regularizer/l2_regularizer/scale"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "add/x"
  input: "dense/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add"
  input: "dense_1/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "dense_2/kernel/Regularizer/l2_regularizer"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "mean_squared_error/value"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "mean_squared_error/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "regularization_loss"
      }
    }
  }
}
node {
  name: "regularization_loss"
  op: "ScalarSummary"
  input: "regularization_loss/tags"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "comnet_model/rnn_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^comnet_model/rnn_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "comnet_model/rnn_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^comnet_model/rnn_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_7"
  op: "Enter"
  input: "gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_4"
  op: "Merge"
  input: "gradients/f_count_7"
  input: "gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "gradients/Merge_4"
  input: "comnet_model/rnn_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_2/y"
  op: "Const"
  input: "^comnet_model/rnn_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_2"
  op: "Add"
  input: "gradients/Switch_4:1"
  input: "gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_4"
  op: "NextIteration"
  input: "gradients/Add_2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_8"
  op: "Exit"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_9"
  op: "Enter"
  input: "gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_5"
  op: "Merge"
  input: "gradients/b_count_9"
  input: "gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "gradients/Merge_5"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_10"
  op: "LoopCond"
  input: "gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "gradients/Merge_5"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_2"
  op: "Sub"
  input: "gradients/Switch_5:1"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_5"
  op: "NextIteration"
  input: "gradients/Sub_2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_11"
  op: "Exit"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_10"
  op: "Enter"
  input: "gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_6"
  op: "Merge"
  input: "gradients/f_count_10"
  input: "gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "gradients/Merge_6"
  input: "comnet_model/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_3/y"
  op: "Const"
  input: "^comnet_model/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_3"
  op: "Add"
  input: "gradients/Switch_6:1"
  input: "gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_6"
  op: "NextIteration"
  input: "gradients/Add_3"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_11"
  op: "Exit"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_13"
  op: "Enter"
  input: "gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_7"
  op: "Merge"
  input: "gradients/b_count_13"
  input: "gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "gradients/Merge_7"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_14"
  op: "LoopCond"
  input: "gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "gradients/Merge_7"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_3"
  op: "Sub"
  input: "gradients/Switch_7:1"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_7"
  op: "NextIteration"
  input: "gradients/Sub_3"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_15"
  op: "Exit"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/value_grad/Shape"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/Fill"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/div_no_nan"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum"
  input: "gradients/mean_squared_error/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Neg"
  op: "Neg"
  input: "mean_squared_error/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/Neg"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_1"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/mean_squared_error/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/value_grad/mul"
  input: "gradients/mean_squared_error/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Sum_1"
  input: "gradients/mean_squared_error/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/value_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_2_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Size"
  op: "Size"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/add"
  op: "Add"
  input: "mean_squared_error/range"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/mean_squared_error/Sum_grad/add"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/range"
  op: "Range"
  input: "gradients/mean_squared_error/Sum_grad/range/start"
  input: "gradients/mean_squared_error/Sum_grad/Size"
  input: "gradients/mean_squared_error/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/mean_squared_error/Sum_grad/Shape_1"
  input: "gradients/mean_squared_error/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/range"
  input: "gradients/mean_squared_error/Sum_grad/mod"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  input: "gradients/mean_squared_error/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/mean_squared_error/Sum_grad/Shape"
  input: "gradients/mean_squared_error/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mean_squared_error/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Sum_2_grad/Tile"
  input: "gradients/mean_squared_error/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/mean_squared_error/Sum_grad/Reshape"
  input: "gradients/mean_squared_error/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense_2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  input: "mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum"
  input: "gradients/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "mean_squared_error/SquaredDifference"
  input: "gradients/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/Mul_grad/Mul_1"
  input: "gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/Mul_grad/Sum_1"
  input: "gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "dense/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense_1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "transformation_func/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/scalar"
  input: "gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Squeeze"
  input: "transformation_func/concat_5"
  input: "^gradients/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Mul"
  input: "gradients/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "dense/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  input: "gradients/dense/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Squeeze_grad/Reshape"
  input: "comnet_model/sequential/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/mul_1"
  input: "gradients/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  input: "comnet_model/sequential/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout_1/dropout/mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  input: "comnet_model/sequential/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dense_1/LeakyRelu"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  op: "LeakyReluGrad"
  input: "gradients/comnet_model/sequential/dropout_1/dropout/mul_grad/Reshape"
  input: "comnet_model/sequential/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  input: "comnet_model/sequential/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/sequential/dropout/dropout/mul_1"
  input: "gradients/comnet_model/sequential/dense_1/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  input: "comnet_model/sequential/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dropout/dropout/mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/sequential/dense/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  input: "comnet_model/sequential/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/sequential/dense/LeakyRelu"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Mul_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Sum_1"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  op: "LeakyReluGrad"
  input: "gradients/comnet_model/sequential/dropout/dropout/mul_grad/Reshape"
  input: "comnet_model/sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  input: "comnet_model/sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/rnn_3/while/Exit_3"
  input: "gradients/comnet_model/sequential/dense/LeakyRelu_grad/LeakyReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/comnet_model/sequential/dense/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_3/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_3/while/GreaterEqual"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_3/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_3"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/mul_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_3/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/Add_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/add_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_3/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_3/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "gradients/AddN_5"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "comnet_model/rnn_3/while/Identity_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_3/TensorArray_1"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_3/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_3/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_3/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_3/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_3_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_3/transpose_grad/transpose"
  input: "comnet_model/stack_8"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_2/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_3_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_2/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_3_grad/Size"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_3_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_3_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_3_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_3_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_3_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_3_grad/Cast"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape"
  input: "gradients/comnet_model/GatherV2_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/sub"
  input: "gradients/comnet_model/gru_cell_2/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell_2/Tanh"
  input: "gradients/comnet_model/gru_cell_2/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_9"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/zeros"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_2/Add_1"
  input: "comnet_model/gru_cell_2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_2/mul_2"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add"
  input: "gradients/comnet_model/gru_cell_2/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_2/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_2/Add_3"
  input: "comnet_model/gru_cell_2/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_2/add_2"
  input: "gradients/comnet_model/gru_cell_2/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice/stack"
  input: "comnet_model/gru_cell_2/strided_slice/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_2/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_2/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_2/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell_2/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/add_5"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  input: "comnet_model/gru_cell_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_2"
  input: "gradients/comnet_model/gru_cell_2/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell_2/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_10"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_2/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell_2/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_2_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_6"
  input: "gradients/comnet_model/UnsortedSegmentSum_2_grad/Select"
  input: "gradients/comnet_model/GatherNd_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_2/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_2_grad/ScatterNd"
  input: "gradients/comnet_model/rnn_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArray"
  input: "comnet_model/rnn_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn_2/while/Exit_2"
  input: "^gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn_2/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_3/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_2/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_2/while/GreaterEqual"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_2/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_2/while/Identity_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_11"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/sub"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_12"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/mul_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_2/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/Add_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/add_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_2/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_2/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_14"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArray_1"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_2/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_2/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_2/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_2_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_2/transpose_grad/transpose"
  input: "comnet_model/stack_6"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_2_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_2_grad/Size"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_2_grad/Cast"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_2_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_2_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_2_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_2_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_2_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_2_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/strided_slice/stack"
  input: "gradients/strided_slice/stack_1"
  input: "gradients/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range"
  op: "Range"
  input: "gradients/range/start"
  input: "gradients/strided_slice"
  input: "gradients/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1"
  op: "StridedSlice"
  input: "gradients/Shape_2"
  input: "gradients/strided_slice_1/stack"
  input: "gradients/strided_slice_1/stack_1"
  input: "gradients/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_1"
  op: "Range"
  input: "gradients/range_1/start"
  input: "gradients/strided_slice_1"
  input: "gradients/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_2"
  op: "StridedSlice"
  input: "gradients/Shape_3"
  input: "gradients/strided_slice_2/stack"
  input: "gradients/strided_slice_2/stack_1"
  input: "gradients/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_2"
  op: "Range"
  input: "gradients/range_2/start"
  input: "gradients/strided_slice_2"
  input: "gradients/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_3"
  op: "StridedSlice"
  input: "gradients/Shape_4"
  input: "gradients/strided_slice_3/stack"
  input: "gradients/strided_slice_3/stack_1"
  input: "gradients/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_3"
  op: "Range"
  input: "gradients/range_3/start"
  input: "gradients/strided_slice_3"
  input: "gradients/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast"
  op: "Cast"
  input: "gradients/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_1"
  op: "Cast"
  input: "gradients/range_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_2"
  op: "Cast"
  input: "gradients/range_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_3"
  op: "Cast"
  input: "gradients/range_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/gru_cell_2/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_2/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_2/MatMul_4_grad/MatMul"
  input: "gradients/comnet_model/GatherV2_2_grad/Reshape"
  input: "gradients/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_1"
  op: "ConcatV2"
  input: "gradients/Cast"
  input: "gradients/Cast_1"
  input: "gradients/Cast_2"
  input: "gradients/Cast_3"
  input: "gradients/comnet_model/GatherV2_2_grad/Reshape_1"
  input: "gradients/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat"
  input: "gradients/concat_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/sub"
  input: "gradients/comnet_model/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell_1/Tanh"
  input: "gradients/comnet_model/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_18"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_1/Add_1"
  input: "comnet_model/gru_cell_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell_1/mul_2"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add"
  input: "gradients/comnet_model/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell_1/Add_3"
  input: "comnet_model/gru_cell_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell_1/add_2"
  input: "gradients/comnet_model/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice/stack"
  input: "comnet_model/gru_cell_1/strided_slice/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/add_5"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  input: "comnet_model/gru_cell_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum_1"
  input: "gradients/comnet_model/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_19"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell_1/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_1_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_4"
  input: "gradients/comnet_model/UnsortedSegmentSum_1_grad/Select"
  input: "gradients/comnet_model/GatherNd_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_1/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_1_grad/ScatterNd"
  input: "gradients/comnet_model/rnn_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArray"
  input: "comnet_model/rnn_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn_1/while/Exit_2"
  input: "^gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn_1/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_2/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn_1/while/Identity_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn_1/while/GreaterEqual"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn_1/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn_1/while/Identity_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_20"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Tanh"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/sub"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_21"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/mul_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn_1/while/TensorArrayReadV3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/Add_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/add_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn_1/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn_1/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_grad/MatMul"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_23"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArray_1"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn_1/TensorArrayUnstack/range"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_1/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn_1/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/rnn_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/comnet_model/rnn_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/ScatterNd_1_grad/GatherNd"
  op: "GatherNd"
  input: "gradients/comnet_model/rnn_1/transpose_grad/transpose"
  input: "comnet_model/stack_4"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Cast"
  op: "Cast"
  input: "gradients/comnet_model/GatherV2_1_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/gru_cell/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Size"
  op: "Size"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/GatherV2_1_grad/Size"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/comnet_model/GatherV2_1_grad/Cast"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_1"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  input: "gradients/comnet_model/GatherV2_1_grad/strided_slice"
  input: "gradients/comnet_model/GatherV2_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/ScatterNd_1_grad/GatherNd"
  input: "gradients/comnet_model/GatherV2_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/GatherV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/GatherV2_1_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/strided_slice_4/stack"
  input: "gradients/strided_slice_4/stack_1"
  input: "gradients/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_4"
  op: "Range"
  input: "gradients/range_4/start"
  input: "gradients/strided_slice_4"
  input: "gradients/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_5"
  op: "StridedSlice"
  input: "gradients/Shape_6"
  input: "gradients/strided_slice_5/stack"
  input: "gradients/strided_slice_5/stack_1"
  input: "gradients/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_5"
  op: "Range"
  input: "gradients/range_5/start"
  input: "gradients/strided_slice_5"
  input: "gradients/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_6"
  op: "StridedSlice"
  input: "gradients/Shape_7"
  input: "gradients/strided_slice_6/stack"
  input: "gradients/strided_slice_6/stack_1"
  input: "gradients/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_6"
  op: "Range"
  input: "gradients/range_6/start"
  input: "gradients/strided_slice_6"
  input: "gradients/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice_7"
  op: "StridedSlice"
  input: "gradients/Shape_8"
  input: "gradients/strided_slice_7/stack"
  input: "gradients/strided_slice_7/stack_1"
  input: "gradients/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range_7"
  op: "Range"
  input: "gradients/range_7/start"
  input: "gradients/strided_slice_7"
  input: "gradients/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_4"
  op: "Cast"
  input: "gradients/range_4"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_5"
  op: "Cast"
  input: "gradients/range_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_6"
  op: "Cast"
  input: "gradients/range_6"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cast_7"
  op: "Cast"
  input: "gradients/range_7"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_2"
  op: "ConcatV2"
  input: "gradients/comnet_model/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/gru_cell_1/MatMul_4_grad/MatMul"
  input: "gradients/comnet_model/GatherV2_1_grad/Reshape"
  input: "gradients/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_3"
  op: "ConcatV2"
  input: "gradients/Cast_4"
  input: "gradients/Cast_5"
  input: "gradients/Cast_6"
  input: "gradients/Cast_7"
  input: "gradients/comnet_model/GatherV2_1_grad/Reshape_1"
  input: "gradients/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum/input"
  input: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_5"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/input"
  op: "UnsortedSegmentSum"
  input: "gradients/concat_2"
  input: "gradients/concat_3"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1/input"
  input: "gradients/comnet_model/gru_cell/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  input: "comnet_model/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/sub"
  input: "gradients/comnet_model/gru_cell/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Sum"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Neg"
  input: "gradients/comnet_model/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "comnet_model/gru_cell/Tanh"
  input: "gradients/comnet_model/gru_cell/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell/clip_by_value/Minimum"
  input: "comnet_model/gru_cell/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_27"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/zeros"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell/Add_1"
  input: "comnet_model/gru_cell/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/gru_cell/mul_2"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_5_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_5/stack"
  input: "comnet_model/gru_cell/strided_slice_5/stack_1"
  input: "comnet_model/gru_cell/strided_slice_5/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  input: "comnet_model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Mul"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/clip_by_value_1"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_8_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_8/stack"
  input: "comnet_model/gru_cell/strided_slice_8/stack_1"
  input: "comnet_model/gru_cell/strided_slice_8/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  input: "comnet_model/gru_cell/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Mul"
  input: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add"
  input: "gradients/comnet_model/gru_cell/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_2_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_2/stack"
  input: "comnet_model/gru_cell/strided_slice_2/stack_1"
  input: "comnet_model/gru_cell/strided_slice_2/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum"
  input: "comnet_model/gru_cell/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/gru_cell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "comnet_model/gru_cell/Add_3"
  input: "comnet_model/gru_cell/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_3_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_3/stack"
  input: "comnet_model/gru_cell/strided_slice_3/stack_1"
  input: "comnet_model/gru_cell/strided_slice_3/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_6_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_6/stack"
  input: "comnet_model/gru_cell/strided_slice_6/stack_1"
  input: "comnet_model/gru_cell/strided_slice_6/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  input: "comnet_model/gru_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "comnet_model/gru_cell/add_2"
  input: "gradients/comnet_model/gru_cell/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice/stack"
  input: "comnet_model/gru_cell/strided_slice/stack_1"
  input: "comnet_model/gru_cell/strided_slice/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/gru_cell/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Sum"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/gru_cell/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Sum_1"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  input: "comnet_model/gru_cell/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/concat"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  input: "comnet_model/gru_cell/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "comnet_model/UnsortedSegmentSum"
  input: "gradients/comnet_model/gru_cell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_4_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_4/stack"
  input: "comnet_model/gru_cell/strided_slice_4/stack_1"
  input: "comnet_model/gru_cell/strided_slice_4/stack_2"
  input: "gradients/comnet_model/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_7_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_7/stack"
  input: "comnet_model/gru_cell/strided_slice_7/stack_1"
  input: "comnet_model/gru_cell/strided_slice_7/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
  input: "gradients/comnet_model/gru_cell/MatMul_grad/MatMul"
  input: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  op: "ZerosLike"
  input: "transformation_func/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/Maximum"
  op: "Maximum"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  op: "GatherV2"
  input: "gradients/AddN_28"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/Maximum"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "transformation_func/concat_3"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GreaterEqual"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  op: "Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like"
  op: "Fill"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Shape"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/and"
  op: "LogicalAnd"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ExpandDims"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/ones_like"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  op: "ZerosLike"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/UnsortedSegmentSum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/and"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/GatherV2"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/gru_cell/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_1_grad/Shape"
  input: "comnet_model/gru_cell/strided_slice_1/stack"
  input: "comnet_model/gru_cell/strided_slice_1/stack_1"
  input: "comnet_model/gru_cell/strided_slice_1/stack_2"
  input: "gradients/comnet_model/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/comnet_model/GatherNd_grad/ScatterNd"
  op: "ScatterNd"
  input: "comnet_model/stack_2"
  input: "gradients/comnet_model/UnsortedSegmentSum_grad/Select"
  input: "gradients/comnet_model/GatherNd_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_7_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "comnet_model/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/comnet_model/GatherNd_grad/ScatterNd"
  input: "gradients/comnet_model/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_2/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/gru_cell/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/gru_cell_2/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "comnet_model/rnn/TensorArray"
  input: "comnet_model/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "comnet_model/rnn/while/Exit_2"
  input: "^gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "comnet_model/rnn/TensorArrayStack/range"
  input: "gradients/comnet_model/rnn/transpose_1_grad/transpose"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn_1/while/Enter_3_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/comnet_model/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/Exit_3_grad/b_exit"
  input: "gradients/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/Exit_2_grad/b_exit"
  input: "gradients/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "comnet_model/rnn/while/Identity_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/Enter"
  input: "comnet_model/rnn/while/GreaterEqual"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like"
  input: "gradients/comnet_model/rnn/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "comnet_model/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  input: "^gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "comnet_model/rnn/while/Identity_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "comnet_model/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/comnet_model/rnn/while/Select_grad/zeros_like"
  input: "gradients/comnet_model/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/Select_grad/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_32"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_32"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/Merge_2_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Tanh"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/sub"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Neg"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Mul/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_33"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/zeros"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Tanh_grad/TanhGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Add_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_8"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/mul_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/Enter"
  input: "comnet_model/rnn/while/TensorArrayReadV3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_5_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/Add_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_6"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/add_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Mul_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "comnet_model/rnn/while/gru_cell_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/Mul_1_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Sum_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_7"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@comnet_model/rnn/while/gru_cell_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/Enter"
  input: "comnet_model/rnn/while/gru_cell_1/strided_slice_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/Select_1_grad/Select"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_3_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/mul_2_grad/Reshape_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_3_grad/MatMul"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_4_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/Shape"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch:1"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_7_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_8_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch:1"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn/while/gru_cell_1/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/comnet_model/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_3/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp_6/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_2/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn_1/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  input: "gradients/comnet_model/rnn/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/comnet_model/rnn_3/while/gru_cell_1/ReadVariableOp/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "kernel_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "kernel_2"
      }
    }
  }
}
node {
  name: "kernel_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_2"
  op: "HistogramSummary"
  input: "kernel_2/tag"
  input: "kernel_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "recurrent_kernel_2"
      }
    }
  }
}
node {
  name: "recurrent_kernel_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_2"
  op: "HistogramSummary"
  input: "recurrent_kernel_2/tag"
  input: "recurrent_kernel_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bias_2"
      }
    }
  }
}
node {
  name: "bias_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_2"
  op: "HistogramSummary"
  input: "bias_2/tag"
  input: "bias_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "kernel_1_1"
      }
    }
  }
}
node {
  name: "kernel_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1_1"
  op: "HistogramSummary"
  input: "kernel_1_1/tag"
  input: "kernel_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "recurrent_kernel_1_1"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1_1"
  op: "HistogramSummary"
  input: "recurrent_kernel_1_1/tag"
  input: "recurrent_kernel_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bias_1_1"
      }
    }
  }
}
node {
  name: "bias_1_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1_1"
  op: "HistogramSummary"
  input: "bias_1_1/tag"
  input: "bias_1_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/kernel_1"
      }
    }
  }
}
node {
  name: "dense/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel_1"
  op: "HistogramSummary"
  input: "dense/kernel_1/tag"
  input: "dense/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense/bias_1"
      }
    }
  }
}
node {
  name: "dense/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias_1"
  op: "HistogramSummary"
  input: "dense/bias_1/tag"
  input: "dense/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/kernel_1"
      }
    }
  }
}
node {
  name: "dense_1/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel_1"
  op: "HistogramSummary"
  input: "dense_1/kernel_1/tag"
  input: "dense_1/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_1/bias_1"
      }
    }
  }
}
node {
  name: "dense_1/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias_1"
  op: "HistogramSummary"
  input: "dense_1/bias_1/tag"
  input: "dense_1/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/kernel_1"
      }
    }
  }
}
node {
  name: "dense_2/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel_1"
  op: "HistogramSummary"
  input: "dense_2/kernel_1/tag"
  input: "dense_2/kernel_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dense_2/bias_1"
      }
    }
  }
}
node {
  name: "dense_2/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias_1"
  op: "HistogramSummary"
  input: "dense_2/bias_1/tag"
  input: "dense_2/bias_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_31_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_31_1"
  op: "HistogramSummary"
  input: "gradients/AddN_31_1/tag"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_30_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_30_1"
  op: "HistogramSummary"
  input: "gradients/AddN_30_1/tag"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_29_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_29_1"
  op: "HistogramSummary"
  input: "gradients/AddN_29_1/tag"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_40_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_40_1"
  op: "HistogramSummary"
  input: "gradients/AddN_40_1/tag"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_39_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_39_1"
  op: "HistogramSummary"
  input: "gradients/AddN_39_1/tag"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_38_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_38_1"
  op: "HistogramSummary"
  input: "gradients/AddN_38_1/tag"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_2_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_2_1"
  op: "HistogramSummary"
  input: "gradients/AddN_2_1/tag"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_1_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1_1"
  op: "HistogramSummary"
  input: "gradients/AddN_1_1/tag"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/AddN_41"
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "HistogramSummary"
  input: "gradients/AddN_41/tag"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
      }
    }
  }
}
node {
  name: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
  op: "HistogramSummary"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1/tag"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "ExponentialDecay/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/initial_learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel/Adam"
    }
  }
}
node {
  name: "kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "kernel/Adam"
  input: "kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel/Adam_1"
    }
  }
}
node {
  name: "kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "kernel/Adam_1"
  input: "kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel/Adam"
    }
  }
}
node {
  name: "recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam"
  input: "recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam_1"
  input: "recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias/Adam"
    }
  }
}
node {
  name: "bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "bias/Adam"
  input: "bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias/Adam_1"
    }
  }
}
node {
  name: "bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "bias/Adam_1"
  input: "bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "kernel_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1/Adam"
    }
  }
}
node {
  name: "kernel_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "kernel_1/Adam"
  input: "kernel_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "kernel_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "kernel_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "kernel_1/Adam_1"
    }
  }
}
node {
  name: "kernel_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "kernel_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "kernel_1/Adam_1"
  input: "kernel_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "kernel_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1/Adam"
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam"
  input: "recurrent_kernel_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "recurrent_kernel_1/Adam_1"
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  input: "recurrent_kernel_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recurrent_kernel_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1/Adam"
    }
  }
}
node {
  name: "bias_1/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Adam/Assign"
  op: "AssignVariableOp"
  input: "bias_1/Adam"
  input: "bias_1/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bias_1/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "bias_1/Adam_1"
    }
  }
}
node {
  name: "bias_1/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bias_1/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "bias_1/Adam_1"
  input: "bias_1/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bias_1/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam"
    }
  }
}
node {
  name: "dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel/Adam_1"
    }
  }
}
node {
  name: "dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam"
    }
  }
}
node {
  name: "dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias/Adam_1"
    }
  }
}
node {
  name: "dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam"
    }
  }
}
node {
  name: "dense_1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam"
    }
  }
}
node {
  name: "dense_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias/Adam_1"
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam"
    }
  }
}
node {
  name: "dense_2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel/Adam_1"
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "dense_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam"
    }
  }
}
node {
  name: "dense_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias/Adam_1"
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "dense_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "kernel"
  input: "kernel/Adam"
  input: "kernel/Adam_1"
  input: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "recurrent_kernel"
  input: "recurrent_kernel/Adam"
  input: "recurrent_kernel/Adam_1"
  input: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bias"
  input: "bias/Adam"
  input: "bias/Adam_1"
  input: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_kernel_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "kernel_1"
  input: "kernel_1/Adam"
  input: "kernel_1/Adam_1"
  input: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@kernel_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "recurrent_kernel_1"
  input: "recurrent_kernel_1/Adam"
  input: "recurrent_kernel_1/Adam_1"
  input: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_recurrent_kernel_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_bias_1/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "bias_1"
  input: "bias_1/Adam"
  input: "bias_1/Adam_1"
  input: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_bias_1/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Adam"
  input: "dense_1/kernel/Adam_1"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_1/bias"
  input: "dense_1/bias/Adam"
  input: "dense_1/bias/Adam_1"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Adam"
  input: "dense_2/kernel/Adam_1"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_dense_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_2/bias"
  input: "dense_2/bias/Adam"
  input: "dense_2/bias/Adam_1"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_dense_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_bias/ResourceApplyAdam"
  input: "^Adam/update_bias_1/ResourceApplyAdam"
  input: "^Adam/update_dense/bias/ResourceApplyAdam"
  input: "^Adam/update_dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_1/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_dense_2/bias/ResourceApplyAdam"
  input: "^Adam/update_dense_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel/ResourceApplyAdam"
  input: "^Adam/update_kernel_1/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_recurrent_kernel_1/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^bias/Adam/Assign"
  input: "^bias/Adam_1/Assign"
  input: "^bias/Assign"
  input: "^bias_1/Adam/Assign"
  input: "^bias_1/Adam_1/Assign"
  input: "^bias_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense_1/bias/Adam/Assign"
  input: "^dense_1/bias/Adam_1/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Adam/Assign"
  input: "^dense_1/kernel/Adam_1/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_2/bias/Adam/Assign"
  input: "^dense_2/bias/Adam_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Adam/Assign"
  input: "^dense_2/kernel/Adam_1/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^global_step/Assign"
  input: "^kernel/Adam/Assign"
  input: "^kernel/Adam_1/Assign"
  input: "^kernel/Assign"
  input: "^kernel_1/Adam/Assign"
  input: "^kernel_1/Adam_1/Assign"
  input: "^kernel_1/Assign"
  input: "^recurrent_kernel/Adam/Assign"
  input: "^recurrent_kernel/Adam_1/Assign"
  input: "^recurrent_kernel/Assign"
  input: "^recurrent_kernel_1/Adam/Assign"
  input: "^recurrent_kernel_1/Adam_1/Assign"
  input: "^recurrent_kernel_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 39
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "global_step"
        string_val: "kernel"
        string_val: "recurrent_kernel"
        string_val: "bias"
        string_val: "kernel_1"
        string_val: "recurrent_kernel_1"
        string_val: "bias_1"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "recurrent_kernel_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "bias_1/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "dense_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "dense_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 39
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "global_step"
        string_val: "kernel"
        string_val: "recurrent_kernel"
        string_val: "bias"
        string_val: "kernel_1"
        string_val: "recurrent_kernel_1"
        string_val: "bias_1"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_2/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 39
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "regularization_loss"
  input: "kernel_2"
  input: "recurrent_kernel_2"
  input: "bias_2"
  input: "kernel_1_1"
  input: "recurrent_kernel_1_1"
  input: "bias_1_1"
  input: "dense/kernel_1"
  input: "dense/bias_1"
  input: "dense_1/kernel_1"
  input: "dense_1/bias_1"
  input: "dense_2/kernel_1"
  input: "dense_2/bias_1"
  input: "gradients/AddN_31_1"
  input: "gradients/AddN_30_1"
  input: "gradients/AddN_29_1"
  input: "gradients/AddN_40_1"
  input: "gradients/AddN_39_1"
  input: "gradients/AddN_38_1"
  input: "gradients/AddN_2_1"
  input: "gradients/comnet_model/sequential/dense/BiasAdd_grad/BiasAddGrad_1"
  input: "gradients/AddN_1_1"
  input: "gradients/comnet_model/sequential/dense_1/BiasAdd_grad/BiasAddGrad_1"
  input: "gradients/AddN_41"
  input: "gradients/comnet_model/sequential/dense_2/BiasAdd_grad/BiasAddGrad_1"
  attr {
    key: "N"
    value {
      i: 26
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_3ac8ad919fab47e697fd62778aa4e298/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bias"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "bias_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "kernel"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "kernel_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "recurrent_kernel_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "bias/Read/ReadVariableOp"
  input: "bias/Adam/Read/ReadVariableOp"
  input: "bias/Adam_1/Read/ReadVariableOp"
  input: "bias_1/Read/ReadVariableOp"
  input: "bias_1/Adam/Read/ReadVariableOp"
  input: "bias_1/Adam_1/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/bias/Adam/Read/ReadVariableOp"
  input: "dense/bias/Adam_1/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense/kernel/Adam/Read/ReadVariableOp"
  input: "dense/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/bias/Adam/Read/ReadVariableOp"
  input: "dense_1/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam/Read/ReadVariableOp"
  input: "dense_1/kernel/Adam_1/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/bias/Adam/Read/ReadVariableOp"
  input: "dense_2/bias/Adam_1/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam/Read/ReadVariableOp"
  input: "dense_2/kernel/Adam_1/Read/ReadVariableOp"
  input: "global_step"
  input: "kernel/Read/ReadVariableOp"
  input: "kernel/Adam/Read/ReadVariableOp"
  input: "kernel/Adam_1/Read/ReadVariableOp"
  input: "kernel_1/Read/ReadVariableOp"
  input: "kernel_1/Adam/Read/ReadVariableOp"
  input: "kernel_1/Adam_1/Read/ReadVariableOp"
  input: "recurrent_kernel/Read/ReadVariableOp"
  input: "recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "recurrent_kernel/Adam_1/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Adam/Read/ReadVariableOp"
  input: "recurrent_kernel_1/Adam_1/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "bias"
        string_val: "bias/Adam"
        string_val: "bias/Adam_1"
        string_val: "bias_1"
        string_val: "bias_1/Adam"
        string_val: "bias_1/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense_1/bias"
        string_val: "dense_1/bias/Adam"
        string_val: "dense_1/bias/Adam_1"
        string_val: "dense_1/kernel"
        string_val: "dense_1/kernel/Adam"
        string_val: "dense_1/kernel/Adam_1"
        string_val: "dense_2/bias"
        string_val: "dense_2/bias/Adam"
        string_val: "dense_2/bias/Adam_1"
        string_val: "dense_2/kernel"
        string_val: "dense_2/kernel/Adam"
        string_val: "dense_2/kernel/Adam_1"
        string_val: "global_step"
        string_val: "kernel"
        string_val: "kernel/Adam"
        string_val: "kernel/Adam_1"
        string_val: "kernel_1"
        string_val: "kernel_1/Adam"
        string_val: "kernel_1/Adam_1"
        string_val: "recurrent_kernel"
        string_val: "recurrent_kernel/Adam"
        string_val: "recurrent_kernel/Adam_1"
        string_val: "recurrent_kernel_1"
        string_val: "recurrent_kernel_1/Adam"
        string_val: "recurrent_kernel_1/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "bias/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "bias/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "bias_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "bias_1/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "bias_1/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "dense/bias/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "dense/bias/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "dense/kernel/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "dense_1/bias/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "dense_1/kernel/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "dense_2/bias/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "dense_2/kernel/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "kernel"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "kernel/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "kernel/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "kernel_1"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "kernel_1/Adam"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "kernel_1/Adam_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "recurrent_kernel"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "recurrent_kernel/Adam_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "recurrent_kernel_1/Adam_1"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "__inference_Dataset_map_<lambda>_99"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity_2"
        type: DT_INT64
      }
      output_arg {
        name: "identity_3"
        type: DT_INT64
      }
      output_arg {
        name: "identity_4"
        type: DT_INT64
      }
      output_arg {
        name: "identity_5"
        type: DT_INT64
      }
      output_arg {
        name: "identity_6"
        type: DT_INT64
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "parse/ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "args_0"
      input: "parse/ParseSingleExample/Const:output:0"
      input: "parse/ParseSingleExample/Const_1:output:0"
      input: "parse/ParseSingleExample/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "n_links"
            s: "n_paths"
            s: "n_total"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 6
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
            s: "delay"
            s: "link_capacity"
            s: "links"
            s: "paths"
            s: "sequences"
            s: "traffic"
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:5"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:5"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:5"
      input: "parse/SparseToDense/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_1"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:0"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:0"
      input: "parse/SparseToDense_1/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_2"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:1"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:1"
      input: "parse/SparseToDense_2/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_3"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:2"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:2"
      input: "parse/SparseToDense_3/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_4"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:3"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:3"
      input: "parse/SparseToDense_4/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_5/default_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "parse/SparseToDense_5"
      op: "SparseToDense"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_indices:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_shapes:4"
      input: "parse/ParseSingleExample/ParseSingleExample:sparse_values:4"
      input: "parse/SparseToDense_5/default_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "parse/SparseToDense_2:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "parse/SparseToDense_3:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "parse/ParseSingleExample/ParseSingleExample:dense_values:2"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "parse/SparseToDense_4:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "parse/SparseToDense_5:dense:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "parse/SparseToDense:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "parse/SparseToDense_1:dense:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TensorSliceDataset"
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "args_0"
      input: "flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_flat_map_read_one_file_37"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "FlatMapDataset:handle:0"
      input: "^TensorSliceDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TensorSliceDataset"
      value: "TensorSliceDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_read_one_file_37"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_UpAAVULdaCc"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/tensors/normalize_tensors/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2951
              }
            }
            string_val: "topology/tfrecords/train_2ms/1000.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1001.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1002.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1003.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1004.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1006.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1007.tfrecords"
            string_val: "topology/tfrecords/train_2ms/100.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1010.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1013.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1014.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1015.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1016.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1017.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1018.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1019.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1020.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1021.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1023.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1024.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1025.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1028.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1029.tfrecords"
            string_val: "topology/tfrecords/train_2ms/102.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1030.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1031.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1032.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1033.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1034.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1035.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1036.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1037.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1038.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1039.tfrecords"
            string_val: "topology/tfrecords/train_2ms/103.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1043.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1044.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1045.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1046.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1047.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1048.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1049.tfrecords"
            string_val: "topology/tfrecords/train_2ms/104.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1051.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1052.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1053.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1054.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1055.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1056.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1057.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1058.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1059.tfrecords"
            string_val: "topology/tfrecords/train_2ms/105.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1061.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1062.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1064.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1065.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1068.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1069.tfrecords"
            string_val: "topology/tfrecords/train_2ms/106.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1071.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1072.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1074.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1075.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1076.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1077.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1078.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1079.tfrecords"
            string_val: "topology/tfrecords/train_2ms/107.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1080.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1081.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1082.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1083.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1084.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1086.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1087.tfrecords"
            string_val: "topology/tfrecords/train_2ms/108.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1090.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1091.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1092.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1093.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1094.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1096.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1097.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1098.tfrecords"
            string_val: "topology/tfrecords/train_2ms/109.tfrecords"
            string_val: "topology/tfrecords/train_2ms/10.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1100.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1102.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1103.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1105.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1107.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1108.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1109.tfrecords"
            string_val: "topology/tfrecords/train_2ms/110.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1112.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1114.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1115.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1116.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1117.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1118.tfrecords"
            string_val: "topology/tfrecords/train_2ms/111.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1120.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1121.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1122.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1124.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1125.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1126.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1127.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1128.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1129.tfrecords"
            string_val: "topology/tfrecords/train_2ms/112.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1130.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1134.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1135.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1136.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1137.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1138.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1139.tfrecords"
            string_val: "topology/tfrecords/train_2ms/113.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1140.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1141.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1143.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1144.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1145.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1146.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1147.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1148.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1149.tfrecords"
            string_val: "topology/tfrecords/train_2ms/114.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1150.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1151.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1152.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1153.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1154.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1155.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1156.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1157.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1158.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1159.tfrecords"
            string_val: "topology/tfrecords/train_2ms/115.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1160.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1161.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1163.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1164.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1165.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1166.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1167.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1168.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1169.tfrecords"
            string_val: "topology/tfrecords/train_2ms/116.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1170.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1171.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1172.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1173.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1174.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1175.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1176.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1177.tfrecords"
            string_val: "topology/tfrecords/train_2ms/117.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1180.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1181.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1182.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1185.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1186.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1187.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1189.tfrecords"
            string_val: "topology/tfrecords/train_2ms/118.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1190.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1191.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1193.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1194.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1195.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1197.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1198.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1199.tfrecords"
            string_val: "topology/tfrecords/train_2ms/119.tfrecords"
            string_val: "topology/tfrecords/train_2ms/11.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1200.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1201.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1202.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1203.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1204.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1206.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1207.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1209.tfrecords"
            string_val: "topology/tfrecords/train_2ms/120.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1210.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1211.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1212.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1213.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1214.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1215.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1216.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1218.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1219.tfrecords"
            string_val: "topology/tfrecords/train_2ms/121.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1220.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1221.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1222.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1223.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1224.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1225.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1226.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1227.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1228.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1229.tfrecords"
            string_val: "topology/tfrecords/train_2ms/122.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1232.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1233.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1234.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1235.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1236.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1238.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1239.tfrecords"
            string_val: "topology/tfrecords/train_2ms/123.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1240.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1241.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1242.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1247.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1249.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1250.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1251.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1252.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1253.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1255.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1256.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1257.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1258.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1259.tfrecords"
            string_val: "topology/tfrecords/train_2ms/125.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1260.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1261.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1263.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1264.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1266.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1267.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1268.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1269.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1270.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1271.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1272.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1273.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1274.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1275.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1276.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1277.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1278.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1279.tfrecords"
            string_val: "topology/tfrecords/train_2ms/127.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1280.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1281.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1282.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1283.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1284.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1285.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1287.tfrecords"
            string_val: "topology/tfrecords/train_2ms/128.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1290.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1291.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1293.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1294.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1295.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1296.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1297.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1299.tfrecords"
            string_val: "topology/tfrecords/train_2ms/129.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1300.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1301.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1302.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1303.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1304.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1305.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1306.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1307.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1308.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1309.tfrecords"
            string_val: "topology/tfrecords/train_2ms/130.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1310.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1311.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1312.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1314.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1317.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1319.tfrecords"
            string_val: "topology/tfrecords/train_2ms/131.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1320.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1322.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1323.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1325.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1327.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1328.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1329.tfrecords"
            string_val: "topology/tfrecords/train_2ms/132.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1330.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1331.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1332.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1333.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1334.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1336.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1337.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1338.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1339.tfrecords"
            string_val: "topology/tfrecords/train_2ms/133.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1340.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1341.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1342.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1343.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1344.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1345.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1346.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1347.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1348.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1349.tfrecords"
            string_val: "topology/tfrecords/train_2ms/134.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1350.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1351.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1352.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1353.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1354.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1355.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1357.tfrecords"
            string_val: "topology/tfrecords/train_2ms/135.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1360.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1361.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1363.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1364.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1365.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1366.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1367.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1369.tfrecords"
            string_val: "topology/tfrecords/train_2ms/136.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1370.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1371.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1372.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1374.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1375.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1376.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1377.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1378.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1379.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1380.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1381.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1382.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1383.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1384.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1385.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1387.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1388.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1389.tfrecords"
            string_val: "topology/tfrecords/train_2ms/138.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1390.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1391.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1392.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1393.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1394.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1396.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1397.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1398.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1399.tfrecords"
            string_val: "topology/tfrecords/train_2ms/13.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1400.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1401.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1402.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1403.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1404.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1405.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1406.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1408.tfrecords"
            string_val: "topology/tfrecords/train_2ms/140.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1410.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1413.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1414.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1415.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1417.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1418.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1419.tfrecords"
            string_val: "topology/tfrecords/train_2ms/141.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1420.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1421.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1422.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1426.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1427.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1428.tfrecords"
            string_val: "topology/tfrecords/train_2ms/142.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1430.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1431.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1432.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1433.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1434.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1435.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1436.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1437.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1438.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1439.tfrecords"
            string_val: "topology/tfrecords/train_2ms/143.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1440.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1441.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1443.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1444.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1445.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1447.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1448.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1449.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1450.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1452.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1453.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1455.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1457.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1458.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1459.tfrecords"
            string_val: "topology/tfrecords/train_2ms/145.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1461.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1462.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1463.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1464.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1465.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1466.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1467.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1468.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1469.tfrecords"
            string_val: "topology/tfrecords/train_2ms/146.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1470.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1471.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1472.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1473.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1474.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1475.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1476.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1477.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1478.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1479.tfrecords"
            string_val: "topology/tfrecords/train_2ms/147.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1480.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1481.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1482.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1483.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1484.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1485.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1487.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1488.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1489.tfrecords"
            string_val: "topology/tfrecords/train_2ms/148.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1490.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1492.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1493.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1494.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1495.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1496.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1497.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1498.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1499.tfrecords"
            string_val: "topology/tfrecords/train_2ms/149.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1500.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1501.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1504.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1505.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1506.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1507.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1508.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1509.tfrecords"
            string_val: "topology/tfrecords/train_2ms/150.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1511.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1512.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1513.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1514.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1515.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1518.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1519.tfrecords"
            string_val: "topology/tfrecords/train_2ms/151.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1520.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1521.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1523.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1525.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1526.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1527.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1528.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1529.tfrecords"
            string_val: "topology/tfrecords/train_2ms/152.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1530.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1532.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1533.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1534.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1535.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1536.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1538.tfrecords"
            string_val: "topology/tfrecords/train_2ms/153.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1542.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1544.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1545.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1546.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1547.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1548.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1549.tfrecords"
            string_val: "topology/tfrecords/train_2ms/154.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1551.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1552.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1553.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1556.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1557.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1558.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1559.tfrecords"
            string_val: "topology/tfrecords/train_2ms/155.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1560.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1561.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1562.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1564.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1565.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1566.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1567.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1568.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1569.tfrecords"
            string_val: "topology/tfrecords/train_2ms/156.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1570.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1571.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1573.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1574.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1576.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1577.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1578.tfrecords"
            string_val: "topology/tfrecords/train_2ms/157.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1580.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1581.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1582.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1583.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1584.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1585.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1586.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1587.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1588.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1589.tfrecords"
            string_val: "topology/tfrecords/train_2ms/158.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1590.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1593.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1594.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1595.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1597.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1598.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1599.tfrecords"
            string_val: "topology/tfrecords/train_2ms/159.tfrecords"
            string_val: "topology/tfrecords/train_2ms/15.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1600.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1601.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1602.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1603.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1604.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1606.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1607.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1608.tfrecords"
            string_val: "topology/tfrecords/train_2ms/160.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1611.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1612.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1613.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1614.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1615.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1616.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1618.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1619.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1620.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1621.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1622.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1625.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1626.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1627.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1628.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1629.tfrecords"
            string_val: "topology/tfrecords/train_2ms/162.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1630.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1631.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1633.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1634.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1635.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1636.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1637.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1638.tfrecords"
            string_val: "topology/tfrecords/train_2ms/163.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1640.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1641.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1642.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1643.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1644.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1645.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1646.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1647.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1648.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1649.tfrecords"
            string_val: "topology/tfrecords/train_2ms/164.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1650.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1651.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1652.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1653.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1654.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1655.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1656.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1657.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1658.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1659.tfrecords"
            string_val: "topology/tfrecords/train_2ms/165.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1660.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1661.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1662.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1663.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1664.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1665.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1666.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1667.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1668.tfrecords"
            string_val: "topology/tfrecords/train_2ms/166.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1671.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1672.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1673.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1674.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1675.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1676.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1677.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1678.tfrecords"
            string_val: "topology/tfrecords/train_2ms/167.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1680.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1681.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1683.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1685.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1687.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1688.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1689.tfrecords"
            string_val: "topology/tfrecords/train_2ms/168.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1691.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1692.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1694.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1695.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1696.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1697.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1699.tfrecords"
            string_val: "topology/tfrecords/train_2ms/169.tfrecords"
            string_val: "topology/tfrecords/train_2ms/16.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1700.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1702.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1704.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1706.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1707.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1708.tfrecords"
            string_val: "topology/tfrecords/train_2ms/170.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1710.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1711.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1712.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1714.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1715.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1716.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1717.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1718.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1719.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1720.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1721.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1722.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1725.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1726.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1728.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1729.tfrecords"
            string_val: "topology/tfrecords/train_2ms/172.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1730.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1731.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1732.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1733.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1734.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1735.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1736.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1737.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1738.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1739.tfrecords"
            string_val: "topology/tfrecords/train_2ms/173.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1740.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1741.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1743.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1744.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1745.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1747.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1748.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1749.tfrecords"
            string_val: "topology/tfrecords/train_2ms/174.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1750.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1752.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1753.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1754.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1755.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1757.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1759.tfrecords"
            string_val: "topology/tfrecords/train_2ms/175.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1761.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1762.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1763.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1764.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1765.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1766.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1768.tfrecords"
            string_val: "topology/tfrecords/train_2ms/176.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1770.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1771.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1772.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1773.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1774.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1775.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1776.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1778.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1779.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1780.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1781.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1782.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1783.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1784.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1788.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1789.tfrecords"
            string_val: "topology/tfrecords/train_2ms/178.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1790.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1791.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1792.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1793.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1794.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1796.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1797.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1798.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1799.tfrecords"
            string_val: "topology/tfrecords/train_2ms/179.tfrecords"
            string_val: "topology/tfrecords/train_2ms/17.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1800.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1801.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1802.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1804.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1806.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1807.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1808.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1809.tfrecords"
            string_val: "topology/tfrecords/train_2ms/180.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1810.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1811.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1812.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1813.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1814.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1815.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1816.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1817.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1818.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1819.tfrecords"
            string_val: "topology/tfrecords/train_2ms/181.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1820.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1821.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1824.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1825.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1829.tfrecords"
            string_val: "topology/tfrecords/train_2ms/182.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1830.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1831.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1832.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1833.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1834.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1835.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1836.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1837.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1838.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1840.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1843.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1844.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1845.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1846.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1847.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1848.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1849.tfrecords"
            string_val: "topology/tfrecords/train_2ms/184.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1850.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1851.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1852.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1853.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1855.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1856.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1857.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1858.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1859.tfrecords"
            string_val: "topology/tfrecords/train_2ms/185.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1860.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1861.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1864.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1865.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1866.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1867.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1868.tfrecords"
            string_val: "topology/tfrecords/train_2ms/186.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1870.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1871.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1873.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1874.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1875.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1876.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1877.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1878.tfrecords"
            string_val: "topology/tfrecords/train_2ms/187.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1880.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1881.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1882.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1883.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1884.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1886.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1889.tfrecords"
            string_val: "topology/tfrecords/train_2ms/188.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1890.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1892.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1893.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1894.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1896.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1897.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1898.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1899.tfrecords"
            string_val: "topology/tfrecords/train_2ms/189.tfrecords"
            string_val: "topology/tfrecords/train_2ms/18.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1900.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1902.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1903.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1904.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1906.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1907.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1908.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1909.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1910.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1911.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1912.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1914.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1915.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1917.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1918.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1919.tfrecords"
            string_val: "topology/tfrecords/train_2ms/191.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1920.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1921.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1922.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1923.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1924.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1926.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1927.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1928.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1929.tfrecords"
            string_val: "topology/tfrecords/train_2ms/192.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1930.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1933.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1934.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1938.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1939.tfrecords"
            string_val: "topology/tfrecords/train_2ms/193.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1940.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1942.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1943.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1944.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1945.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1946.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1947.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1948.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1949.tfrecords"
            string_val: "topology/tfrecords/train_2ms/194.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1951.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1953.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1954.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1955.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1956.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1958.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1959.tfrecords"
            string_val: "topology/tfrecords/train_2ms/195.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1960.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1962.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1963.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1964.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1967.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1968.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1969.tfrecords"
            string_val: "topology/tfrecords/train_2ms/196.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1970.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1972.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1973.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1975.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1977.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1978.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1979.tfrecords"
            string_val: "topology/tfrecords/train_2ms/197.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1980.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1981.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1982.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1983.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1985.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1986.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1987.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1989.tfrecords"
            string_val: "topology/tfrecords/train_2ms/198.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1990.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1991.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1992.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1993.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1994.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1995.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1996.tfrecords"
            string_val: "topology/tfrecords/train_2ms/1997.tfrecords"
            string_val: "topology/tfrecords/train_2ms/199.tfrecords"
            string_val: "topology/tfrecords/train_2ms/19.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2001.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2002.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2004.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2005.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2009.tfrecords"
            string_val: "topology/tfrecords/train_2ms/200.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2010.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2013.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2015.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2017.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2018.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2019.tfrecords"
            string_val: "topology/tfrecords/train_2ms/201.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2020.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2023.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2024.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2025.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2026.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2028.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2029.tfrecords"
            string_val: "topology/tfrecords/train_2ms/202.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2030.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2031.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2032.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2033.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2034.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2035.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2036.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2037.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2038.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2039.tfrecords"
            string_val: "topology/tfrecords/train_2ms/203.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2040.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2041.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2042.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2044.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2045.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2046.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2047.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2048.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2049.tfrecords"
            string_val: "topology/tfrecords/train_2ms/204.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2051.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2053.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2054.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2055.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2056.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2057.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2058.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2059.tfrecords"
            string_val: "topology/tfrecords/train_2ms/205.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2062.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2063.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2064.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2065.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2066.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2067.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2068.tfrecords"
            string_val: "topology/tfrecords/train_2ms/206.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2070.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2071.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2072.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2073.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2074.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2075.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2076.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2077.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2078.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2079.tfrecords"
            string_val: "topology/tfrecords/train_2ms/207.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2080.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2083.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2084.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2085.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2086.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2087.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2088.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2089.tfrecords"
            string_val: "topology/tfrecords/train_2ms/208.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2090.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2094.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2095.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2096.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2097.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2098.tfrecords"
            string_val: "topology/tfrecords/train_2ms/209.tfrecords"
            string_val: "topology/tfrecords/train_2ms/20.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2100.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2101.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2102.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2103.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2104.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2105.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2106.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2108.tfrecords"
            string_val: "topology/tfrecords/train_2ms/210.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2110.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2111.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2112.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2114.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2115.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2116.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2117.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2118.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2119.tfrecords"
            string_val: "topology/tfrecords/train_2ms/211.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2120.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2121.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2124.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2125.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2126.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2127.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2129.tfrecords"
            string_val: "topology/tfrecords/train_2ms/212.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2130.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2132.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2133.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2134.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2136.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2137.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2139.tfrecords"
            string_val: "topology/tfrecords/train_2ms/213.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2140.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2141.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2142.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2143.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2144.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2146.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2148.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2149.tfrecords"
            string_val: "topology/tfrecords/train_2ms/214.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2150.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2151.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2152.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2154.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2155.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2157.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2158.tfrecords"
            string_val: "topology/tfrecords/train_2ms/215.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2160.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2162.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2163.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2166.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2167.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2168.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2169.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2170.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2171.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2172.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2173.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2174.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2176.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2177.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2178.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2179.tfrecords"
            string_val: "topology/tfrecords/train_2ms/217.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2180.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2181.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2182.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2185.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2186.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2187.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2188.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2189.tfrecords"
            string_val: "topology/tfrecords/train_2ms/218.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2190.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2191.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2192.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2193.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2194.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2195.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2196.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2197.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2198.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2199.tfrecords"
            string_val: "topology/tfrecords/train_2ms/219.tfrecords"
            string_val: "topology/tfrecords/train_2ms/21.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2200.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2201.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2203.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2204.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2206.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2207.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2208.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2209.tfrecords"
            string_val: "topology/tfrecords/train_2ms/220.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2211.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2212.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2215.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2216.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2219.tfrecords"
            string_val: "topology/tfrecords/train_2ms/221.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2220.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2221.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2222.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2223.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2224.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2225.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2226.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2227.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2228.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2229.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2231.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2233.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2234.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2235.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2236.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2237.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2239.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2240.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2241.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2242.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2243.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2244.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2245.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2246.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2247.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2248.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2250.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2253.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2254.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2255.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2257.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2259.tfrecords"
            string_val: "topology/tfrecords/train_2ms/225.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2260.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2261.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2262.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2264.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2265.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2266.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2267.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2269.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2271.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2272.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2274.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2275.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2276.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2277.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2278.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2279.tfrecords"
            string_val: "topology/tfrecords/train_2ms/227.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2281.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2283.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2284.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2285.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2286.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2287.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2289.tfrecords"
            string_val: "topology/tfrecords/train_2ms/228.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2290.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2291.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2292.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2295.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2296.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2297.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2298.tfrecords"
            string_val: "topology/tfrecords/train_2ms/229.tfrecords"
            string_val: "topology/tfrecords/train_2ms/22.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2300.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2301.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2302.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2303.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2304.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2305.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2307.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2308.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2309.tfrecords"
            string_val: "topology/tfrecords/train_2ms/230.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2311.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2312.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2313.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2314.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2315.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2316.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2318.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2319.tfrecords"
            string_val: "topology/tfrecords/train_2ms/231.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2320.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2321.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2322.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2323.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2324.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2326.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2327.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2328.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2329.tfrecords"
            string_val: "topology/tfrecords/train_2ms/232.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2330.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2331.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2333.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2334.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2335.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2336.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2337.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2338.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2339.tfrecords"
            string_val: "topology/tfrecords/train_2ms/233.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2340.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2341.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2342.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2343.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2344.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2345.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2346.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2347.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2349.tfrecords"
            string_val: "topology/tfrecords/train_2ms/234.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2350.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2351.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2353.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2354.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2355.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2356.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2357.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2358.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2359.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2360.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2361.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2362.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2364.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2365.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2366.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2367.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2369.tfrecords"
            string_val: "topology/tfrecords/train_2ms/236.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2370.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2372.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2373.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2374.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2376.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2377.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2379.tfrecords"
            string_val: "topology/tfrecords/train_2ms/237.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2381.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2383.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2384.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2385.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2386.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2387.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2389.tfrecords"
            string_val: "topology/tfrecords/train_2ms/238.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2390.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2391.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2392.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2393.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2395.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2396.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2397.tfrecords"
            string_val: "topology/tfrecords/train_2ms/239.tfrecords"
            string_val: "topology/tfrecords/train_2ms/23.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2400.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2403.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2404.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2405.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2406.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2407.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2408.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2409.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2410.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2411.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2412.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2413.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2414.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2415.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2416.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2417.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2419.tfrecords"
            string_val: "topology/tfrecords/train_2ms/241.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2420.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2422.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2424.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2425.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2426.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2427.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2428.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2429.tfrecords"
            string_val: "topology/tfrecords/train_2ms/242.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2431.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2433.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2434.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2435.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2436.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2437.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2438.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2439.tfrecords"
            string_val: "topology/tfrecords/train_2ms/243.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2442.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2443.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2444.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2445.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2446.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2448.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2449.tfrecords"
            string_val: "topology/tfrecords/train_2ms/244.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2450.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2451.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2452.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2453.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2454.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2456.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2457.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2458.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2459.tfrecords"
            string_val: "topology/tfrecords/train_2ms/245.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2460.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2461.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2462.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2463.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2464.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2465.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2466.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2467.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2468.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2469.tfrecords"
            string_val: "topology/tfrecords/train_2ms/246.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2471.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2472.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2473.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2474.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2475.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2476.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2478.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2479.tfrecords"
            string_val: "topology/tfrecords/train_2ms/247.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2480.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2481.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2482.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2483.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2484.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2485.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2486.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2487.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2488.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2489.tfrecords"
            string_val: "topology/tfrecords/train_2ms/248.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2494.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2495.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2496.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2497.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2498.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2499.tfrecords"
            string_val: "topology/tfrecords/train_2ms/249.tfrecords"
            string_val: "topology/tfrecords/train_2ms/24.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2500.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2501.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2502.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2503.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2504.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2505.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2506.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2507.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2508.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2509.tfrecords"
            string_val: "topology/tfrecords/train_2ms/250.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2510.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2512.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2513.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2514.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2515.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2517.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2518.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2519.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2520.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2521.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2522.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2523.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2524.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2525.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2528.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2529.tfrecords"
            string_val: "topology/tfrecords/train_2ms/252.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2530.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2531.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2533.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2534.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2536.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2537.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2539.tfrecords"
            string_val: "topology/tfrecords/train_2ms/253.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2540.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2541.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2542.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2543.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2544.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2545.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2546.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2547.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2548.tfrecords"
            string_val: "topology/tfrecords/train_2ms/254.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2553.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2554.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2556.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2557.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2558.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2559.tfrecords"
            string_val: "topology/tfrecords/train_2ms/255.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2561.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2562.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2563.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2565.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2566.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2567.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2569.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2570.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2571.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2572.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2573.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2574.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2575.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2577.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2579.tfrecords"
            string_val: "topology/tfrecords/train_2ms/257.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2580.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2581.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2582.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2583.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2584.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2585.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2586.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2587.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2588.tfrecords"
            string_val: "topology/tfrecords/train_2ms/258.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2591.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2592.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2593.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2594.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2595.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2596.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2597.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2598.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2599.tfrecords"
            string_val: "topology/tfrecords/train_2ms/259.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2600.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2601.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2602.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2603.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2604.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2605.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2606.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2607.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2608.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2609.tfrecords"
            string_val: "topology/tfrecords/train_2ms/260.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2610.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2611.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2612.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2613.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2614.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2615.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2616.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2617.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2618.tfrecords"
            string_val: "topology/tfrecords/train_2ms/261.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2620.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2621.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2622.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2623.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2624.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2625.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2627.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2629.tfrecords"
            string_val: "topology/tfrecords/train_2ms/262.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2630.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2631.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2632.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2634.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2635.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2636.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2638.tfrecords"
            string_val: "topology/tfrecords/train_2ms/263.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2641.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2642.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2644.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2645.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2646.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2647.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2648.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2651.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2653.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2654.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2655.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2656.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2657.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2658.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2659.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2660.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2661.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2662.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2664.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2665.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2666.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2667.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2668.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2669.tfrecords"
            string_val: "topology/tfrecords/train_2ms/266.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2670.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2671.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2672.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2674.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2675.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2676.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2677.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2678.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2679.tfrecords"
            string_val: "topology/tfrecords/train_2ms/267.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2680.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2681.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2682.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2685.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2686.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2688.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2689.tfrecords"
            string_val: "topology/tfrecords/train_2ms/268.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2690.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2691.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2692.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2693.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2694.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2695.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2696.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2697.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2698.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2699.tfrecords"
            string_val: "topology/tfrecords/train_2ms/26.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2701.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2702.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2703.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2704.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2707.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2708.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2709.tfrecords"
            string_val: "topology/tfrecords/train_2ms/270.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2710.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2711.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2712.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2713.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2714.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2716.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2717.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2718.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2719.tfrecords"
            string_val: "topology/tfrecords/train_2ms/271.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2720.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2722.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2724.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2725.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2726.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2727.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2728.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2729.tfrecords"
            string_val: "topology/tfrecords/train_2ms/272.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2730.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2731.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2732.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2733.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2734.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2735.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2736.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2737.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2738.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2739.tfrecords"
            string_val: "topology/tfrecords/train_2ms/273.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2740.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2742.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2743.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2744.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2745.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2746.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2748.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2749.tfrecords"
            string_val: "topology/tfrecords/train_2ms/274.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2750.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2751.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2752.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2753.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2755.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2756.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2757.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2759.tfrecords"
            string_val: "topology/tfrecords/train_2ms/275.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2760.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2761.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2762.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2765.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2767.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2768.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2769.tfrecords"
            string_val: "topology/tfrecords/train_2ms/276.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2770.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2771.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2772.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2773.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2774.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2775.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2776.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2777.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2778.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2779.tfrecords"
            string_val: "topology/tfrecords/train_2ms/277.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2780.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2781.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2783.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2784.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2786.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2787.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2788.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2789.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2791.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2792.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2793.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2794.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2795.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2796.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2797.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2798.tfrecords"
            string_val: "topology/tfrecords/train_2ms/279.tfrecords"
            string_val: "topology/tfrecords/train_2ms/27.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2801.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2802.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2804.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2805.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2806.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2807.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2809.tfrecords"
            string_val: "topology/tfrecords/train_2ms/280.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2810.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2812.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2813.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2814.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2815.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2816.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2817.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2818.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2819.tfrecords"
            string_val: "topology/tfrecords/train_2ms/281.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2820.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2821.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2822.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2823.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2824.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2825.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2826.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2827.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2828.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2829.tfrecords"
            string_val: "topology/tfrecords/train_2ms/282.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2830.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2832.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2833.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2834.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2835.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2836.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2837.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2838.tfrecords"
            string_val: "topology/tfrecords/train_2ms/283.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2840.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2841.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2843.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2844.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2845.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2846.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2847.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2848.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2849.tfrecords"
            string_val: "topology/tfrecords/train_2ms/284.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2850.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2851.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2852.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2854.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2855.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2856.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2857.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2858.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2859.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2860.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2861.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2862.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2863.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2868.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2869.tfrecords"
            string_val: "topology/tfrecords/train_2ms/286.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2870.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2872.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2874.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2875.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2876.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2877.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2878.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2879.tfrecords"
            string_val: "topology/tfrecords/train_2ms/287.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2881.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2882.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2883.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2884.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2885.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2886.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2887.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2888.tfrecords"
            string_val: "topology/tfrecords/train_2ms/288.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2890.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2891.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2892.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2893.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2894.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2896.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2898.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2899.tfrecords"
            string_val: "topology/tfrecords/train_2ms/28.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2901.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2902.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2903.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2904.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2905.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2906.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2907.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2908.tfrecords"
            string_val: "topology/tfrecords/train_2ms/290.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2910.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2912.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2913.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2916.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2918.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2919.tfrecords"
            string_val: "topology/tfrecords/train_2ms/291.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2922.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2924.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2925.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2926.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2927.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2928.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2929.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2931.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2932.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2933.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2936.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2937.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2938.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2939.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2940.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2941.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2942.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2943.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2944.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2946.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2947.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2948.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2949.tfrecords"
            string_val: "topology/tfrecords/train_2ms/294.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2950.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2951.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2952.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2954.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2955.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2956.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2957.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2959.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2961.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2962.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2963.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2964.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2965.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2966.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2968.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2969.tfrecords"
            string_val: "topology/tfrecords/train_2ms/296.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2970.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2971.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2974.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2976.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2978.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2979.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2980.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2981.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2983.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2984.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2986.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2987.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2988.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2989.tfrecords"
            string_val: "topology/tfrecords/train_2ms/298.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2990.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2991.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2993.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2994.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2995.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2996.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2997.tfrecords"
            string_val: "topology/tfrecords/train_2ms/2998.tfrecords"
            string_val: "topology/tfrecords/train_2ms/299.tfrecords"
            string_val: "topology/tfrecords/train_2ms/29.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3000.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3001.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3002.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3004.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3005.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3007.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3008.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3009.tfrecords"
            string_val: "topology/tfrecords/train_2ms/300.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3010.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3011.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3012.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3013.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3015.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3017.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3018.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3019.tfrecords"
            string_val: "topology/tfrecords/train_2ms/301.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3021.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3022.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3024.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3025.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3027.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3028.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3029.tfrecords"
            string_val: "topology/tfrecords/train_2ms/302.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3030.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3031.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3032.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3033.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3034.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3035.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3036.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3037.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3038.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3039.tfrecords"
            string_val: "topology/tfrecords/train_2ms/303.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3040.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3041.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3042.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3043.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3044.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3045.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3046.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3047.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3048.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3049.tfrecords"
            string_val: "topology/tfrecords/train_2ms/304.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3050.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3051.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3052.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3053.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3054.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3055.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3056.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3058.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3059.tfrecords"
            string_val: "topology/tfrecords/train_2ms/305.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3061.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3062.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3063.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3064.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3065.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3066.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3067.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3068.tfrecords"
            string_val: "topology/tfrecords/train_2ms/306.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3071.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3072.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3073.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3075.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3076.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3077.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3079.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3080.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3081.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3082.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3083.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3085.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3086.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3087.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3088.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3089.tfrecords"
            string_val: "topology/tfrecords/train_2ms/308.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3090.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3091.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3093.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3097.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3099.tfrecords"
            string_val: "topology/tfrecords/train_2ms/309.tfrecords"
            string_val: "topology/tfrecords/train_2ms/30.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3100.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3101.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3102.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3103.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3104.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3105.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3107.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3108.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3109.tfrecords"
            string_val: "topology/tfrecords/train_2ms/310.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3110.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3113.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3114.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3115.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3116.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3118.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3119.tfrecords"
            string_val: "topology/tfrecords/train_2ms/311.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3120.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3122.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3123.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3124.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3125.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3126.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3127.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3128.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3129.tfrecords"
            string_val: "topology/tfrecords/train_2ms/312.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3130.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3132.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3133.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3134.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3136.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3137.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3139.tfrecords"
            string_val: "topology/tfrecords/train_2ms/313.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3140.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3142.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3143.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3144.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3145.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3147.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3148.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3149.tfrecords"
            string_val: "topology/tfrecords/train_2ms/314.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3150.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3151.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3152.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3153.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3154.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3155.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3156.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3158.tfrecords"
            string_val: "topology/tfrecords/train_2ms/315.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3160.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3161.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3162.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3163.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3164.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3166.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3167.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3168.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3169.tfrecords"
            string_val: "topology/tfrecords/train_2ms/316.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3170.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3171.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3172.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3173.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3174.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3175.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3176.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3177.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3178.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3179.tfrecords"
            string_val: "topology/tfrecords/train_2ms/317.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3180.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3181.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3182.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3183.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3184.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3185.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3187.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3188.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3189.tfrecords"
            string_val: "topology/tfrecords/train_2ms/318.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3190.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3191.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3192.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3193.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3194.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3196.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3197.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3198.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3199.tfrecords"
            string_val: "topology/tfrecords/train_2ms/319.tfrecords"
            string_val: "topology/tfrecords/train_2ms/31.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3200.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3201.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3202.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3203.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3205.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3207.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3208.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3209.tfrecords"
            string_val: "topology/tfrecords/train_2ms/320.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3210.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3211.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3212.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3213.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3215.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3217.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3218.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3219.tfrecords"
            string_val: "topology/tfrecords/train_2ms/321.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3220.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3221.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3223.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3224.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3225.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3227.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3228.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3229.tfrecords"
            string_val: "topology/tfrecords/train_2ms/322.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3230.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3231.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3232.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3233.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3234.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3235.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3236.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3237.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3238.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3239.tfrecords"
            string_val: "topology/tfrecords/train_2ms/323.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3241.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3242.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3244.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3245.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3246.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3248.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3249.tfrecords"
            string_val: "topology/tfrecords/train_2ms/324.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3250.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3251.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3254.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3255.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3256.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3258.tfrecords"
            string_val: "topology/tfrecords/train_2ms/325.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3260.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3261.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3262.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3264.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3265.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3266.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3268.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3269.tfrecords"
            string_val: "topology/tfrecords/train_2ms/326.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3271.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3272.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3273.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3274.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3278.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3279.tfrecords"
            string_val: "topology/tfrecords/train_2ms/327.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3281.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3284.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3285.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3286.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3287.tfrecords"
            string_val: "topology/tfrecords/train_2ms/328.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3290.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3291.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3292.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3293.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3294.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3295.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3296.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3298.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3299.tfrecords"
            string_val: "topology/tfrecords/train_2ms/329.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3301.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3302.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3303.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3304.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3305.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3306.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3307.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3308.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3309.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3310.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3311.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3312.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3313.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3315.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3316.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3317.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3318.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3319.tfrecords"
            string_val: "topology/tfrecords/train_2ms/331.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3321.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3322.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3324.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3326.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3327.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3329.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3330.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3331.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3332.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3333.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3334.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3335.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3337.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3338.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3339.tfrecords"
            string_val: "topology/tfrecords/train_2ms/333.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3341.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3342.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3344.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3345.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3347.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3348.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3349.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3350.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3353.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3354.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3355.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3356.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3357.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3358.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3359.tfrecords"
            string_val: "topology/tfrecords/train_2ms/335.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3360.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3361.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3362.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3363.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3366.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3367.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3368.tfrecords"
            string_val: "topology/tfrecords/train_2ms/336.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3370.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3371.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3372.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3373.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3374.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3375.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3378.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3380.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3382.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3383.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3384.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3386.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3387.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3388.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3389.tfrecords"
            string_val: "topology/tfrecords/train_2ms/338.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3390.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3391.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3392.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3393.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3395.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3397.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3398.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3399.tfrecords"
            string_val: "topology/tfrecords/train_2ms/339.tfrecords"
            string_val: "topology/tfrecords/train_2ms/33.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3402.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3404.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3405.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3406.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3407.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3409.tfrecords"
            string_val: "topology/tfrecords/train_2ms/340.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3410.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3411.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3412.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3414.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3416.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3417.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3418.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3419.tfrecords"
            string_val: "topology/tfrecords/train_2ms/341.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3420.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3421.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3422.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3423.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3424.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3425.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3426.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3427.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3428.tfrecords"
            string_val: "topology/tfrecords/train_2ms/342.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3430.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3431.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3432.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3434.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3435.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3436.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3437.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3439.tfrecords"
            string_val: "topology/tfrecords/train_2ms/343.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3440.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3441.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3442.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3443.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3444.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3445.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3446.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3447.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3448.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3449.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3450.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3451.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3452.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3454.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3455.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3456.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3457.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3458.tfrecords"
            string_val: "topology/tfrecords/train_2ms/345.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3460.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3461.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3462.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3463.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3465.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3466.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3468.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3469.tfrecords"
            string_val: "topology/tfrecords/train_2ms/346.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3470.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3471.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3472.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3473.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3475.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3476.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3477.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3479.tfrecords"
            string_val: "topology/tfrecords/train_2ms/347.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3480.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3481.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3482.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3483.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3484.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3485.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3486.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3487.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3488.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3489.tfrecords"
            string_val: "topology/tfrecords/train_2ms/348.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3490.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3491.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3492.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3493.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3494.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3495.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3496.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3497.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3498.tfrecords"
            string_val: "topology/tfrecords/train_2ms/349.tfrecords"
            string_val: "topology/tfrecords/train_2ms/34.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3500.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3501.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3502.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3504.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3506.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3509.tfrecords"
            string_val: "topology/tfrecords/train_2ms/350.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3511.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3512.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3513.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3515.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3516.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3518.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3520.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3521.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3522.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3523.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3524.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3525.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3526.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3528.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3529.tfrecords"
            string_val: "topology/tfrecords/train_2ms/352.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3532.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3533.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3534.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3535.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3537.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3538.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3539.tfrecords"
            string_val: "topology/tfrecords/train_2ms/353.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3540.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3541.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3542.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3543.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3544.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3545.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3546.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3547.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3548.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3549.tfrecords"
            string_val: "topology/tfrecords/train_2ms/354.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3550.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3551.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3552.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3553.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3555.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3556.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3557.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3558.tfrecords"
            string_val: "topology/tfrecords/train_2ms/355.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3560.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3561.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3563.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3564.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3565.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3566.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3567.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3568.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3569.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3570.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3571.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3572.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3575.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3576.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3578.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3579.tfrecords"
            string_val: "topology/tfrecords/train_2ms/357.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3580.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3582.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3583.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3584.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3585.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3586.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3587.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3589.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3590.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3591.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3592.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3593.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3594.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3595.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3596.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3597.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3598.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3599.tfrecords"
            string_val: "topology/tfrecords/train_2ms/359.tfrecords"
            string_val: "topology/tfrecords/train_2ms/35.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3601.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3603.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3604.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3605.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3609.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3613.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3614.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3615.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3617.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3618.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3619.tfrecords"
            string_val: "topology/tfrecords/train_2ms/361.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3620.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3621.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3622.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3623.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3624.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3625.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3626.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3628.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3629.tfrecords"
            string_val: "topology/tfrecords/train_2ms/362.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3630.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3631.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3632.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3633.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3634.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3635.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3636.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3638.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3639.tfrecords"
            string_val: "topology/tfrecords/train_2ms/363.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3640.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3641.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3642.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3643.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3644.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3645.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3647.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3649.tfrecords"
            string_val: "topology/tfrecords/train_2ms/364.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3650.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3651.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3652.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3653.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3654.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3655.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3656.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3657.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3658.tfrecords"
            string_val: "topology/tfrecords/train_2ms/365.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3661.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3662.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3663.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3665.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3666.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3667.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3668.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3669.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3670.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3671.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3672.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3673.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3675.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3676.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3678.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3679.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3680.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3681.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3682.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3683.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3685.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3686.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3687.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3688.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3689.tfrecords"
            string_val: "topology/tfrecords/train_2ms/368.tfrecords"
            string_val: "topology/tfrecords/train_2ms/369.tfrecords"
            string_val: "topology/tfrecords/train_2ms/36.tfrecords"
            string_val: "topology/tfrecords/train_2ms/371.tfrecords"
            string_val: "topology/tfrecords/train_2ms/372.tfrecords"
            string_val: "topology/tfrecords/train_2ms/373.tfrecords"
            string_val: "topology/tfrecords/train_2ms/374.tfrecords"
            string_val: "topology/tfrecords/train_2ms/375.tfrecords"
            string_val: "topology/tfrecords/train_2ms/376.tfrecords"
            string_val: "topology/tfrecords/train_2ms/378.tfrecords"
            string_val: "topology/tfrecords/train_2ms/379.tfrecords"
            string_val: "topology/tfrecords/train_2ms/37.tfrecords"
            string_val: "topology/tfrecords/train_2ms/380.tfrecords"
            string_val: "topology/tfrecords/train_2ms/381.tfrecords"
            string_val: "topology/tfrecords/train_2ms/385.tfrecords"
            string_val: "topology/tfrecords/train_2ms/386.tfrecords"
            string_val: "topology/tfrecords/train_2ms/387.tfrecords"
            string_val: "topology/tfrecords/train_2ms/388.tfrecords"
            string_val: "topology/tfrecords/train_2ms/389.tfrecords"
            string_val: "topology/tfrecords/train_2ms/38.tfrecords"
            string_val: "topology/tfrecords/train_2ms/391.tfrecords"
            string_val: "topology/tfrecords/train_2ms/395.tfrecords"
            string_val: "topology/tfrecords/train_2ms/396.tfrecords"
            string_val: "topology/tfrecords/train_2ms/397.tfrecords"
            string_val: "topology/tfrecords/train_2ms/398.tfrecords"
            string_val: "topology/tfrecords/train_2ms/39.tfrecords"
            string_val: "topology/tfrecords/train_2ms/3.tfrecords"
            string_val: "topology/tfrecords/train_2ms/400.tfrecords"
            string_val: "topology/tfrecords/train_2ms/401.tfrecords"
            string_val: "topology/tfrecords/train_2ms/403.tfrecords"
            string_val: "topology/tfrecords/train_2ms/405.tfrecords"
            string_val: "topology/tfrecords/train_2ms/406.tfrecords"
            string_val: "topology/tfrecords/train_2ms/407.tfrecords"
            string_val: "topology/tfrecords/train_2ms/409.tfrecords"
            string_val: "topology/tfrecords/train_2ms/40.tfrecords"
            string_val: "topology/tfrecords/train_2ms/410.tfrecords"
            string_val: "topology/tfrecords/train_2ms/411.tfrecords"
            string_val: "topology/tfrecords/train_2ms/412.tfrecords"
            string_val: "topology/tfrecords/train_2ms/414.tfrecords"
            string_val: "topology/tfrecords/train_2ms/415.tfrecords"
            string_val: "topology/tfrecords/train_2ms/417.tfrecords"
            string_val: "topology/tfrecords/train_2ms/419.tfrecords"
            string_val: "topology/tfrecords/train_2ms/421.tfrecords"
            string_val: "topology/tfrecords/train_2ms/422.tfrecords"
            string_val: "topology/tfrecords/train_2ms/423.tfrecords"
            string_val: "topology/tfrecords/train_2ms/424.tfrecords"
            string_val: "topology/tfrecords/train_2ms/425.tfrecords"
            string_val: "topology/tfrecords/train_2ms/426.tfrecords"
            string_val: "topology/tfrecords/train_2ms/427.tfrecords"
            string_val: "topology/tfrecords/train_2ms/428.tfrecords"
            string_val: "topology/tfrecords/train_2ms/42.tfrecords"
            string_val: "topology/tfrecords/train_2ms/430.tfrecords"
            string_val: "topology/tfrecords/train_2ms/431.tfrecords"
            string_val: "topology/tfrecords/train_2ms/432.tfrecords"
            string_val: "topology/tfrecords/train_2ms/435.tfrecords"
            string_val: "topology/tfrecords/train_2ms/438.tfrecords"
            string_val: "topology/tfrecords/train_2ms/440.tfrecords"
            string_val: "topology/tfrecords/train_2ms/441.tfrecords"
            string_val: "topology/tfrecords/train_2ms/442.tfrecords"
            string_val: "topology/tfrecords/train_2ms/443.tfrecords"
            string_val: "topology/tfrecords/train_2ms/444.tfrecords"
            string_val: "topology/tfrecords/train_2ms/445.tfrecords"
            string_val: "topology/tfrecords/train_2ms/447.tfrecords"
            string_val: "topology/tfrecords/train_2ms/448.tfrecords"
            string_val: "topology/tfrecords/train_2ms/449.tfrecords"
            string_val: "topology/tfrecords/train_2ms/44.tfrecords"
            string_val: "topology/tfrecords/train_2ms/450.tfrecords"
            string_val: "topology/tfrecords/train_2ms/451.tfrecords"
            string_val: "topology/tfrecords/train_2ms/452.tfrecords"
            string_val: "topology/tfrecords/train_2ms/453.tfrecords"
            string_val: "topology/tfrecords/train_2ms/454.tfrecords"
            string_val: "topology/tfrecords/train_2ms/455.tfrecords"
            string_val: "topology/tfrecords/train_2ms/456.tfrecords"
            string_val: "topology/tfrecords/train_2ms/457.tfrecords"
            string_val: "topology/tfrecords/train_2ms/459.tfrecords"
            string_val: "topology/tfrecords/train_2ms/45.tfrecords"
            string_val: "topology/tfrecords/train_2ms/460.tfrecords"
            string_val: "topology/tfrecords/train_2ms/461.tfrecords"
            string_val: "topology/tfrecords/train_2ms/462.tfrecords"
            string_val: "topology/tfrecords/train_2ms/463.tfrecords"
            string_val: "topology/tfrecords/train_2ms/464.tfrecords"
            string_val: "topology/tfrecords/train_2ms/465.tfrecords"
            string_val: "topology/tfrecords/train_2ms/467.tfrecords"
            string_val: "topology/tfrecords/train_2ms/468.tfrecords"
            string_val: "topology/tfrecords/train_2ms/470.tfrecords"
            string_val: "topology/tfrecords/train_2ms/471.tfrecords"
            string_val: "topology/tfrecords/train_2ms/473.tfrecords"
            string_val: "topology/tfrecords/train_2ms/474.tfrecords"
            string_val: "topology/tfrecords/train_2ms/475.tfrecords"
            string_val: "topology/tfrecords/train_2ms/476.tfrecords"
            string_val: "topology/tfrecords/train_2ms/477.tfrecords"
            string_val: "topology/tfrecords/train_2ms/478.tfrecords"
            string_val: "topology/tfrecords/train_2ms/479.tfrecords"
            string_val: "topology/tfrecords/train_2ms/47.tfrecords"
            string_val: "topology/tfrecords/train_2ms/481.tfrecords"
            string_val: "topology/tfrecords/train_2ms/482.tfrecords"
            string_val: "topology/tfrecords/train_2ms/483.tfrecords"
            string_val: "topology/tfrecords/train_2ms/484.tfrecords"
            string_val: "topology/tfrecords/train_2ms/485.tfrecords"
            string_val: "topology/tfrecords/train_2ms/486.tfrecords"
            string_val: "topology/tfrecords/train_2ms/487.tfrecords"
            string_val: "topology/tfrecords/train_2ms/488.tfrecords"
            string_val: "topology/tfrecords/train_2ms/489.tfrecords"
            string_val: "topology/tfrecords/train_2ms/48.tfrecords"
            string_val: "topology/tfrecords/train_2ms/490.tfrecords"
            string_val: "topology/tfrecords/train_2ms/491.tfrecords"
            string_val: "topology/tfrecords/train_2ms/492.tfrecords"
            string_val: "topology/tfrecords/train_2ms/494.tfrecords"
            string_val: "topology/tfrecords/train_2ms/495.tfrecords"
            string_val: "topology/tfrecords/train_2ms/496.tfrecords"
            string_val: "topology/tfrecords/train_2ms/497.tfrecords"
            string_val: "topology/tfrecords/train_2ms/498.tfrecords"
            string_val: "topology/tfrecords/train_2ms/49.tfrecords"
            string_val: "topology/tfrecords/train_2ms/500.tfrecords"
            string_val: "topology/tfrecords/train_2ms/502.tfrecords"
            string_val: "topology/tfrecords/train_2ms/503.tfrecords"
            string_val: "topology/tfrecords/train_2ms/504.tfrecords"
            string_val: "topology/tfrecords/train_2ms/505.tfrecords"
            string_val: "topology/tfrecords/train_2ms/506.tfrecords"
            string_val: "topology/tfrecords/train_2ms/508.tfrecords"
            string_val: "topology/tfrecords/train_2ms/50.tfrecords"
            string_val: "topology/tfrecords/train_2ms/510.tfrecords"
            string_val: "topology/tfrecords/train_2ms/511.tfrecords"
            string_val: "topology/tfrecords/train_2ms/512.tfrecords"
            string_val: "topology/tfrecords/train_2ms/515.tfrecords"
            string_val: "topology/tfrecords/train_2ms/516.tfrecords"
            string_val: "topology/tfrecords/train_2ms/517.tfrecords"
            string_val: "topology/tfrecords/train_2ms/518.tfrecords"
            string_val: "topology/tfrecords/train_2ms/519.tfrecords"
            string_val: "topology/tfrecords/train_2ms/51.tfrecords"
            string_val: "topology/tfrecords/train_2ms/521.tfrecords"
            string_val: "topology/tfrecords/train_2ms/522.tfrecords"
            string_val: "topology/tfrecords/train_2ms/523.tfrecords"
            string_val: "topology/tfrecords/train_2ms/524.tfrecords"
            string_val: "topology/tfrecords/train_2ms/526.tfrecords"
            string_val: "topology/tfrecords/train_2ms/527.tfrecords"
            string_val: "topology/tfrecords/train_2ms/528.tfrecords"
            string_val: "topology/tfrecords/train_2ms/533.tfrecords"
            string_val: "topology/tfrecords/train_2ms/534.tfrecords"
            string_val: "topology/tfrecords/train_2ms/535.tfrecords"
            string_val: "topology/tfrecords/train_2ms/536.tfrecords"
            string_val: "topology/tfrecords/train_2ms/537.tfrecords"
            string_val: "topology/tfrecords/train_2ms/538.tfrecords"
            string_val: "topology/tfrecords/train_2ms/539.tfrecords"
            string_val: "topology/tfrecords/train_2ms/540.tfrecords"
            string_val: "topology/tfrecords/train_2ms/541.tfrecords"
            string_val: "topology/tfrecords/train_2ms/542.tfrecords"
            string_val: "topology/tfrecords/train_2ms/543.tfrecords"
            string_val: "topology/tfrecords/train_2ms/544.tfrecords"
            string_val: "topology/tfrecords/train_2ms/545.tfrecords"
            string_val: "topology/tfrecords/train_2ms/546.tfrecords"
            string_val: "topology/tfrecords/train_2ms/547.tfrecords"
            string_val: "topology/tfrecords/train_2ms/549.tfrecords"
            string_val: "topology/tfrecords/train_2ms/54.tfrecords"
            string_val: "topology/tfrecords/train_2ms/550.tfrecords"
            string_val: "topology/tfrecords/train_2ms/552.tfrecords"
            string_val: "topology/tfrecords/train_2ms/553.tfrecords"
            string_val: "topology/tfrecords/train_2ms/556.tfrecords"
            string_val: "topology/tfrecords/train_2ms/558.tfrecords"
            string_val: "topology/tfrecords/train_2ms/559.tfrecords"
            string_val: "topology/tfrecords/train_2ms/55.tfrecords"
            string_val: "topology/tfrecords/train_2ms/561.tfrecords"
            string_val: "topology/tfrecords/train_2ms/562.tfrecords"
            string_val: "topology/tfrecords/train_2ms/563.tfrecords"
            string_val: "topology/tfrecords/train_2ms/564.tfrecords"
            string_val: "topology/tfrecords/train_2ms/565.tfrecords"
            string_val: "topology/tfrecords/train_2ms/566.tfrecords"
            string_val: "topology/tfrecords/train_2ms/568.tfrecords"
            string_val: "topology/tfrecords/train_2ms/569.tfrecords"
            string_val: "topology/tfrecords/train_2ms/56.tfrecords"
            string_val: "topology/tfrecords/train_2ms/570.tfrecords"
            string_val: "topology/tfrecords/train_2ms/571.tfrecords"
            string_val: "topology/tfrecords/train_2ms/572.tfrecords"
            string_val: "topology/tfrecords/train_2ms/574.tfrecords"
            string_val: "topology/tfrecords/train_2ms/576.tfrecords"
            string_val: "topology/tfrecords/train_2ms/578.tfrecords"
            string_val: "topology/tfrecords/train_2ms/57.tfrecords"
            string_val: "topology/tfrecords/train_2ms/580.tfrecords"
            string_val: "topology/tfrecords/train_2ms/581.tfrecords"
            string_val: "topology/tfrecords/train_2ms/582.tfrecords"
            string_val: "topology/tfrecords/train_2ms/583.tfrecords"
            string_val: "topology/tfrecords/train_2ms/584.tfrecords"
            string_val: "topology/tfrecords/train_2ms/586.tfrecords"
            string_val: "topology/tfrecords/train_2ms/587.tfrecords"
            string_val: "topology/tfrecords/train_2ms/588.tfrecords"
            string_val: "topology/tfrecords/train_2ms/589.tfrecords"
            string_val: "topology/tfrecords/train_2ms/58.tfrecords"
            string_val: "topology/tfrecords/train_2ms/590.tfrecords"
            string_val: "topology/tfrecords/train_2ms/591.tfrecords"
            string_val: "topology/tfrecords/train_2ms/592.tfrecords"
            string_val: "topology/tfrecords/train_2ms/593.tfrecords"
            string_val: "topology/tfrecords/train_2ms/594.tfrecords"
            string_val: "topology/tfrecords/train_2ms/595.tfrecords"
            string_val: "topology/tfrecords/train_2ms/596.tfrecords"
            string_val: "topology/tfrecords/train_2ms/597.tfrecords"
            string_val: "topology/tfrecords/train_2ms/598.tfrecords"
            string_val: "topology/tfrecords/train_2ms/599.tfrecords"
            string_val: "topology/tfrecords/train_2ms/59.tfrecords"
            string_val: "topology/tfrecords/train_2ms/5.tfrecords"
            string_val: "topology/tfrecords/train_2ms/600.tfrecords"
            string_val: "topology/tfrecords/train_2ms/602.tfrecords"
            string_val: "topology/tfrecords/train_2ms/603.tfrecords"
            string_val: "topology/tfrecords/train_2ms/604.tfrecords"
            string_val: "topology/tfrecords/train_2ms/605.tfrecords"
            string_val: "topology/tfrecords/train_2ms/606.tfrecords"
            string_val: "topology/tfrecords/train_2ms/607.tfrecords"
            string_val: "topology/tfrecords/train_2ms/608.tfrecords"
            string_val: "topology/tfrecords/train_2ms/609.tfrecords"
            string_val: "topology/tfrecords/train_2ms/60.tfrecords"
            string_val: "topology/tfrecords/train_2ms/610.tfrecords"
            string_val: "topology/tfrecords/train_2ms/611.tfrecords"
            string_val: "topology/tfrecords/train_2ms/612.tfrecords"
            string_val: "topology/tfrecords/train_2ms/613.tfrecords"
            string_val: "topology/tfrecords/train_2ms/614.tfrecords"
            string_val: "topology/tfrecords/train_2ms/615.tfrecords"
            string_val: "topology/tfrecords/train_2ms/618.tfrecords"
            string_val: "topology/tfrecords/train_2ms/619.tfrecords"
            string_val: "topology/tfrecords/train_2ms/61.tfrecords"
            string_val: "topology/tfrecords/train_2ms/620.tfrecords"
            string_val: "topology/tfrecords/train_2ms/621.tfrecords"
            string_val: "topology/tfrecords/train_2ms/623.tfrecords"
            string_val: "topology/tfrecords/train_2ms/624.tfrecords"
            string_val: "topology/tfrecords/train_2ms/625.tfrecords"
            string_val: "topology/tfrecords/train_2ms/626.tfrecords"
            string_val: "topology/tfrecords/train_2ms/627.tfrecords"
            string_val: "topology/tfrecords/train_2ms/628.tfrecords"
            string_val: "topology/tfrecords/train_2ms/629.tfrecords"
            string_val: "topology/tfrecords/train_2ms/630.tfrecords"
            string_val: "topology/tfrecords/train_2ms/631.tfrecords"
            string_val: "topology/tfrecords/train_2ms/632.tfrecords"
            string_val: "topology/tfrecords/train_2ms/633.tfrecords"
            string_val: "topology/tfrecords/train_2ms/634.tfrecords"
            string_val: "topology/tfrecords/train_2ms/635.tfrecords"
            string_val: "topology/tfrecords/train_2ms/638.tfrecords"
            string_val: "topology/tfrecords/train_2ms/639.tfrecords"
            string_val: "topology/tfrecords/train_2ms/63.tfrecords"
            string_val: "topology/tfrecords/train_2ms/640.tfrecords"
            string_val: "topology/tfrecords/train_2ms/642.tfrecords"
            string_val: "topology/tfrecords/train_2ms/643.tfrecords"
            string_val: "topology/tfrecords/train_2ms/644.tfrecords"
            string_val: "topology/tfrecords/train_2ms/646.tfrecords"
            string_val: "topology/tfrecords/train_2ms/647.tfrecords"
            string_val: "topology/tfrecords/train_2ms/648.tfrecords"
            string_val: "topology/tfrecords/train_2ms/64.tfrecords"
            string_val: "topology/tfrecords/train_2ms/650.tfrecords"
            string_val: "topology/tfrecords/train_2ms/651.tfrecords"
            string_val: "topology/tfrecords/train_2ms/652.tfrecords"
            string_val: "topology/tfrecords/train_2ms/653.tfrecords"
            string_val: "topology/tfrecords/train_2ms/654.tfrecords"
            string_val: "topology/tfrecords/train_2ms/657.tfrecords"
            string_val: "topology/tfrecords/train_2ms/658.tfrecords"
            string_val: "topology/tfrecords/train_2ms/65.tfrecords"
            string_val: "topology/tfrecords/train_2ms/661.tfrecords"
            string_val: "topology/tfrecords/train_2ms/663.tfrecords"
            string_val: "topology/tfrecords/train_2ms/665.tfrecords"
            string_val: "topology/tfrecords/train_2ms/666.tfrecords"
            string_val: "topology/tfrecords/train_2ms/667.tfrecords"
            string_val: "topology/tfrecords/train_2ms/668.tfrecords"
            string_val: "topology/tfrecords/train_2ms/669.tfrecords"
            string_val: "topology/tfrecords/train_2ms/66.tfrecords"
            string_val: "topology/tfrecords/train_2ms/670.tfrecords"
            string_val: "topology/tfrecords/train_2ms/672.tfrecords"
            string_val: "topology/tfrecords/train_2ms/673.tfrecords"
            string_val: "topology/tfrecords/train_2ms/674.tfrecords"
            string_val: "topology/tfrecords/train_2ms/675.tfrecords"
            string_val: "topology/tfrecords/train_2ms/677.tfrecords"
            string_val: "topology/tfrecords/train_2ms/678.tfrecords"
            string_val: "topology/tfrecords/train_2ms/680.tfrecords"
            string_val: "topology/tfrecords/train_2ms/681.tfrecords"
            string_val: "topology/tfrecords/train_2ms/682.tfrecords"
            string_val: "topology/tfrecords/train_2ms/684.tfrecords"
            string_val: "topology/tfrecords/train_2ms/685.tfrecords"
            string_val: "topology/tfrecords/train_2ms/686.tfrecords"
            string_val: "topology/tfrecords/train_2ms/687.tfrecords"
            string_val: "topology/tfrecords/train_2ms/688.tfrecords"
            string_val: "topology/tfrecords/train_2ms/689.tfrecords"
            string_val: "topology/tfrecords/train_2ms/68.tfrecords"
            string_val: "topology/tfrecords/train_2ms/690.tfrecords"
            string_val: "topology/tfrecords/train_2ms/691.tfrecords"
            string_val: "topology/tfrecords/train_2ms/692.tfrecords"
            string_val: "topology/tfrecords/train_2ms/694.tfrecords"
            string_val: "topology/tfrecords/train_2ms/695.tfrecords"
            string_val: "topology/tfrecords/train_2ms/697.tfrecords"
            string_val: "topology/tfrecords/train_2ms/698.tfrecords"
            string_val: "topology/tfrecords/train_2ms/699.tfrecords"
            string_val: "topology/tfrecords/train_2ms/69.tfrecords"
            string_val: "topology/tfrecords/train_2ms/6.tfrecords"
            string_val: "topology/tfrecords/train_2ms/700.tfrecords"
            string_val: "topology/tfrecords/train_2ms/701.tfrecords"
            string_val: "topology/tfrecords/train_2ms/702.tfrecords"
            string_val: "topology/tfrecords/train_2ms/703.tfrecords"
            string_val: "topology/tfrecords/train_2ms/704.tfrecords"
            string_val: "topology/tfrecords/train_2ms/705.tfrecords"
            string_val: "topology/tfrecords/train_2ms/706.tfrecords"
            string_val: "topology/tfrecords/train_2ms/708.tfrecords"
            string_val: "topology/tfrecords/train_2ms/709.tfrecords"
            string_val: "topology/tfrecords/train_2ms/70.tfrecords"
            string_val: "topology/tfrecords/train_2ms/711.tfrecords"
            string_val: "topology/tfrecords/train_2ms/712.tfrecords"
            string_val: "topology/tfrecords/train_2ms/713.tfrecords"
            string_val: "topology/tfrecords/train_2ms/714.tfrecords"
            string_val: "topology/tfrecords/train_2ms/715.tfrecords"
            string_val: "topology/tfrecords/train_2ms/716.tfrecords"
            string_val: "topology/tfrecords/train_2ms/717.tfrecords"
            string_val: "topology/tfrecords/train_2ms/718.tfrecords"
            string_val: "topology/tfrecords/train_2ms/719.tfrecords"
            string_val: "topology/tfrecords/train_2ms/71.tfrecords"
            string_val: "topology/tfrecords/train_2ms/721.tfrecords"
            string_val: "topology/tfrecords/train_2ms/723.tfrecords"
            string_val: "topology/tfrecords/train_2ms/724.tfrecords"
            string_val: "topology/tfrecords/train_2ms/725.tfrecords"
            string_val: "topology/tfrecords/train_2ms/726.tfrecords"
            string_val: "topology/tfrecords/train_2ms/728.tfrecords"
            string_val: "topology/tfrecords/train_2ms/729.tfrecords"
            string_val: "topology/tfrecords/train_2ms/72.tfrecords"
            string_val: "topology/tfrecords/train_2ms/731.tfrecords"
            string_val: "topology/tfrecords/train_2ms/732.tfrecords"
            string_val: "topology/tfrecords/train_2ms/733.tfrecords"
            string_val: "topology/tfrecords/train_2ms/734.tfrecords"
            string_val: "topology/tfrecords/train_2ms/735.tfrecords"
            string_val: "topology/tfrecords/train_2ms/736.tfrecords"
            string_val: "topology/tfrecords/train_2ms/737.tfrecords"
            string_val: "topology/tfrecords/train_2ms/738.tfrecords"
            string_val: "topology/tfrecords/train_2ms/739.tfrecords"
            string_val: "topology/tfrecords/train_2ms/73.tfrecords"
            string_val: "topology/tfrecords/train_2ms/740.tfrecords"
            string_val: "topology/tfrecords/train_2ms/742.tfrecords"
            string_val: "topology/tfrecords/train_2ms/744.tfrecords"
            string_val: "topology/tfrecords/train_2ms/745.tfrecords"
            string_val: "topology/tfrecords/train_2ms/746.tfrecords"
            string_val: "topology/tfrecords/train_2ms/748.tfrecords"
            string_val: "topology/tfrecords/train_2ms/74.tfrecords"
            string_val: "topology/tfrecords/train_2ms/750.tfrecords"
            string_val: "topology/tfrecords/train_2ms/751.tfrecords"
            string_val: "topology/tfrecords/train_2ms/752.tfrecords"
            string_val: "topology/tfrecords/train_2ms/754.tfrecords"
            string_val: "topology/tfrecords/train_2ms/756.tfrecords"
            string_val: "topology/tfrecords/train_2ms/757.tfrecords"
            string_val: "topology/tfrecords/train_2ms/758.tfrecords"
            string_val: "topology/tfrecords/train_2ms/759.tfrecords"
            string_val: "topology/tfrecords/train_2ms/75.tfrecords"
            string_val: "topology/tfrecords/train_2ms/760.tfrecords"
            string_val: "topology/tfrecords/train_2ms/761.tfrecords"
            string_val: "topology/tfrecords/train_2ms/763.tfrecords"
            string_val: "topology/tfrecords/train_2ms/767.tfrecords"
            string_val: "topology/tfrecords/train_2ms/768.tfrecords"
            string_val: "topology/tfrecords/train_2ms/769.tfrecords"
            string_val: "topology/tfrecords/train_2ms/76.tfrecords"
            string_val: "topology/tfrecords/train_2ms/771.tfrecords"
            string_val: "topology/tfrecords/train_2ms/772.tfrecords"
            string_val: "topology/tfrecords/train_2ms/774.tfrecords"
            string_val: "topology/tfrecords/train_2ms/775.tfrecords"
            string_val: "topology/tfrecords/train_2ms/776.tfrecords"
            string_val: "topology/tfrecords/train_2ms/777.tfrecords"
            string_val: "topology/tfrecords/train_2ms/778.tfrecords"
            string_val: "topology/tfrecords/train_2ms/779.tfrecords"
            string_val: "topology/tfrecords/train_2ms/77.tfrecords"
            string_val: "topology/tfrecords/train_2ms/780.tfrecords"
            string_val: "topology/tfrecords/train_2ms/781.tfrecords"
            string_val: "topology/tfrecords/train_2ms/783.tfrecords"
            string_val: "topology/tfrecords/train_2ms/785.tfrecords"
            string_val: "topology/tfrecords/train_2ms/786.tfrecords"
            string_val: "topology/tfrecords/train_2ms/787.tfrecords"
            string_val: "topology/tfrecords/train_2ms/788.tfrecords"
            string_val: "topology/tfrecords/train_2ms/789.tfrecords"
            string_val: "topology/tfrecords/train_2ms/78.tfrecords"
            string_val: "topology/tfrecords/train_2ms/790.tfrecords"
            string_val: "topology/tfrecords/train_2ms/792.tfrecords"
            string_val: "topology/tfrecords/train_2ms/794.tfrecords"
            string_val: "topology/tfrecords/train_2ms/795.tfrecords"
            string_val: "topology/tfrecords/train_2ms/796.tfrecords"
            string_val: "topology/tfrecords/train_2ms/797.tfrecords"
            string_val: "topology/tfrecords/train_2ms/798.tfrecords"
            string_val: "topology/tfrecords/train_2ms/799.tfrecords"
            string_val: "topology/tfrecords/train_2ms/79.tfrecords"
            string_val: "topology/tfrecords/train_2ms/7.tfrecords"
            string_val: "topology/tfrecords/train_2ms/800.tfrecords"
            string_val: "topology/tfrecords/train_2ms/801.tfrecords"
            string_val: "topology/tfrecords/train_2ms/802.tfrecords"
            string_val: "topology/tfrecords/train_2ms/804.tfrecords"
            string_val: "topology/tfrecords/train_2ms/805.tfrecords"
            string_val: "topology/tfrecords/train_2ms/806.tfrecords"
            string_val: "topology/tfrecords/train_2ms/807.tfrecords"
            string_val: "topology/tfrecords/train_2ms/808.tfrecords"
            string_val: "topology/tfrecords/train_2ms/809.tfrecords"
            string_val: "topology/tfrecords/train_2ms/811.tfrecords"
            string_val: "topology/tfrecords/train_2ms/812.tfrecords"
            string_val: "topology/tfrecords/train_2ms/813.tfrecords"
            string_val: "topology/tfrecords/train_2ms/814.tfrecords"
            string_val: "topology/tfrecords/train_2ms/815.tfrecords"
            string_val: "topology/tfrecords/train_2ms/816.tfrecords"
            string_val: "topology/tfrecords/train_2ms/817.tfrecords"
            string_val: "topology/tfrecords/train_2ms/818.tfrecords"
            string_val: "topology/tfrecords/train_2ms/819.tfrecords"
            string_val: "topology/tfrecords/train_2ms/81.tfrecords"
            string_val: "topology/tfrecords/train_2ms/820.tfrecords"
            string_val: "topology/tfrecords/train_2ms/824.tfrecords"
            string_val: "topology/tfrecords/train_2ms/826.tfrecords"
            string_val: "topology/tfrecords/train_2ms/827.tfrecords"
            string_val: "topology/tfrecords/train_2ms/828.tfrecords"
            string_val: "topology/tfrecords/train_2ms/82.tfrecords"
            string_val: "topology/tfrecords/train_2ms/831.tfrecords"
            string_val: "topology/tfrecords/train_2ms/832.tfrecords"
            string_val: "topology/tfrecords/train_2ms/834.tfrecords"
            string_val: "topology/tfrecords/train_2ms/835.tfrecords"
            string_val: "topology/tfrecords/train_2ms/836.tfrecords"
            string_val: "topology/tfrecords/train_2ms/837.tfrecords"
            string_val: "topology/tfrecords/train_2ms/838.tfrecords"
            string_val: "topology/tfrecords/train_2ms/839.tfrecords"
            string_val: "topology/tfrecords/train_2ms/83.tfrecords"
            string_val: "topology/tfrecords/train_2ms/841.tfrecords"
            string_val: "topology/tfrecords/train_2ms/842.tfrecords"
            string_val: "topology/tfrecords/train_2ms/844.tfrecords"
            string_val: "topology/tfrecords/train_2ms/845.tfrecords"
            string_val: "topology/tfrecords/train_2ms/846.tfrecords"
            string_val: "topology/tfrecords/train_2ms/847.tfrecords"
            string_val: "topology/tfrecords/train_2ms/849.tfrecords"
            string_val: "topology/tfrecords/train_2ms/84.tfrecords"
            string_val: "topology/tfrecords/train_2ms/850.tfrecords"
            string_val: "topology/tfrecords/train_2ms/851.tfrecords"
            string_val: "topology/tfrecords/train_2ms/852.tfrecords"
            string_val: "topology/tfrecords/train_2ms/853.tfrecords"
            string_val: "topology/tfrecords/train_2ms/854.tfrecords"
            string_val: "topology/tfrecords/train_2ms/855.tfrecords"
            string_val: "topology/tfrecords/train_2ms/857.tfrecords"
            string_val: "topology/tfrecords/train_2ms/858.tfrecords"
            string_val: "topology/tfrecords/train_2ms/859.tfrecords"
            string_val: "topology/tfrecords/train_2ms/85.tfrecords"
            string_val: "topology/tfrecords/train_2ms/860.tfrecords"
            string_val: "topology/tfrecords/train_2ms/861.tfrecords"
            string_val: "topology/tfrecords/train_2ms/862.tfrecords"
            string_val: "topology/tfrecords/train_2ms/863.tfrecords"
            string_val: "topology/tfrecords/train_2ms/864.tfrecords"
            string_val: "topology/tfrecords/train_2ms/865.tfrecords"
            string_val: "topology/tfrecords/train_2ms/867.tfrecords"
            string_val: "topology/tfrecords/train_2ms/868.tfrecords"
            string_val: "topology/tfrecords/train_2ms/869.tfrecords"
            string_val: "topology/tfrecords/train_2ms/870.tfrecords"
            string_val: "topology/tfrecords/train_2ms/872.tfrecords"
            string_val: "topology/tfrecords/train_2ms/873.tfrecords"
            string_val: "topology/tfrecords/train_2ms/874.tfrecords"
            string_val: "topology/tfrecords/train_2ms/876.tfrecords"
            string_val: "topology/tfrecords/train_2ms/877.tfrecords"
            string_val: "topology/tfrecords/train_2ms/878.tfrecords"
            string_val: "topology/tfrecords/train_2ms/87.tfrecords"
            string_val: "topology/tfrecords/train_2ms/880.tfrecords"
            string_val: "topology/tfrecords/train_2ms/881.tfrecords"
            string_val: "topology/tfrecords/train_2ms/882.tfrecords"
            string_val: "topology/tfrecords/train_2ms/883.tfrecords"
            string_val: "topology/tfrecords/train_2ms/884.tfrecords"
            string_val: "topology/tfrecords/train_2ms/886.tfrecords"
            string_val: "topology/tfrecords/train_2ms/887.tfrecords"
            string_val: "topology/tfrecords/train_2ms/888.tfrecords"
            string_val: "topology/tfrecords/train_2ms/889.tfrecords"
            string_val: "topology/tfrecords/train_2ms/890.tfrecords"
            string_val: "topology/tfrecords/train_2ms/892.tfrecords"
            string_val: "topology/tfrecords/train_2ms/893.tfrecords"
            string_val: "topology/tfrecords/train_2ms/894.tfrecords"
            string_val: "topology/tfrecords/train_2ms/896.tfrecords"
            string_val: "topology/tfrecords/train_2ms/897.tfrecords"
            string_val: "topology/tfrecords/train_2ms/898.tfrecords"
            string_val: "topology/tfrecords/train_2ms/899.tfrecords"
            string_val: "topology/tfrecords/train_2ms/89.tfrecords"
            string_val: "topology/tfrecords/train_2ms/900.tfrecords"
            string_val: "topology/tfrecords/train_2ms/901.tfrecords"
            string_val: "topology/tfrecords/train_2ms/902.tfrecords"
            string_val: "topology/tfrecords/train_2ms/904.tfrecords"
            string_val: "topology/tfrecords/train_2ms/906.tfrecords"
            string_val: "topology/tfrecords/train_2ms/909.tfrecords"
            string_val: "topology/tfrecords/train_2ms/910.tfrecords"
            string_val: "topology/tfrecords/train_2ms/911.tfrecords"
            string_val: "topology/tfrecords/train_2ms/912.tfrecords"
            string_val: "topology/tfrecords/train_2ms/913.tfrecords"
            string_val: "topology/tfrecords/train_2ms/914.tfrecords"
            string_val: "topology/tfrecords/train_2ms/915.tfrecords"
            string_val: "topology/tfrecords/train_2ms/916.tfrecords"
            string_val: "topology/tfrecords/train_2ms/917.tfrecords"
            string_val: "topology/tfrecords/train_2ms/918.tfrecords"
            string_val: "topology/tfrecords/train_2ms/919.tfrecords"
            string_val: "topology/tfrecords/train_2ms/91.tfrecords"
            string_val: "topology/tfrecords/train_2ms/920.tfrecords"
            string_val: "topology/tfrecords/train_2ms/921.tfrecords"
            string_val: "topology/tfrecords/train_2ms/922.tfrecords"
            string_val: "topology/tfrecords/train_2ms/923.tfrecords"
            string_val: "topology/tfrecords/train_2ms/924.tfrecords"
            string_val: "topology/tfrecords/train_2ms/925.tfrecords"
            string_val: "topology/tfrecords/train_2ms/926.tfrecords"
            string_val: "topology/tfrecords/train_2ms/927.tfrecords"
            string_val: "topology/tfrecords/train_2ms/928.tfrecords"
            string_val: "topology/tfrecords/train_2ms/929.tfrecords"
            string_val: "topology/tfrecords/train_2ms/92.tfrecords"
            string_val: "topology/tfrecords/train_2ms/930.tfrecords"
            string_val: "topology/tfrecords/train_2ms/931.tfrecords"
            string_val: "topology/tfrecords/train_2ms/932.tfrecords"
            string_val: "topology/tfrecords/train_2ms/933.tfrecords"
            string_val: "topology/tfrecords/train_2ms/934.tfrecords"
            string_val: "topology/tfrecords/train_2ms/935.tfrecords"
            string_val: "topology/tfrecords/train_2ms/936.tfrecords"
            string_val: "topology/tfrecords/train_2ms/937.tfrecords"
            string_val: "topology/tfrecords/train_2ms/938.tfrecords"
            string_val: "topology/tfrecords/train_2ms/939.tfrecords"
            string_val: "topology/tfrecords/train_2ms/940.tfrecords"
            string_val: "topology/tfrecords/train_2ms/941.tfrecords"
            string_val: "topology/tfrecords/train_2ms/942.tfrecords"
            string_val: "topology/tfrecords/train_2ms/944.tfrecords"
            string_val: "topology/tfrecords/train_2ms/945.tfrecords"
            string_val: "topology/tfrecords/train_2ms/946.tfrecords"
            string_val: "topology/tfrecords/train_2ms/949.tfrecords"
            string_val: "topology/tfrecords/train_2ms/94.tfrecords"
            string_val: "topology/tfrecords/train_2ms/950.tfrecords"
            string_val: "topology/tfrecords/train_2ms/951.tfrecords"
            string_val: "topology/tfrecords/train_2ms/952.tfrecords"
            string_val: "topology/tfrecords/train_2ms/953.tfrecords"
            string_val: "topology/tfrecords/train_2ms/954.tfrecords"
            string_val: "topology/tfrecords/train_2ms/955.tfrecords"
            string_val: "topology/tfrecords/train_2ms/956.tfrecords"
            string_val: "topology/tfrecords/train_2ms/958.tfrecords"
            string_val: "topology/tfrecords/train_2ms/959.tfrecords"
            string_val: "topology/tfrecords/train_2ms/962.tfrecords"
            string_val: "topology/tfrecords/train_2ms/963.tfrecords"
            string_val: "topology/tfrecords/train_2ms/964.tfrecords"
            string_val: "topology/tfrecords/train_2ms/965.tfrecords"
            string_val: "topology/tfrecords/train_2ms/966.tfrecords"
            string_val: "topology/tfrecords/train_2ms/967.tfrecords"
            string_val: "topology/tfrecords/train_2ms/968.tfrecords"
            string_val: "topology/tfrecords/train_2ms/969.tfrecords"
            string_val: "topology/tfrecords/train_2ms/971.tfrecords"
            string_val: "topology/tfrecords/train_2ms/972.tfrecords"
            string_val: "topology/tfrecords/train_2ms/974.tfrecords"
            string_val: "topology/tfrecords/train_2ms/975.tfrecords"
            string_val: "topology/tfrecords/train_2ms/976.tfrecords"
            string_val: "topology/tfrecords/train_2ms/977.tfrecords"
            string_val: "topology/tfrecords/train_2ms/979.tfrecords"
            string_val: "topology/tfrecords/train_2ms/980.tfrecords"
            string_val: "topology/tfrecords/train_2ms/981.tfrecords"
            string_val: "topology/tfrecords/train_2ms/982.tfrecords"
            string_val: "topology/tfrecords/train_2ms/983.tfrecords"
            string_val: "topology/tfrecords/train_2ms/985.tfrecords"
            string_val: "topology/tfrecords/train_2ms/986.tfrecords"
            string_val: "topology/tfrecords/train_2ms/987.tfrecords"
            string_val: "topology/tfrecords/train_2ms/988.tfrecords"
            string_val: "topology/tfrecords/train_2ms/98.tfrecords"
            string_val: "topology/tfrecords/train_2ms/990.tfrecords"
            string_val: "topology/tfrecords/train_2ms/991.tfrecords"
            string_val: "topology/tfrecords/train_2ms/992.tfrecords"
            string_val: "topology/tfrecords/train_2ms/996.tfrecords"
            string_val: "topology/tfrecords/train_2ms/998.tfrecords"
            string_val: "topology/tfrecords/train_2ms/999.tfrecords"
            string_val: "topology/tfrecords/train_2ms/9.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "OptimizeDataset/tensors/normalize_tensors/component_0:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2951
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleDataset"
      op: "ShuffleDataset"
      input: "OptimizeDataset/TensorSliceDataset:handle:0"
      input: "OptimizeDataset/buffer_size:output:0"
      input: "OptimizeDataset/seed:output:0"
      input: "OptimizeDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/cycle_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/block_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/sloppy"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_output_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/prefetch_input_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 8
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ExperimentalParallelInterleaveDataset"
      op: "ExperimentalParallelInterleaveDataset"
      input: "OptimizeDataset/ShuffleDataset:handle:0"
      input: "OptimizeDataset/cycle_length:output:0"
      input: "OptimizeDataset/block_length:output:0"
      input: "OptimizeDataset/sloppy:output:0"
      input: "OptimizeDataset/buffer_output_elements:output:0"
      input: "OptimizeDataset/prefetch_input_elements:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_tf_data_experimental_parallel_interleave_<class \'abc.ABCMeta\'>_40"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleAndRepeatDataset"
      op: "ShuffleAndRepeatDataset"
      input: "OptimizeDataset/ExperimentalParallelInterleaveDataset:handle:0"
      input: "OptimizeDataset/buffer_size_1:output:0"
      input: "OptimizeDataset/seed_1:output:0"
      input: "OptimizeDataset/seed2_1:output:0"
      input: "OptimizeDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/num_parallel_calls"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "OptimizeDataset/ShuffleAndRepeatDataset:handle:0"
      input: "OptimizeDataset/num_parallel_calls:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map_<lambda>_99"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "sloppy"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/PrefetchDataset"
      op: "PrefetchDataset"
      input: "OptimizeDataset/ParallelMapDataset:handle:0"
      input: "OptimizeDataset/buffer_size_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/PrefetchDataset:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 38
  min_consumer: 12
}
